"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/lucide-react";
exports.ids = ["vendor-chunks/lucide-react"];
exports.modules = {

/***/ "(pages-dir-node)/./node_modules/lucide-react/dist/cjs/lucide-react.js":
/*!************************************************************!*\
  !*** ./node_modules/lucide-react/dist/cjs/lucide-react.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * lucide-react v0.275.0 - ISC\n */ \nvar react = __webpack_require__(/*! react */ \"react\");\nvar defaultAttributes = {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n};\nconst toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst createLucideIcon = (iconName, iconNode)=>{\n    const Component = react.forwardRef(({ color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, children, ...rest }, ref)=>react.createElement(\"svg\", {\n            ref,\n            ...defaultAttributes,\n            width: size,\n            height: size,\n            stroke: color,\n            strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n            className: `lucide lucide-${toKebabCase(iconName)}`,\n            ...rest\n        }, [\n            ...iconNode.map(([tag, attrs])=>react.createElement(tag, attrs)),\n            ...(Array.isArray(children) ? children : [\n                children\n            ]) || []\n        ]));\n    Component.displayName = `${iconName}`;\n    return Component;\n};\nconst Accessibility = createLucideIcon(\"Accessibility\", [\n    [\n        \"circle\",\n        {\n            cx: \"16\",\n            cy: \"4\",\n            r: \"1\",\n            key: \"1grugj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 19 1-7-6 1\",\n            key: \"r0i19z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 8 3-3 5.5 3-2.36 3.5\",\n            key: \"9ptxx2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.24 14.5a5 5 0 0 0 6.88 6\",\n            key: \"10kmtu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.76 17.5a5 5 0 0 0-6.88-6\",\n            key: \"2qq6rc\"\n        }\n    ]\n]);\nconst ActivitySquare = createLucideIcon(\"ActivitySquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 12h-2l-2 5-2-10-2 5H7\",\n            key: \"15hlnc\"\n        }\n    ]\n]);\nconst Activity = createLucideIcon(\"Activity\", [\n    [\n        \"path\",\n        {\n            d: \"M22 12h-4l-3 9L9 3l-3 9H2\",\n            key: \"d5dnw9\"\n        }\n    ]\n]);\nconst AirVent = createLucideIcon(\"AirVent\", [\n    [\n        \"path\",\n        {\n            d: \"M6 12H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\",\n            key: \"larmp2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 8h12\",\n            key: \"6g4wlu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.3 17.7a2.5 2.5 0 0 1-3.16 3.83 2.53 2.53 0 0 1-1.14-2V12\",\n            key: \"1bo8pg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.6 15.6A2 2 0 1 0 10 17v-5\",\n            key: \"t9h90c\"\n        }\n    ]\n]);\nconst Airplay = createLucideIcon(\"Airplay\", [\n    [\n        \"path\",\n        {\n            d: \"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\",\n            key: \"ns4c3b\"\n        }\n    ],\n    [\n        \"polygon\",\n        {\n            points: \"12 15 17 21 7 21 12 15\",\n            key: \"1sy95i\"\n        }\n    ]\n]);\nconst AlarmCheck = createLucideIcon(\"AlarmCheck\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"13\",\n            r: \"8\",\n            key: \"3y4lt7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 3 2 6\",\n            key: \"18tl5t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 6-3-3\",\n            key: \"1opdir\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.38 18.7 4 21\",\n            key: \"17xu3x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.64 18.67 20 21\",\n            key: \"kv2oe2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 13 2 2 4-4\",\n            key: \"6343dt\"\n        }\n    ]\n]);\nconst AlarmClockOff = createLucideIcon(\"AlarmClockOff\", [\n    [\n        \"path\",\n        {\n            d: \"M6.87 6.87a8 8 0 1 0 11.26 11.26\",\n            key: \"3on8tj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.9 14.25a8 8 0 0 0-9.15-9.15\",\n            key: \"15ghsc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 6-3-3\",\n            key: \"1opdir\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.26 18.67 4 21\",\n            key: \"yzmioq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 4 2 6\",\n            key: \"1ycko6\"\n        }\n    ]\n]);\nconst AlarmClock = createLucideIcon(\"AlarmClock\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"13\",\n            r: \"8\",\n            key: \"3y4lt7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 9v4l2 2\",\n            key: \"1c63tq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 3 2 6\",\n            key: \"18tl5t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 6-3-3\",\n            key: \"1opdir\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.38 18.7 4 21\",\n            key: \"17xu3x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.64 18.67 20 21\",\n            key: \"kv2oe2\"\n        }\n    ]\n]);\nconst AlarmMinus = createLucideIcon(\"AlarmMinus\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"13\",\n            r: \"8\",\n            key: \"3y4lt7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 3 2 6\",\n            key: \"18tl5t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 6-3-3\",\n            key: \"1opdir\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.38 18.7 4 21\",\n            key: \"17xu3x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.64 18.67 20 21\",\n            key: \"kv2oe2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 13h6\",\n            key: \"1uhe8q\"\n        }\n    ]\n]);\nconst AlarmPlus = createLucideIcon(\"AlarmPlus\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"13\",\n            r: \"8\",\n            key: \"3y4lt7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 3 2 6\",\n            key: \"18tl5t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 6-3-3\",\n            key: \"1opdir\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.38 18.7 4 21\",\n            key: \"17xu3x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.64 18.67 20 21\",\n            key: \"kv2oe2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10v6\",\n            key: \"1bos4e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 13h6\",\n            key: \"1uhe8q\"\n        }\n    ]\n]);\nconst Album = createLucideIcon(\"Album\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"11 3 11 11 14 8 17 11 17 3\",\n            key: \"1wcwz3\"\n        }\n    ]\n]);\nconst AlertCircle = createLucideIcon(\"AlertCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"8\",\n            y2: \"12\",\n            key: \"1pkeuh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"4dfq90\"\n        }\n    ]\n]);\nconst AlertOctagon = createLucideIcon(\"AlertOctagon\", [\n    [\n        \"polygon\",\n        {\n            points: \"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\",\n            key: \"h1p8hx\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"8\",\n            y2: \"12\",\n            key: \"1pkeuh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"4dfq90\"\n        }\n    ]\n]);\nconst AlertTriangle = createLucideIcon(\"AlertTriangle\", [\n    [\n        \"path\",\n        {\n            d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\",\n            key: \"c3ski4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 9v4\",\n            key: \"juzpu7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17h.01\",\n            key: \"p32p05\"\n        }\n    ]\n]);\nconst AlignCenterHorizontal = createLucideIcon(\"AlignCenterHorizontal\", [\n    [\n        \"path\",\n        {\n            d: \"M2 12h20\",\n            key: \"9i4pu4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 16v4a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-4\",\n            key: \"11f1s0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 8V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4\",\n            key: \"t14dx9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 16v1a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-1\",\n            key: \"1w07xs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 8V7c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v1\",\n            key: \"1apec2\"\n        }\n    ]\n]);\nconst AlignCenterVertical = createLucideIcon(\"AlignCenterVertical\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2v20\",\n            key: \"t6zp3m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 10H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h4\",\n            key: \"14d6g8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 10h4a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-4\",\n            key: \"1e2lrw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 20H7a2 2 0 0 1-2-2v-2c0-1.1.9-2 2-2h1\",\n            key: \"1fkdwx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 14h1a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-1\",\n            key: \"1euafb\"\n        }\n    ]\n]);\nconst AlignCenter = createLucideIcon(\"AlignCenter\", [\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"3\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"1fp77t\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"17\",\n            x2: \"7\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"rsh8ii\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"5\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"1t0tuv\"\n        }\n    ]\n]);\nconst AlignEndHorizontal = createLucideIcon(\"AlignEndHorizontal\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"16\",\n            x: \"4\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"z5wdxg\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"9\",\n            x: \"14\",\n            y: \"9\",\n            rx: \"2\",\n            key: \"um7a8w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 22H2\",\n            key: \"19qnx5\"\n        }\n    ]\n]);\nconst AlignEndVertical = createLucideIcon(\"AlignEndVertical\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"6\",\n            x: \"2\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"10wcwx\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"9\",\n            height: \"6\",\n            x: \"9\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"4p5bwg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 22V2\",\n            key: \"12ipfv\"\n        }\n    ]\n]);\nconst AlignHorizontalDistributeCenter = createLucideIcon(\"AlignHorizontalDistributeCenter\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"14\",\n            x: \"4\",\n            y: \"5\",\n            rx: \"2\",\n            key: \"1wwnby\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"10\",\n            x: \"14\",\n            y: \"7\",\n            rx: \"2\",\n            key: \"1fe6j6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 22v-5\",\n            key: \"4b6g73\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 7V2\",\n            key: \"hnrr36\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 22v-3\",\n            key: \"1r4jpn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 5V2\",\n            key: \"liy1u9\"\n        }\n    ]\n]);\nconst AlignHorizontalDistributeEnd = createLucideIcon(\"AlignHorizontalDistributeEnd\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"14\",\n            x: \"4\",\n            y: \"5\",\n            rx: \"2\",\n            key: \"1wwnby\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"10\",\n            x: \"14\",\n            y: \"7\",\n            rx: \"2\",\n            key: \"1fe6j6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 2v20\",\n            key: \"uyc634\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 2v20\",\n            key: \"1tx262\"\n        }\n    ]\n]);\nconst AlignHorizontalDistributeStart = createLucideIcon(\"AlignHorizontalDistributeStart\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"14\",\n            x: \"4\",\n            y: \"5\",\n            rx: \"2\",\n            key: \"1wwnby\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"10\",\n            x: \"14\",\n            y: \"7\",\n            rx: \"2\",\n            key: \"1fe6j6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 2v20\",\n            key: \"gtpd5x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 2v20\",\n            key: \"tg6bpw\"\n        }\n    ]\n]);\nconst AlignHorizontalJustifyCenter = createLucideIcon(\"AlignHorizontalJustifyCenter\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"14\",\n            x: \"2\",\n            y: \"5\",\n            rx: \"2\",\n            key: \"dy24zr\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"10\",\n            x: \"16\",\n            y: \"7\",\n            rx: \"2\",\n            key: \"13zkjt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v20\",\n            key: \"t6zp3m\"\n        }\n    ]\n]);\nconst AlignHorizontalJustifyEnd = createLucideIcon(\"AlignHorizontalJustifyEnd\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"14\",\n            x: \"2\",\n            y: \"5\",\n            rx: \"2\",\n            key: \"dy24zr\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"10\",\n            x: \"12\",\n            y: \"7\",\n            rx: \"2\",\n            key: \"1ht384\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 2v20\",\n            key: \"40qfg1\"\n        }\n    ]\n]);\nconst AlignHorizontalJustifyStart = createLucideIcon(\"AlignHorizontalJustifyStart\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"14\",\n            x: \"6\",\n            y: \"5\",\n            rx: \"2\",\n            key: \"hsirpf\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"10\",\n            x: \"16\",\n            y: \"7\",\n            rx: \"2\",\n            key: \"13zkjt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 2v20\",\n            key: \"1ivd8o\"\n        }\n    ]\n]);\nconst AlignHorizontalSpaceAround = createLucideIcon(\"AlignHorizontalSpaceAround\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"10\",\n            x: \"9\",\n            y: \"7\",\n            rx: \"2\",\n            key: \"yn7j0q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 22V2\",\n            key: \"tsjzd3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 22V2\",\n            key: \"1bnhr8\"\n        }\n    ]\n]);\nconst AlignHorizontalSpaceBetween = createLucideIcon(\"AlignHorizontalSpaceBetween\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"14\",\n            x: \"3\",\n            y: \"5\",\n            rx: \"2\",\n            key: \"j77dae\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"10\",\n            x: \"15\",\n            y: \"7\",\n            rx: \"2\",\n            key: \"bq30hj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 2v20\",\n            key: \"1d2pfg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 2v20\",\n            key: \"p059bm\"\n        }\n    ]\n]);\nconst AlignJustify = createLucideIcon(\"AlignJustify\", [\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"4m8b97\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"10d38w\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"kwyyxn\"\n        }\n    ]\n]);\nconst AlignLeft = createLucideIcon(\"AlignLeft\", [\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"3\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"1fp77t\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"3\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"v6grx8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"17\",\n            x2: \"3\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"1awlsn\"\n        }\n    ]\n]);\nconst AlignRight = createLucideIcon(\"AlignRight\", [\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"3\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"1fp77t\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"9\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1uyos4\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"7\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"1g9eri\"\n        }\n    ]\n]);\nconst AlignStartHorizontal = createLucideIcon(\"AlignStartHorizontal\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"16\",\n            x: \"4\",\n            y: \"6\",\n            rx: \"2\",\n            key: \"1n4dg1\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"9\",\n            x: \"14\",\n            y: \"6\",\n            rx: \"2\",\n            key: \"17khns\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 2H2\",\n            key: \"fhrpnj\"\n        }\n    ]\n]);\nconst AlignStartVertical = createLucideIcon(\"AlignStartVertical\", [\n    [\n        \"rect\",\n        {\n            width: \"9\",\n            height: \"6\",\n            x: \"6\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"lpm2y7\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"6\",\n            x: \"6\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"rdj6ps\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 2v20\",\n            key: \"1ivd8o\"\n        }\n    ]\n]);\nconst AlignVerticalDistributeCenter = createLucideIcon(\"AlignVerticalDistributeCenter\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"6\",\n            x: \"5\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"jmoj9s\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"6\",\n            x: \"7\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"aza5on\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 7h-5\",\n            key: \"o2endc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 7H1\",\n            key: \"105l6j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 17h-3\",\n            key: \"1lwga1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 17H2\",\n            key: \"1gx9xc\"\n        }\n    ]\n]);\nconst AlignVerticalDistributeEnd = createLucideIcon(\"AlignVerticalDistributeEnd\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"6\",\n            x: \"5\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"jmoj9s\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"6\",\n            x: \"7\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"aza5on\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 20h20\",\n            key: \"owomy5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 10h20\",\n            key: \"1ir3d8\"\n        }\n    ]\n]);\nconst AlignVerticalDistributeStart = createLucideIcon(\"AlignVerticalDistributeStart\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"6\",\n            x: \"5\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"jmoj9s\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"6\",\n            x: \"7\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"aza5on\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 14h20\",\n            key: \"myj16y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 4h20\",\n            key: \"mda7wb\"\n        }\n    ]\n]);\nconst AlignVerticalJustifyCenter = createLucideIcon(\"AlignVerticalJustifyCenter\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"6\",\n            x: \"5\",\n            y: \"16\",\n            rx: \"2\",\n            key: \"1i8z2d\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"6\",\n            x: \"7\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"ypihtt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12h20\",\n            key: \"9i4pu4\"\n        }\n    ]\n]);\nconst AlignVerticalJustifyEnd = createLucideIcon(\"AlignVerticalJustifyEnd\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"6\",\n            x: \"5\",\n            y: \"12\",\n            rx: \"2\",\n            key: \"4l4tp2\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"6\",\n            x: \"7\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"ypihtt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 22h20\",\n            key: \"272qi7\"\n        }\n    ]\n]);\nconst AlignVerticalJustifyStart = createLucideIcon(\"AlignVerticalJustifyStart\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"6\",\n            x: \"5\",\n            y: \"16\",\n            rx: \"2\",\n            key: \"1i8z2d\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"6\",\n            x: \"7\",\n            y: \"6\",\n            rx: \"2\",\n            key: \"13squh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 2h20\",\n            key: \"1ennik\"\n        }\n    ]\n]);\nconst AlignVerticalSpaceAround = createLucideIcon(\"AlignVerticalSpaceAround\", [\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"6\",\n            x: \"7\",\n            y: \"9\",\n            rx: \"2\",\n            key: \"b1zbii\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 20H2\",\n            key: \"1p1f7z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 4H2\",\n            key: \"1b7qnq\"\n        }\n    ]\n]);\nconst AlignVerticalSpaceBetween = createLucideIcon(\"AlignVerticalSpaceBetween\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"6\",\n            x: \"5\",\n            y: \"15\",\n            rx: \"2\",\n            key: \"1w91an\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"6\",\n            x: \"7\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"17wqzy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 21h20\",\n            key: \"1nyx9w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 3h20\",\n            key: \"91anmk\"\n        }\n    ]\n]);\nconst Ampersand = createLucideIcon(\"Ampersand\", [\n    [\n        \"path\",\n        {\n            d: \"M17.5 12c0 4.4-3.6 8-8 8A4.5 4.5 0 0 1 5 15.5c0-6 8-4 8-8.5a3 3 0 1 0-6 0c0 3 2.5 8.5 12 13\",\n            key: \"1o9ehi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12h3\",\n            key: \"4uvgyw\"\n        }\n    ]\n]);\nconst Ampersands = createLucideIcon(\"Ampersands\", [\n    [\n        \"path\",\n        {\n            d: \"M10 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5\",\n            key: \"12lh1k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5\",\n            key: \"173c68\"\n        }\n    ]\n]);\nconst Anchor = createLucideIcon(\"Anchor\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"5\",\n            r: \"3\",\n            key: \"rqqgnr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22\",\n            y2: \"8\",\n            key: \"abakz7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 12H2a10 10 0 0 0 20 0h-3\",\n            key: \"1hv3nh\"\n        }\n    ]\n]);\nconst Angry = createLucideIcon(\"Angry\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16s-1.5-2-4-2-4 2-4 2\",\n            key: \"epbg0q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.5 8 10 9\",\n            key: \"olxxln\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 9 2.5-1\",\n            key: \"1j6cij\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 10h0\",\n            key: \"1vxvly\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 10h0\",\n            key: \"1j6oav\"\n        }\n    ]\n]);\nconst Annoyed = createLucideIcon(\"Annoyed\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 15h8\",\n            key: \"45n4r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 9h2\",\n            key: \"1g203m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 9h2\",\n            key: \"116p9w\"\n        }\n    ]\n]);\nconst Antenna = createLucideIcon(\"Antenna\", [\n    [\n        \"path\",\n        {\n            d: \"M2 12 7 2\",\n            key: \"117k30\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 12 5-10\",\n            key: \"1tvx22\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 12 5-10\",\n            key: \"ev1o1a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 12 5-10\",\n            key: \"1e4ti3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.5 7h15\",\n            key: \"vlsxkz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16v6\",\n            key: \"c8a4gj\"\n        }\n    ]\n]);\nconst Aperture = createLucideIcon(\"Aperture\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14.31\",\n            x2: \"20.05\",\n            y1: \"8\",\n            y2: \"17.94\",\n            key: \"jdes2e\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9.69\",\n            x2: \"21.17\",\n            y1: \"8\",\n            y2: \"8\",\n            key: \"1gubuk\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"7.38\",\n            x2: \"13.12\",\n            y1: \"12\",\n            y2: \"2.06\",\n            key: \"1m4d1n\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9.69\",\n            x2: \"3.95\",\n            y1: \"16\",\n            y2: \"6.06\",\n            key: \"1wye2p\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14.31\",\n            x2: \"2.83\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"1l9f4x\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16.62\",\n            x2: \"10.88\",\n            y1: \"12\",\n            y2: \"21.94\",\n            key: \"1jjvfs\"\n        }\n    ]\n]);\nconst AppWindow = createLucideIcon(\"AppWindow\", [\n    [\n        \"rect\",\n        {\n            x: \"2\",\n            y: \"4\",\n            width: \"20\",\n            height: \"16\",\n            rx: \"2\",\n            key: \"izxlao\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 4v4\",\n            key: \"pp8u80\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 8h20\",\n            key: \"d11cs7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 4v4\",\n            key: \"1svtjw\"\n        }\n    ]\n]);\nconst Apple = createLucideIcon(\"Apple\", [\n    [\n        \"path\",\n        {\n            d: \"M12 20.94c1.5 0 2.75 1.06 4 1.06 3 0 6-8 6-12.22A4.91 4.91 0 0 0 17 5c-2.22 0-4 1.44-5 2-1-.56-2.78-2-5-2a4.9 4.9 0 0 0-5 4.78C2 14 5 22 8 22c1.25 0 2.5-1.06 4-1.06Z\",\n            key: \"3s7exb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 2c1 .5 2 2 2 5\",\n            key: \"fcco2y\"\n        }\n    ]\n]);\nconst ArchiveRestore = createLucideIcon(\"ArchiveRestore\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"5\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"1wp1u1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 8v11a2 2 0 0 0 2 2h2\",\n            key: \"tvwodi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 8v11a2 2 0 0 1-2 2h-2\",\n            key: \"1gkqxj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 15 3-3 3 3\",\n            key: \"1pd0qc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v9\",\n            key: \"192myk\"\n        }\n    ]\n]);\nconst ArchiveX = createLucideIcon(\"ArchiveX\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"5\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"1wp1u1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8\",\n            key: \"1s80jp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.5 17 5-5\",\n            key: \"nakeu6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.5 12 5 5\",\n            key: \"1hccrj\"\n        }\n    ]\n]);\nconst Archive = createLucideIcon(\"Archive\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"5\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"1wp1u1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8\",\n            key: \"1s80jp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 12h4\",\n            key: \"a56b0p\"\n        }\n    ]\n]);\nconst AreaChart = createLucideIcon(\"AreaChart\", [\n    [\n        \"path\",\n        {\n            d: \"M3 3v18h18\",\n            key: \"1s2lah\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 12v5h12V8l-5 5-4-4Z\",\n            key: \"zxz28u\"\n        }\n    ]\n]);\nconst Armchair = createLucideIcon(\"Armchair\", [\n    [\n        \"path\",\n        {\n            d: \"M19 9V6a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v3\",\n            key: \"irtipd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 11v5a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v2H7v-2a2 2 0 0 0-4 0Z\",\n            key: \"1ed1m0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 18v2\",\n            key: \"ppbyun\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 18v2\",\n            key: \"gy7782\"\n        }\n    ]\n]);\nconst ArrowBigDownDash = createLucideIcon(\"ArrowBigDownDash\", [\n    [\n        \"path\",\n        {\n            d: \"M15 5H9\",\n            key: \"1tp3ed\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 9v3h4l-7 7-7-7h4V9h6z\",\n            key: \"oscb9h\"\n        }\n    ]\n]);\nconst ArrowBigDown = createLucideIcon(\"ArrowBigDown\", [\n    [\n        \"path\",\n        {\n            d: \"M15 6v6h4l-7 7-7-7h4V6h6z\",\n            key: \"1thax2\"\n        }\n    ]\n]);\nconst ArrowBigLeftDash = createLucideIcon(\"ArrowBigLeftDash\", [\n    [\n        \"path\",\n        {\n            d: \"M19 15V9\",\n            key: \"1hci5f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 15h-3v4l-7-7 7-7v4h3v6z\",\n            key: \"16tjna\"\n        }\n    ]\n]);\nconst ArrowBigLeft = createLucideIcon(\"ArrowBigLeft\", [\n    [\n        \"path\",\n        {\n            d: \"M18 15h-6v4l-7-7 7-7v4h6v6z\",\n            key: \"lbrdak\"\n        }\n    ]\n]);\nconst ArrowBigRightDash = createLucideIcon(\"ArrowBigRightDash\", [\n    [\n        \"path\",\n        {\n            d: \"M5 9v6\",\n            key: \"158jrl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 9h3V5l7 7-7 7v-4H9V9z\",\n            key: \"1sg2xn\"\n        }\n    ]\n]);\nconst ArrowBigRight = createLucideIcon(\"ArrowBigRight\", [\n    [\n        \"path\",\n        {\n            d: \"M6 9h6V5l7 7-7 7v-4H6V9z\",\n            key: \"7fvt9c\"\n        }\n    ]\n]);\nconst ArrowBigUpDash = createLucideIcon(\"ArrowBigUpDash\", [\n    [\n        \"path\",\n        {\n            d: \"M9 19h6\",\n            key: \"456am0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 15v-3H5l7-7 7 7h-4v3H9z\",\n            key: \"1r2uve\"\n        }\n    ]\n]);\nconst ArrowBigUp = createLucideIcon(\"ArrowBigUp\", [\n    [\n        \"path\",\n        {\n            d: \"M9 18v-6H5l7-7 7 7h-4v6H9z\",\n            key: \"1x06kx\"\n        }\n    ]\n]);\nconst ArrowDown01 = createLucideIcon(\"ArrowDown01\", [\n    [\n        \"path\",\n        {\n            d: \"m3 16 4 4 4-4\",\n            key: \"1co6wj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20V4\",\n            key: \"1yoxec\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"15\",\n            y: \"4\",\n            width: \"4\",\n            height: \"6\",\n            ry: \"2\",\n            key: \"1bwicg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 20v-6h-2\",\n            key: \"1qp1so\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 20h4\",\n            key: \"1j968p\"\n        }\n    ]\n]);\nconst ArrowDown10 = createLucideIcon(\"ArrowDown10\", [\n    [\n        \"path\",\n        {\n            d: \"m3 16 4 4 4-4\",\n            key: \"1co6wj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20V4\",\n            key: \"1yoxec\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 10V4h-2\",\n            key: \"zcsr5x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 10h4\",\n            key: \"id2lce\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"15\",\n            y: \"14\",\n            width: \"4\",\n            height: \"6\",\n            ry: \"2\",\n            key: \"33xykx\"\n        }\n    ]\n]);\nconst ArrowDownAZ = createLucideIcon(\"ArrowDownAZ\", [\n    [\n        \"path\",\n        {\n            d: \"m3 16 4 4 4-4\",\n            key: \"1co6wj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20V4\",\n            key: \"1yoxec\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 8h-5\",\n            key: \"1vsyxs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 10V6.5a2.5 2.5 0 0 1 5 0V10\",\n            key: \"ag13bf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 14h5l-5 6h5\",\n            key: \"ur5jdg\"\n        }\n    ]\n]);\nconst ArrowDownCircle = createLucideIcon(\"ArrowDownCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v8\",\n            key: \"napkw2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 12 4 4 4-4\",\n            key: \"k98ssh\"\n        }\n    ]\n]);\nconst ArrowDownFromLine = createLucideIcon(\"ArrowDownFromLine\", [\n    [\n        \"path\",\n        {\n            d: \"M19 3H5\",\n            key: \"1236rx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 21V7\",\n            key: \"gj6g52\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 15 6 6 6-6\",\n            key: \"h15q88\"\n        }\n    ]\n]);\nconst ArrowDownLeftFromCircle = createLucideIcon(\"ArrowDownLeftFromCircle\", [\n    [\n        \"path\",\n        {\n            d: \"M2 12a10 10 0 1 1 10 10\",\n            key: \"1yn6ov\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 22 10-10\",\n            key: \"28ilpk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 22H2v-6\",\n            key: \"sulq54\"\n        }\n    ]\n]);\nconst ArrowDownLeftSquare = createLucideIcon(\"ArrowDownLeftSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 8-8 8\",\n            key: \"166keh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16H8V8\",\n            key: \"1w2ppm\"\n        }\n    ]\n]);\nconst ArrowDownLeft = createLucideIcon(\"ArrowDownLeft\", [\n    [\n        \"path\",\n        {\n            d: \"M17 7 7 17\",\n            key: \"15tmo1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 17H7V7\",\n            key: \"1org7z\"\n        }\n    ]\n]);\nconst ArrowDownNarrowWide = createLucideIcon(\"ArrowDownNarrowWide\", [\n    [\n        \"path\",\n        {\n            d: \"m3 16 4 4 4-4\",\n            key: \"1co6wj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20V4\",\n            key: \"1yoxec\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 4h4\",\n            key: \"6d7r33\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 8h7\",\n            key: \"djye34\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 12h10\",\n            key: \"1438ji\"\n        }\n    ]\n]);\nconst ArrowDownRightFromCircle = createLucideIcon(\"ArrowDownRightFromCircle\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22a10 10 0 1 1 10-10\",\n            key: \"130bv5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 22 12 12\",\n            key: \"131aw7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 16v6h-6\",\n            key: \"1gvm70\"\n        }\n    ]\n]);\nconst ArrowDownRightSquare = createLucideIcon(\"ArrowDownRightSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 8 8 8\",\n            key: \"1imecy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8v8H8\",\n            key: \"1lbpgo\"\n        }\n    ]\n]);\nconst ArrowDownRight = createLucideIcon(\"ArrowDownRight\", [\n    [\n        \"path\",\n        {\n            d: \"m7 7 10 10\",\n            key: \"1fmybs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 7v10H7\",\n            key: \"6fjiku\"\n        }\n    ]\n]);\nconst ArrowDownSquare = createLucideIcon(\"ArrowDownSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v8\",\n            key: \"napkw2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 12 4 4 4-4\",\n            key: \"k98ssh\"\n        }\n    ]\n]);\nconst ArrowDownToDot = createLucideIcon(\"ArrowDownToDot\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2v14\",\n            key: \"jyx4ut\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 9-7 7-7-7\",\n            key: \"1oe3oy\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"21\",\n            r: \"1\",\n            key: \"o0uj5v\"\n        }\n    ]\n]);\nconst ArrowDownToLine = createLucideIcon(\"ArrowDownToLine\", [\n    [\n        \"path\",\n        {\n            d: \"M12 17V3\",\n            key: \"1cwfxf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 11 6 6 6-6\",\n            key: \"12ii2o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 21H5\",\n            key: \"150jfl\"\n        }\n    ]\n]);\nconst ArrowDownUp = createLucideIcon(\"ArrowDownUp\", [\n    [\n        \"path\",\n        {\n            d: \"m3 16 4 4 4-4\",\n            key: \"1co6wj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20V4\",\n            key: \"1yoxec\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 8-4-4-4 4\",\n            key: \"1c9v7m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 4v16\",\n            key: \"7dpous\"\n        }\n    ]\n]);\nconst ArrowDownWideNarrow = createLucideIcon(\"ArrowDownWideNarrow\", [\n    [\n        \"path\",\n        {\n            d: \"m3 16 4 4 4-4\",\n            key: \"1co6wj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20V4\",\n            key: \"1yoxec\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 4h10\",\n            key: \"1w87gc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 8h7\",\n            key: \"djye34\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 12h4\",\n            key: \"q8tih4\"\n        }\n    ]\n]);\nconst ArrowDownZA = createLucideIcon(\"ArrowDownZA\", [\n    [\n        \"path\",\n        {\n            d: \"m3 16 4 4 4-4\",\n            key: \"1co6wj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 4v16\",\n            key: \"1glfcx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 4h5l-5 6h5\",\n            key: \"8asdl1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 20v-3.5a2.5 2.5 0 0 1 5 0V20\",\n            key: \"r6l5cz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 18h-5\",\n            key: \"18j1r2\"\n        }\n    ]\n]);\nconst ArrowDown = createLucideIcon(\"ArrowDown\", [\n    [\n        \"path\",\n        {\n            d: \"M12 5v14\",\n            key: \"s699le\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 12-7 7-7-7\",\n            key: \"1idqje\"\n        }\n    ]\n]);\nconst ArrowLeftCircle = createLucideIcon(\"ArrowLeftCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12H8\",\n            key: \"1fr5h0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 8-4 4 4 4\",\n            key: \"15vm53\"\n        }\n    ]\n]);\nconst ArrowLeftFromLine = createLucideIcon(\"ArrowLeftFromLine\", [\n    [\n        \"path\",\n        {\n            d: \"m9 6-6 6 6 6\",\n            key: \"7v63n9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12h14\",\n            key: \"13k4hi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 19V5\",\n            key: \"b4bplr\"\n        }\n    ]\n]);\nconst ArrowLeftRight = createLucideIcon(\"ArrowLeftRight\", [\n    [\n        \"path\",\n        {\n            d: \"M8 3 4 7l4 4\",\n            key: \"9rb6wj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 7h16\",\n            key: \"6tx8e3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 21 4-4-4-4\",\n            key: \"siv7j2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 17H4\",\n            key: \"h6l3hr\"\n        }\n    ]\n]);\nconst ArrowLeftSquare = createLucideIcon(\"ArrowLeftSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 8-4 4 4 4\",\n            key: \"15vm53\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12H8\",\n            key: \"1fr5h0\"\n        }\n    ]\n]);\nconst ArrowLeftToLine = createLucideIcon(\"ArrowLeftToLine\", [\n    [\n        \"path\",\n        {\n            d: \"M3 19V5\",\n            key: \"rwsyhb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 6-6 6 6 6\",\n            key: \"1yhaz7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 12h14\",\n            key: \"uoisry\"\n        }\n    ]\n]);\nconst ArrowLeft = createLucideIcon(\"ArrowLeft\", [\n    [\n        \"path\",\n        {\n            d: \"m12 19-7-7 7-7\",\n            key: \"1l729n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 12H5\",\n            key: \"x3x0zl\"\n        }\n    ]\n]);\nconst ArrowRightCircle = createLucideIcon(\"ArrowRightCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 16 4-4-4-4\",\n            key: \"1i9zcv\"\n        }\n    ]\n]);\nconst ArrowRightFromLine = createLucideIcon(\"ArrowRightFromLine\", [\n    [\n        \"path\",\n        {\n            d: \"M3 5v14\",\n            key: \"1nt18q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12H7\",\n            key: \"13ipq5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 18 6-6-6-6\",\n            key: \"6tx3qv\"\n        }\n    ]\n]);\nconst ArrowRightLeft = createLucideIcon(\"ArrowRightLeft\", [\n    [\n        \"path\",\n        {\n            d: \"m16 3 4 4-4 4\",\n            key: \"1x1c3m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 7H4\",\n            key: \"zbl0bi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 21-4-4 4-4\",\n            key: \"h9nckh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 17h16\",\n            key: \"g4d7ey\"\n        }\n    ]\n]);\nconst ArrowRightSquare = createLucideIcon(\"ArrowRightSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 16 4-4-4-4\",\n            key: \"1i9zcv\"\n        }\n    ]\n]);\nconst ArrowRightToLine = createLucideIcon(\"ArrowRightToLine\", [\n    [\n        \"path\",\n        {\n            d: \"M17 12H3\",\n            key: \"8awo09\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m11 18 6-6-6-6\",\n            key: \"8c2y43\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 5v14\",\n            key: \"nzette\"\n        }\n    ]\n]);\nconst ArrowRight = createLucideIcon(\"ArrowRight\", [\n    [\n        \"path\",\n        {\n            d: \"M5 12h14\",\n            key: \"1ays0h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 5 7 7-7 7\",\n            key: \"xquz4c\"\n        }\n    ]\n]);\nconst ArrowUp01 = createLucideIcon(\"ArrowUp01\", [\n    [\n        \"path\",\n        {\n            d: \"m3 8 4-4 4 4\",\n            key: \"11wl7u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 4v16\",\n            key: \"1glfcx\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"15\",\n            y: \"4\",\n            width: \"4\",\n            height: \"6\",\n            ry: \"2\",\n            key: \"1bwicg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 20v-6h-2\",\n            key: \"1qp1so\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 20h4\",\n            key: \"1j968p\"\n        }\n    ]\n]);\nconst ArrowUp10 = createLucideIcon(\"ArrowUp10\", [\n    [\n        \"path\",\n        {\n            d: \"m3 8 4-4 4 4\",\n            key: \"11wl7u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 4v16\",\n            key: \"1glfcx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 10V4h-2\",\n            key: \"zcsr5x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 10h4\",\n            key: \"id2lce\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"15\",\n            y: \"14\",\n            width: \"4\",\n            height: \"6\",\n            ry: \"2\",\n            key: \"33xykx\"\n        }\n    ]\n]);\nconst ArrowUpAZ = createLucideIcon(\"ArrowUpAZ\", [\n    [\n        \"path\",\n        {\n            d: \"m3 8 4-4 4 4\",\n            key: \"11wl7u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 4v16\",\n            key: \"1glfcx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 8h-5\",\n            key: \"1vsyxs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 10V6.5a2.5 2.5 0 0 1 5 0V10\",\n            key: \"ag13bf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 14h5l-5 6h5\",\n            key: \"ur5jdg\"\n        }\n    ]\n]);\nconst ArrowUpCircle = createLucideIcon(\"ArrowUpCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 12-4-4-4 4\",\n            key: \"177agl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16V8\",\n            key: \"1sbj14\"\n        }\n    ]\n]);\nconst ArrowUpDown = createLucideIcon(\"ArrowUpDown\", [\n    [\n        \"path\",\n        {\n            d: \"m21 16-4 4-4-4\",\n            key: \"f6ql7i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 20V4\",\n            key: \"1ejh1v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 8 4-4 4 4\",\n            key: \"11wl7u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 4v16\",\n            key: \"1glfcx\"\n        }\n    ]\n]);\nconst ArrowUpFromDot = createLucideIcon(\"ArrowUpFromDot\", [\n    [\n        \"path\",\n        {\n            d: \"m5 9 7-7 7 7\",\n            key: \"1hw5ic\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16V2\",\n            key: \"ywoabb\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"21\",\n            r: \"1\",\n            key: \"o0uj5v\"\n        }\n    ]\n]);\nconst ArrowUpFromLine = createLucideIcon(\"ArrowUpFromLine\", [\n    [\n        \"path\",\n        {\n            d: \"m18 9-6-6-6 6\",\n            key: \"kcunyi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 3v14\",\n            key: \"7cf3v8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 21h14\",\n            key: \"11awu3\"\n        }\n    ]\n]);\nconst ArrowUpLeftFromCircle = createLucideIcon(\"ArrowUpLeftFromCircle\", [\n    [\n        \"path\",\n        {\n            d: \"M2 8V2h6\",\n            key: \"hiwtdz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 10 10\",\n            key: \"1oh8rs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2A10 10 0 1 1 2 12\",\n            key: \"rrk4fa\"\n        }\n    ]\n]);\nconst ArrowUpLeftSquare = createLucideIcon(\"ArrowUpLeftSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16V8h8\",\n            key: \"19xb1h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16 8 8\",\n            key: \"1qdy8n\"\n        }\n    ]\n]);\nconst ArrowUpLeft = createLucideIcon(\"ArrowUpLeft\", [\n    [\n        \"path\",\n        {\n            d: \"M7 17V7h10\",\n            key: \"11bw93\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 17 7 7\",\n            key: \"2786uv\"\n        }\n    ]\n]);\nconst ArrowUpNarrowWide = createLucideIcon(\"ArrowUpNarrowWide\", [\n    [\n        \"path\",\n        {\n            d: \"m3 8 4-4 4 4\",\n            key: \"11wl7u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 4v16\",\n            key: \"1glfcx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 12h4\",\n            key: \"q8tih4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 16h7\",\n            key: \"uosisv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 20h10\",\n            key: \"jvxblo\"\n        }\n    ]\n]);\nconst ArrowUpRightFromCircle = createLucideIcon(\"ArrowUpRightFromCircle\", [\n    [\n        \"path\",\n        {\n            d: \"M22 12A10 10 0 1 1 12 2\",\n            key: \"1fm58d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 2 12 12\",\n            key: \"yg2myt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 2h6v6\",\n            key: \"zan5cs\"\n        }\n    ]\n]);\nconst ArrowUpRightSquare = createLucideIcon(\"ArrowUpRightSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 8h8v8\",\n            key: \"b65dnt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 16 8-8\",\n            key: \"13b9ih\"\n        }\n    ]\n]);\nconst ArrowUpRight = createLucideIcon(\"ArrowUpRight\", [\n    [\n        \"path\",\n        {\n            d: \"M7 7h10v10\",\n            key: \"1tivn9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 17 17 7\",\n            key: \"1vkiza\"\n        }\n    ]\n]);\nconst ArrowUpSquare = createLucideIcon(\"ArrowUpSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 12-4-4-4 4\",\n            key: \"177agl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16V8\",\n            key: \"1sbj14\"\n        }\n    ]\n]);\nconst ArrowUpToLine = createLucideIcon(\"ArrowUpToLine\", [\n    [\n        \"path\",\n        {\n            d: \"M5 3h14\",\n            key: \"7usisc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 13-6-6-6 6\",\n            key: \"1kf1n9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7v14\",\n            key: \"1akyts\"\n        }\n    ]\n]);\nconst ArrowUpWideNarrow = createLucideIcon(\"ArrowUpWideNarrow\", [\n    [\n        \"path\",\n        {\n            d: \"m3 8 4-4 4 4\",\n            key: \"11wl7u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 4v16\",\n            key: \"1glfcx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 12h10\",\n            key: \"1438ji\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 16h7\",\n            key: \"uosisv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 20h4\",\n            key: \"1krc32\"\n        }\n    ]\n]);\nconst ArrowUpZA = createLucideIcon(\"ArrowUpZA\", [\n    [\n        \"path\",\n        {\n            d: \"m3 8 4-4 4 4\",\n            key: \"11wl7u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 4v16\",\n            key: \"1glfcx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 4h5l-5 6h5\",\n            key: \"8asdl1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 20v-3.5a2.5 2.5 0 0 1 5 0V20\",\n            key: \"r6l5cz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 18h-5\",\n            key: \"18j1r2\"\n        }\n    ]\n]);\nconst ArrowUp = createLucideIcon(\"ArrowUp\", [\n    [\n        \"path\",\n        {\n            d: \"m5 12 7-7 7 7\",\n            key: \"hav0vg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 19V5\",\n            key: \"x0mq9r\"\n        }\n    ]\n]);\nconst ArrowsUpFromLine = createLucideIcon(\"ArrowsUpFromLine\", [\n    [\n        \"path\",\n        {\n            d: \"m4 6 3-3 3 3\",\n            key: \"9aidw8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 17V3\",\n            key: \"19qxw1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 6 3-3 3 3\",\n            key: \"6iy689\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 17V3\",\n            key: \"o0fmgi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 21h16\",\n            key: \"1h09gz\"\n        }\n    ]\n]);\nconst Asterisk = createLucideIcon(\"Asterisk\", [\n    [\n        \"path\",\n        {\n            d: \"M12 6v12\",\n            key: \"1vza4d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.196 9 6.804 15\",\n            key: \"1ah31z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6.804 9 10.392 6\",\n            key: \"1b6pxd\"\n        }\n    ]\n]);\nconst AtSign = createLucideIcon(\"AtSign\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"4\",\n            key: \"4exip2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-4 8\",\n            key: \"7n84p3\"\n        }\n    ]\n]);\nconst Atom = createLucideIcon(\"Atom\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"41hilf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.2 20.2c2.04-2.03.02-7.36-4.5-11.9-4.54-4.52-9.87-6.54-11.9-4.5-2.04 2.03-.02 7.36 4.5 11.9 4.54 4.52 9.87 6.54 11.9 4.5Z\",\n            key: \"1l2ple\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.7 15.7c4.52-4.54 6.54-9.87 4.5-11.9-2.03-2.04-7.36-.02-11.9 4.5-4.52 4.54-6.54 9.87-4.5 11.9 2.03 2.04 7.36.02 11.9-4.5Z\",\n            key: \"1wam0m\"\n        }\n    ]\n]);\nconst Award = createLucideIcon(\"Award\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"8\",\n            r: \"6\",\n            key: \"1vp47v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.477 12.89 17 22l-5-3-5 3 1.523-9.11\",\n            key: \"em7aur\"\n        }\n    ]\n]);\nconst Axe = createLucideIcon(\"Axe\", [\n    [\n        \"path\",\n        {\n            d: \"m14 12-8.5 8.5a2.12 2.12 0 1 1-3-3L11 9\",\n            key: \"csbz4o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 13 9 7l4-4 6 6h3a8 8 0 0 1-7 7z\",\n            key: \"113wfo\"\n        }\n    ]\n]);\nconst Axis3d = createLucideIcon(\"Axis3d\", [\n    [\n        \"path\",\n        {\n            d: \"M4 4v16h16\",\n            key: \"1s015l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4 20 7-7\",\n            key: \"17qe9y\"\n        }\n    ]\n]);\nconst Baby = createLucideIcon(\"Baby\", [\n    [\n        \"path\",\n        {\n            d: \"M9 12h.01\",\n            key: \"157uk2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 12h.01\",\n            key: \"1k8ypt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 16c.5.3 1.2.5 2 .5s1.5-.2 2-.5\",\n            key: \"1u7htd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 6.3a9 9 0 0 1 1.8 3.9 2 2 0 0 1 0 3.6 9 9 0 0 1-17.6 0 2 2 0 0 1 0-3.6A9 9 0 0 1 12 3c2 0 3.5 1.1 3.5 2.5s-.9 2.5-2 2.5c-.8 0-1.5-.4-1.5-1\",\n            key: \"5yv0yz\"\n        }\n    ]\n]);\nconst Backpack = createLucideIcon(\"Backpack\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20V10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2Z\",\n            key: \"tunmdx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2\",\n            key: \"donm21\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21v-5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v5\",\n            key: \"xk3gvk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 10h8\",\n            key: \"c7uz4u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 18h8\",\n            key: \"1no2b1\"\n        }\n    ]\n]);\nconst BadgeAlert = createLucideIcon(\"BadgeAlert\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"8\",\n            y2: \"12\",\n            key: \"1pkeuh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"4dfq90\"\n        }\n    ]\n]);\nconst BadgeCent = createLucideIcon(\"BadgeCent\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7v10\",\n            key: \"jspqdw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.4 10a4 4 0 1 0 0 4\",\n            key: \"2eqtx8\"\n        }\n    ]\n]);\nconst BadgeCheck = createLucideIcon(\"BadgeCheck\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 12 2 2 4-4\",\n            key: \"dzmm74\"\n        }\n    ]\n]);\nconst BadgeDollarSign = createLucideIcon(\"BadgeDollarSign\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8\",\n            key: \"1h4pet\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18V6\",\n            key: \"zqpxq5\"\n        }\n    ]\n]);\nconst BadgeEuro = createLucideIcon(\"BadgeEuro\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 12h5\",\n            key: \"gblrwe\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 9.4a4 4 0 1 0 0 5.2\",\n            key: \"1makmb\"\n        }\n    ]\n]);\nconst BadgeHelp = createLucideIcon(\"BadgeHelp\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\",\n            key: \"1u773s\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"17\",\n            y2: \"17\",\n            key: \"io3f8k\"\n        }\n    ]\n]);\nconst BadgeIndianRupee = createLucideIcon(\"BadgeIndianRupee\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 8h8\",\n            key: \"1bis0t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 17-5-1h1a4 4 0 0 0 0-8\",\n            key: \"nu2bwa\"\n        }\n    ]\n]);\nconst BadgeInfo = createLucideIcon(\"BadgeInfo\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"16\",\n            y2: \"12\",\n            key: \"1y1yb1\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"8\",\n            y2: \"8\",\n            key: \"110wyk\"\n        }\n    ]\n]);\nconst BadgeJapaneseYen = createLucideIcon(\"BadgeJapaneseYen\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 8 3 3v7\",\n            key: \"17yadx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 11 3-3\",\n            key: \"p4cfq1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 12h6\",\n            key: \"1c52cq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 16h6\",\n            key: \"8wimt3\"\n        }\n    ]\n]);\nconst BadgeMinus = createLucideIcon(\"BadgeMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"16\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1jonct\"\n        }\n    ]\n]);\nconst BadgePercent = createLucideIcon(\"BadgePercent\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 9-6 6\",\n            key: \"1uzhvr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 9h.01\",\n            key: \"1q5me6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 15h.01\",\n            key: \"lqbp3k\"\n        }\n    ]\n]);\nconst BadgePlus = createLucideIcon(\"BadgePlus\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"8\",\n            y2: \"16\",\n            key: \"10p56q\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"16\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1jonct\"\n        }\n    ]\n]);\nconst BadgePoundSterling = createLucideIcon(\"BadgePoundSterling\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h4\",\n            key: \"qz6y1c\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 16V9.5a2.5 2.5 0 0 1 5 0\",\n            key: \"3mlbjk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16h7\",\n            key: \"sbedsn\"\n        }\n    ]\n]);\nconst BadgeRussianRuble = createLucideIcon(\"BadgeRussianRuble\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 16h5\",\n            key: \"1syiyw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 12h5a2 2 0 1 0 0-4h-3v9\",\n            key: \"1ge9c1\"\n        }\n    ]\n]);\nconst BadgeSwissFranc = createLucideIcon(\"BadgeSwissFranc\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 17V8h4\",\n            key: \"1bfq6y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 12h3\",\n            key: \"2eqnfz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 16h4\",\n            key: \"1skf3a\"\n        }\n    ]\n]);\nconst BadgeX = createLucideIcon(\"BadgeX\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"9\",\n            y1: \"9\",\n            y2: \"15\",\n            key: \"f7djnv\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"15\",\n            y1: \"9\",\n            y2: \"15\",\n            key: \"1shsy8\"\n        }\n    ]\n]);\nconst Badge = createLucideIcon(\"Badge\", [\n    [\n        \"path\",\n        {\n            d: \"M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z\",\n            key: \"3c2336\"\n        }\n    ]\n]);\nconst BaggageClaim = createLucideIcon(\"BaggageClaim\", [\n    [\n        \"path\",\n        {\n            d: \"M22 18H6a2 2 0 0 1-2-2V7a2 2 0 0 0-2-2\",\n            key: \"4irg2o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 14V4a2 2 0 0 0-2-2h-1a2 2 0 0 0-2 2v10\",\n            key: \"14fcyx\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"13\",\n            height: \"8\",\n            x: \"8\",\n            y: \"6\",\n            rx: \"1\",\n            key: \"o6oiis\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"20\",\n            r: \"2\",\n            key: \"t9985n\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"20\",\n            r: \"2\",\n            key: \"e5v82j\"\n        }\n    ]\n]);\nconst Ban = createLucideIcon(\"Ban\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.9 4.9 14.2 14.2\",\n            key: \"1m5liu\"\n        }\n    ]\n]);\nconst Banana = createLucideIcon(\"Banana\", [\n    [\n        \"path\",\n        {\n            d: \"M4 13c3.5-2 8-2 10 2a5.5 5.5 0 0 1 8 5\",\n            key: \"1cscit\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.15 17.89c5.52-1.52 8.65-6.89 7-12C11.55 4 11.5 2 13 2c3.22 0 5 5.5 5 8 0 6.5-4.2 12-10.49 12C5.11 22 2 22 2 20c0-1.5 1.14-1.55 3.15-2.11Z\",\n            key: \"1y1nbv\"\n        }\n    ]\n]);\nconst Banknote = createLucideIcon(\"Banknote\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"12\",\n            x: \"2\",\n            y: \"6\",\n            rx: \"2\",\n            key: \"9lu3g6\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"1c9p78\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12h.01M18 12h.01\",\n            key: \"113zkx\"\n        }\n    ]\n]);\nconst BarChart2 = createLucideIcon(\"BarChart2\", [\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"18\",\n            y1: \"20\",\n            y2: \"10\",\n            key: \"1xfpm4\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"20\",\n            y2: \"4\",\n            key: \"be30l9\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"20\",\n            y2: \"14\",\n            key: \"1r4le6\"\n        }\n    ]\n]);\nconst BarChart3 = createLucideIcon(\"BarChart3\", [\n    [\n        \"path\",\n        {\n            d: \"M3 3v18h18\",\n            key: \"1s2lah\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 17V9\",\n            key: \"2bz60n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 17V5\",\n            key: \"1frdt8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 17v-3\",\n            key: \"17ska0\"\n        }\n    ]\n]);\nconst BarChart4 = createLucideIcon(\"BarChart4\", [\n    [\n        \"path\",\n        {\n            d: \"M3 3v18h18\",\n            key: \"1s2lah\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 17V9\",\n            key: \"1fwyjl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 17V5\",\n            key: \"sfb6ij\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 17v-3\",\n            key: \"17ska0\"\n        }\n    ]\n]);\nconst BarChartBig = createLucideIcon(\"BarChartBig\", [\n    [\n        \"path\",\n        {\n            d: \"M3 3v18h18\",\n            key: \"1s2lah\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"4\",\n            height: \"7\",\n            x: \"7\",\n            y: \"10\",\n            rx: \"1\",\n            key: \"14u6mf\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"4\",\n            height: \"12\",\n            x: \"15\",\n            y: \"5\",\n            rx: \"1\",\n            key: \"b3pek6\"\n        }\n    ]\n]);\nconst BarChartHorizontalBig = createLucideIcon(\"BarChartHorizontalBig\", [\n    [\n        \"path\",\n        {\n            d: \"M3 3v18h18\",\n            key: \"1s2lah\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"12\",\n            height: \"4\",\n            x: \"7\",\n            y: \"5\",\n            rx: \"1\",\n            key: \"936jl1\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"4\",\n            x: \"7\",\n            y: \"13\",\n            rx: \"1\",\n            key: \"jqfkpy\"\n        }\n    ]\n]);\nconst BarChartHorizontal = createLucideIcon(\"BarChartHorizontal\", [\n    [\n        \"path\",\n        {\n            d: \"M3 3v18h18\",\n            key: \"1s2lah\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 16h8\",\n            key: \"srdodz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 11h12\",\n            key: \"127s9w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 6h3\",\n            key: \"w9rmul\"\n        }\n    ]\n]);\nconst BarChart = createLucideIcon(\"BarChart\", [\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"20\",\n            y2: \"10\",\n            key: \"1vz5eb\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"18\",\n            y1: \"20\",\n            y2: \"4\",\n            key: \"cun8e5\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"20\",\n            y2: \"16\",\n            key: \"hq0ia6\"\n        }\n    ]\n]);\nconst Baseline = createLucideIcon(\"Baseline\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16\",\n            key: \"14thso\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 16 6-12 6 12\",\n            key: \"1b4byz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ]\n]);\nconst Bath = createLucideIcon(\"Bath\", [\n    [\n        \"path\",\n        {\n            d: \"M9 6 6.5 3.5a1.5 1.5 0 0 0-1-.5C4.683 3 4 3.683 4 4.5V17a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5\",\n            key: \"1r8yf5\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"8\",\n            y1: \"5\",\n            y2: \"7\",\n            key: \"h5g8z4\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1dnqot\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"7\",\n            x2: \"7\",\n            y1: \"19\",\n            y2: \"21\",\n            key: \"16jp00\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"17\",\n            x2: \"17\",\n            y1: \"19\",\n            y2: \"21\",\n            key: \"1pxrnk\"\n        }\n    ]\n]);\nconst BatteryCharging = createLucideIcon(\"BatteryCharging\", [\n    [\n        \"path\",\n        {\n            d: \"M15 7h1a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2h-2\",\n            key: \"1sdynx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 7H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h1\",\n            key: \"1gkd3k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m11 7-3 5h4l-3 5\",\n            key: \"b4a64w\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"22\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"4dh1rd\"\n        }\n    ]\n]);\nconst BatteryFull = createLucideIcon(\"BatteryFull\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"10\",\n            x: \"2\",\n            y: \"7\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1w10f2\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"22\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"4dh1rd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"1wd6dw\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"10\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"haxvl5\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"14\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"c6fn6x\"\n        }\n    ]\n]);\nconst BatteryLow = createLucideIcon(\"BatteryLow\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"10\",\n            x: \"2\",\n            y: \"7\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1w10f2\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"22\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"4dh1rd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"1wd6dw\"\n        }\n    ]\n]);\nconst BatteryMedium = createLucideIcon(\"BatteryMedium\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"10\",\n            x: \"2\",\n            y: \"7\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1w10f2\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"22\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"4dh1rd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"1wd6dw\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"10\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"haxvl5\"\n        }\n    ]\n]);\nconst BatteryWarning = createLucideIcon(\"BatteryWarning\", [\n    [\n        \"path\",\n        {\n            d: \"M14 7h2a2 2 0 0 1 2 2v6c0 1-1 2-2 2h-2\",\n            key: \"1if82c\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 7H4a2 2 0 0 0-2 2v6c0 1 1 2 2 2h2\",\n            key: \"2pdlyl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"22\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"4dh1rd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"10\",\n            y1: \"7\",\n            y2: \"13\",\n            key: \"1uzyus\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"10\",\n            y1: \"17\",\n            y2: \"17.01\",\n            key: \"1y8k4g\"\n        }\n    ]\n]);\nconst Battery = createLucideIcon(\"Battery\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"10\",\n            x: \"2\",\n            y: \"7\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1w10f2\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"22\",\n            y1: \"11\",\n            y2: \"13\",\n            key: \"4dh1rd\"\n        }\n    ]\n]);\nconst Beaker = createLucideIcon(\"Beaker\", [\n    [\n        \"path\",\n        {\n            d: \"M4.5 3h15\",\n            key: \"c7n0jr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 3v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V3\",\n            key: \"m1uhx7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 14h12\",\n            key: \"4cwo0f\"\n        }\n    ]\n]);\nconst BeanOff = createLucideIcon(\"BeanOff\", [\n    [\n        \"path\",\n        {\n            d: \"M9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22a13.96 13.96 0 0 0 9.9-4.1\",\n            key: \"bq3udt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.75 5.093A6 6 0 0 1 22 8c0 2.411-.61 4.68-1.683 6.66\",\n            key: \"17ccse\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.341 10.62a4 4 0 0 0 6.487 1.208M10.62 5.341a4.015 4.015 0 0 1 2.039 2.04\",\n            key: \"18zqgq\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Bean = createLucideIcon(\"Bean\", [\n    [\n        \"path\",\n        {\n            d: \"M10.165 6.598C9.954 7.478 9.64 8.36 9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22c7.732 0 14-6.268 14-14a6 6 0 0 0-11.835-1.402Z\",\n            key: \"1tvzk7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.341 10.62a4 4 0 1 0 5.279-5.28\",\n            key: \"2cyri2\"\n        }\n    ]\n]);\nconst BedDouble = createLucideIcon(\"BedDouble\", [\n    [\n        \"path\",\n        {\n            d: \"M2 20v-8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v8\",\n            key: \"1k78r4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 10V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4\",\n            key: \"fb3tl2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 4v6\",\n            key: \"1dcgq2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 18h20\",\n            key: \"ajqnye\"\n        }\n    ]\n]);\nconst BedSingle = createLucideIcon(\"BedSingle\", [\n    [\n        \"path\",\n        {\n            d: \"M3 20v-8a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8\",\n            key: \"1wm6mi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 10V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v4\",\n            key: \"4k93s5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 18h18\",\n            key: \"1h113x\"\n        }\n    ]\n]);\nconst Bed = createLucideIcon(\"Bed\", [\n    [\n        \"path\",\n        {\n            d: \"M2 4v16\",\n            key: \"vw9hq8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 8h18a2 2 0 0 1 2 2v10\",\n            key: \"1dgv2r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 17h20\",\n            key: \"18nfp3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 8v9\",\n            key: \"1yriud\"\n        }\n    ]\n]);\nconst Beef = createLucideIcon(\"Beef\", [\n    [\n        \"circle\",\n        {\n            cx: \"12.5\",\n            cy: \"8.5\",\n            r: \"2.5\",\n            key: \"9738u8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12.5 2a6.5 6.5 0 0 0-6.22 4.6c-1.1 3.13-.78 3.9-3.18 6.08A3 3 0 0 0 5 18c4 0 8.4-1.8 11.4-4.3A6.5 6.5 0 0 0 12.5 2Z\",\n            key: \"o0f6za\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18.5 6 2.19 4.5a6.48 6.48 0 0 1 .31 2 6.49 6.49 0 0 1-2.6 5.2C15.4 20.2 11 22 7 22a3 3 0 0 1-2.68-1.66L2.4 16.5\",\n            key: \"k7p6i0\"\n        }\n    ]\n]);\nconst Beer = createLucideIcon(\"Beer\", [\n    [\n        \"path\",\n        {\n            d: \"M17 11h1a3 3 0 0 1 0 6h-1\",\n            key: \"1yp76v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 12v6\",\n            key: \"1u1cab\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 12v6\",\n            key: \"1sugkk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5S9.44 2 11 2s2 1.5 3 1.5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z\",\n            key: \"1510fo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8\",\n            key: \"19jb7n\"\n        }\n    ]\n]);\nconst BellDot = createLucideIcon(\"BellDot\", [\n    [\n        \"path\",\n        {\n            d: \"M19.4 14.9C20.2 16.4 21 17 21 17H3s3-2 3-9c0-3.3 2.7-6 6-6 .7 0 1.3.1 1.9.3\",\n            key: \"xcehk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.3 21a1.94 1.94 0 0 0 3.4 0\",\n            key: \"qgo35s\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"8\",\n            r: \"3\",\n            key: \"1g0gzu\"\n        }\n    ]\n]);\nconst BellMinus = createLucideIcon(\"BellMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M18.4 12c.8 3.8 2.6 5 2.6 5H3s3-2 3-9c0-3.3 2.7-6 6-6 1.8 0 3.4.8 4.5 2\",\n            key: \"eck70s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.3 21a1.94 1.94 0 0 0 3.4 0\",\n            key: \"qgo35s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 8h6\",\n            key: \"8ybuxh\"\n        }\n    ]\n]);\nconst BellOff = createLucideIcon(\"BellOff\", [\n    [\n        \"path\",\n        {\n            d: \"M8.7 3A6 6 0 0 1 18 8a21.3 21.3 0 0 0 .6 5\",\n            key: \"o7mx20\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 17H3s3-2 3-9a4.67 4.67 0 0 1 .3-1.7\",\n            key: \"16f1lm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.3 21a1.94 1.94 0 0 0 3.4 0\",\n            key: \"qgo35s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ]\n]);\nconst BellPlus = createLucideIcon(\"BellPlus\", [\n    [\n        \"path\",\n        {\n            d: \"M19.3 14.8C20.1 16.4 21 17 21 17H3s3-2 3-9c0-3.3 2.7-6 6-6 1 0 1.9.2 2.8.7\",\n            key: \"guizqy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.3 21a1.94 1.94 0 0 0 3.4 0\",\n            key: \"qgo35s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 8h6\",\n            key: \"8ybuxh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 5v6\",\n            key: \"g5ayrv\"\n        }\n    ]\n]);\nconst BellRing = createLucideIcon(\"BellRing\", [\n    [\n        \"path\",\n        {\n            d: \"M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9\",\n            key: \"1qo2s2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.3 21a1.94 1.94 0 0 0 3.4 0\",\n            key: \"qgo35s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 2C2.8 3.7 2 5.7 2 8\",\n            key: \"tap9e0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 8c0-2.3-.8-4.3-2-6\",\n            key: \"5bb3ad\"\n        }\n    ]\n]);\nconst Bell = createLucideIcon(\"Bell\", [\n    [\n        \"path\",\n        {\n            d: \"M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9\",\n            key: \"1qo2s2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.3 21a1.94 1.94 0 0 0 3.4 0\",\n            key: \"qgo35s\"\n        }\n    ]\n]);\nconst Bike = createLucideIcon(\"Bike\", [\n    [\n        \"circle\",\n        {\n            cx: \"18.5\",\n            cy: \"17.5\",\n            r: \"3.5\",\n            key: \"15x4ox\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5.5\",\n            cy: \"17.5\",\n            r: \"3.5\",\n            key: \"1noe27\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"15\",\n            cy: \"5\",\n            r: \"1\",\n            key: \"19l28e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17.5V14l-3-3 4-3 2 3h2\",\n            key: \"1npguv\"\n        }\n    ]\n]);\nconst Binary = createLucideIcon(\"Binary\", [\n    [\n        \"rect\",\n        {\n            x: \"14\",\n            y: \"14\",\n            width: \"4\",\n            height: \"6\",\n            rx: \"2\",\n            key: \"p02svl\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"6\",\n            y: \"4\",\n            width: \"4\",\n            height: \"6\",\n            rx: \"2\",\n            key: \"xm4xkj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 20h4\",\n            key: \"1i6q5t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 10h4\",\n            key: \"ru81e7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 14h2v6\",\n            key: \"16z9wg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 4h2v6\",\n            key: \"1idq9u\"\n        }\n    ]\n]);\nconst Biohazard = createLucideIcon(\"Biohazard\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"11.9\",\n            r: \"2\",\n            key: \"e8h31w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.7 3.4c-.9 2.5 0 5.2 2.2 6.7C6.5 9 3.7 9.6 2 11.6\",\n            key: \"17bolr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8.9 10.1 1.4.8\",\n            key: \"15ezny\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.3 3.4c.9 2.5 0 5.2-2.2 6.7 2.4-1.2 5.2-.6 6.9 1.5\",\n            key: \"wtwa5u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15.1 10.1-1.4.8\",\n            key: \"1r0b28\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.7 20.8c-2.6-.4-4.6-2.6-4.7-5.3-.2 2.6-2.1 4.8-4.7 5.2\",\n            key: \"m7qszh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13.9v1.6\",\n            key: \"zfyyim\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.5 5.4c-1-.2-2-.2-3 0\",\n            key: \"1bi9q0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 16.4c.7-.7 1.2-1.6 1.5-2.5\",\n            key: \"1rhjqw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.5 13.9c.3.9.8 1.8 1.5 2.5\",\n            key: \"8gsud3\"\n        }\n    ]\n]);\nconst Bird = createLucideIcon(\"Bird\", [\n    [\n        \"path\",\n        {\n            d: \"M16 7h.01\",\n            key: \"1kdx03\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.4 18H12a8 8 0 0 0 8-8V7a4 4 0 0 0-7.28-2.3L2 20\",\n            key: \"oj1oa8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20 7 2 .5-2 .5\",\n            key: \"12nv4d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 18v3\",\n            key: \"1yea0a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 17.75V21\",\n            key: \"1pymcb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 18a6 6 0 0 0 3.84-10.61\",\n            key: \"1npnn0\"\n        }\n    ]\n]);\nconst Bitcoin = createLucideIcon(\"Bitcoin\", [\n    [\n        \"path\",\n        {\n            d: \"M11.767 19.089c4.924.868 6.14-6.025 1.216-6.894m-1.216 6.894L5.86 18.047m5.908 1.042-.347 1.97m1.563-8.864c4.924.869 6.14-6.025 1.215-6.893m-1.215 6.893-3.94-.694m5.155-6.2L8.29 4.26m5.908 1.042.348-1.97M7.48 20.364l3.126-17.727\",\n            key: \"yr8idg\"\n        }\n    ]\n]);\nconst Blinds = createLucideIcon(\"Blinds\", [\n    [\n        \"path\",\n        {\n            d: \"M3 3h18\",\n            key: \"o7r712\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 7H8\",\n            key: \"gd2fo2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 11H8\",\n            key: \"1ynp89\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 19h10\",\n            key: \"19hjk5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 15h12\",\n            key: \"1yqzne\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 3v14\",\n            key: \"fggqzn\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"4\",\n            cy: \"19\",\n            r: \"2\",\n            key: \"p3m9r0\"\n        }\n    ]\n]);\nconst Blocks = createLucideIcon(\"Blocks\", [\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"14\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"6d4xhi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 21V8a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1H3\",\n            key: \"1fpvtg\"\n        }\n    ]\n]);\nconst BluetoothConnected = createLucideIcon(\"BluetoothConnected\", [\n    [\n        \"path\",\n        {\n            d: \"m7 7 10 10-5 5V2l5 5L7 17\",\n            key: \"1q5490\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"21\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1rsjjs\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"6\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"11yl8c\"\n        }\n    ]\n]);\nconst BluetoothOff = createLucideIcon(\"BluetoothOff\", [\n    [\n        \"path\",\n        {\n            d: \"m17 17-5 5V12l-5 5\",\n            key: \"v5aci6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.5 9.5 17 7l-5-5v4.5\",\n            key: \"1kddfz\"\n        }\n    ]\n]);\nconst BluetoothSearching = createLucideIcon(\"BluetoothSearching\", [\n    [\n        \"path\",\n        {\n            d: \"m7 7 10 10-5 5V2l5 5L7 17\",\n            key: \"1q5490\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.83 14.83a4 4 0 0 0 0-5.66\",\n            key: \"k8tn1j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 12h.01\",\n            key: \"yjnet6\"\n        }\n    ]\n]);\nconst Bluetooth = createLucideIcon(\"Bluetooth\", [\n    [\n        \"path\",\n        {\n            d: \"m7 7 10 10-5 5V2l5 5L7 17\",\n            key: \"1q5490\"\n        }\n    ]\n]);\nconst Bold = createLucideIcon(\"Bold\", [\n    [\n        \"path\",\n        {\n            d: \"M14 12a4 4 0 0 0 0-8H6v8\",\n            key: \"v2sylx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 20a4 4 0 0 0 0-8H6v8Z\",\n            key: \"1ef5ya\"\n        }\n    ]\n]);\nconst Bomb = createLucideIcon(\"Bomb\", [\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"13\",\n            r: \"9\",\n            key: \"hd149\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.5 9.5 1.8-1.8a2.4 2.4 0 0 0 0-3.4l-1.6-1.6a2.41 2.41 0 0 0-3.4 0l-1.8 1.8\",\n            key: \"9owvxi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 2-1.5 1.5\",\n            key: \"ay92ug\"\n        }\n    ]\n]);\nconst Bone = createLucideIcon(\"Bone\", [\n    [\n        \"path\",\n        {\n            d: \"M17 10c.7-.7 1.69 0 2.5 0a2.5 2.5 0 1 0 0-5 .5.5 0 0 1-.5-.5 2.5 2.5 0 1 0-5 0c0 .81.7 1.8 0 2.5l-7 7c-.7.7-1.69 0-2.5 0a2.5 2.5 0 0 0 0 5c.28 0 .5.22.5.5a2.5 2.5 0 1 0 5 0c0-.81-.7-1.8 0-2.5Z\",\n            key: \"w610uw\"\n        }\n    ]\n]);\nconst BookCopy = createLucideIcon(\"BookCopy\", [\n    [\n        \"path\",\n        {\n            d: \"M2 16V4a2 2 0 0 1 2-2h11\",\n            key: \"spzkk5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 14H4a2 2 0 1 0 0 4h1\",\n            key: \"16gqf9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 18H11a2 2 0 1 0 0 4h11V6H11a2 2 0 0 0-2 2v12\",\n            key: \"1owzki\"\n        }\n    ]\n]);\nconst BookDown = createLucideIcon(\"BookDown\", [\n    [\n        \"path\",\n        {\n            d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20\",\n            key: \"t4utmx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13V7\",\n            key: \"h0r20n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 10 3 3 3-3\",\n            key: \"zt5b4y\"\n        }\n    ]\n]);\nconst BookKey = createLucideIcon(\"BookKey\", [\n    [\n        \"path\",\n        {\n            d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H14\",\n            key: \"1gfsgw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 8v14H6.5a2.5 2.5 0 0 1 0-5H20\",\n            key: \"zb0ngp\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"14\",\n            cy: \"8\",\n            r: \"2\",\n            key: \"u49eql\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20 2-4.5 4.5\",\n            key: \"1sppr8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 3 1 1\",\n            key: \"ze14oc\"\n        }\n    ]\n]);\nconst BookLock = createLucideIcon(\"BookLock\", [\n    [\n        \"path\",\n        {\n            d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H10\",\n            key: \"18wgow\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 15v7H6.5a2.5 2.5 0 0 1 0-5H20\",\n            key: \"dpch1j\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"5\",\n            x: \"12\",\n            y: \"6\",\n            rx: \"1\",\n            key: \"9nqwug\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 6V4a2 2 0 1 0-4 0v2\",\n            key: \"1aquzs\"\n        }\n    ]\n]);\nconst BookMarked = createLucideIcon(\"BookMarked\", [\n    [\n        \"path\",\n        {\n            d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20\",\n            key: \"t4utmx\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"10 2 10 10 13 7 16 10 16 2\",\n            key: \"13o6vz\"\n        }\n    ]\n]);\nconst BookMinus = createLucideIcon(\"BookMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20\",\n            key: \"t4utmx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 10h6\",\n            key: \"9gxzsh\"\n        }\n    ]\n]);\nconst BookOpenCheck = createLucideIcon(\"BookOpenCheck\", [\n    [\n        \"path\",\n        {\n            d: \"M8 3H2v15h7c1.7 0 3 1.3 3 3V7c0-2.2-1.8-4-4-4Z\",\n            key: \"1i8u0n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 12 2 2 4-4\",\n            key: \"mdajum\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 6V3h-6c-2.2 0-4 1.8-4 4v14c0-1.7 1.3-3 3-3h7v-2.3\",\n            key: \"jb5l51\"\n        }\n    ]\n]);\nconst BookOpen = createLucideIcon(\"BookOpen\", [\n    [\n        \"path\",\n        {\n            d: \"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\",\n            key: \"vv98re\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\",\n            key: \"1cyq3y\"\n        }\n    ]\n]);\nconst BookPlus = createLucideIcon(\"BookPlus\", [\n    [\n        \"path\",\n        {\n            d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20\",\n            key: \"t4utmx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 10h6\",\n            key: \"9gxzsh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7v6\",\n            key: \"lw1j43\"\n        }\n    ]\n]);\nconst BookTemplate = createLucideIcon(\"BookTemplate\", [\n    [\n        \"path\",\n        {\n            d: \"M20 22h-2\",\n            key: \"1rpnb6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 15v2h-2\",\n            key: \"fph276\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 19.5V15\",\n            key: \"6gr39e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 8v3\",\n            key: \"deu0bs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 2h2v2\",\n            key: \"180o53\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 11V9\",\n            key: \"v3xsx8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2h2\",\n            key: \"cvn524\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22h2\",\n            key: \"kn7ki6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17h2\",\n            key: \"13u4lk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 22H6.5a2.5 2.5 0 0 1 0-5H8\",\n            key: \"fiseg2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 5v-.5A2.5 2.5 0 0 1 6.5 2H8\",\n            key: \"wywhs9\"\n        }\n    ]\n]);\nconst BookUp2 = createLucideIcon(\"BookUp2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2\",\n            key: \"1lorq7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 2h2v20H6.5a2.5 2.5 0 0 1 0-5H20\",\n            key: \"1nfm9i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13V7\",\n            key: \"h0r20n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 10 3-3 3 3\",\n            key: \"11gsxs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 5 3-3 3 3\",\n            key: \"l8vdw6\"\n        }\n    ]\n]);\nconst BookUp = createLucideIcon(\"BookUp\", [\n    [\n        \"path\",\n        {\n            d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20\",\n            key: \"t4utmx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13V7\",\n            key: \"h0r20n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 10 3-3 3 3\",\n            key: \"11gsxs\"\n        }\n    ]\n]);\nconst BookX = createLucideIcon(\"BookX\", [\n    [\n        \"path\",\n        {\n            d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20\",\n            key: \"t4utmx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.5 7-5 5\",\n            key: \"dy991v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.5 7 5 5\",\n            key: \"s45iea\"\n        }\n    ]\n]);\nconst Book = createLucideIcon(\"Book\", [\n    [\n        \"path\",\n        {\n            d: \"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20\",\n            key: \"t4utmx\"\n        }\n    ]\n]);\nconst BookmarkMinus = createLucideIcon(\"BookmarkMinus\", [\n    [\n        \"path\",\n        {\n            d: \"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z\",\n            key: \"1fy3hk\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"9\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"1gty7f\"\n        }\n    ]\n]);\nconst BookmarkPlus = createLucideIcon(\"BookmarkPlus\", [\n    [\n        \"path\",\n        {\n            d: \"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z\",\n            key: \"1fy3hk\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"7\",\n            y2: \"13\",\n            key: \"1cppfj\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"9\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"1gty7f\"\n        }\n    ]\n]);\nconst Bookmark = createLucideIcon(\"Bookmark\", [\n    [\n        \"path\",\n        {\n            d: \"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z\",\n            key: \"1fy3hk\"\n        }\n    ]\n]);\nconst BoomBox = createLucideIcon(\"BoomBox\", [\n    [\n        \"path\",\n        {\n            d: \"M4 9V5a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4\",\n            key: \"vvzvr1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 8v1\",\n            key: \"xcqmfk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v1\",\n            key: \"1rj8u4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8v1\",\n            key: \"1q12zr\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"12\",\n            x: \"2\",\n            y: \"9\",\n            rx: \"2\",\n            key: \"igpb89\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"15\",\n            r: \"2\",\n            key: \"fa4a8s\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16\",\n            cy: \"15\",\n            r: \"2\",\n            key: \"14c3ya\"\n        }\n    ]\n]);\nconst Bot = createLucideIcon(\"Bot\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"10\",\n            x: \"3\",\n            y: \"11\",\n            rx: \"2\",\n            key: \"1ofdy3\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"5\",\n            r: \"2\",\n            key: \"f1ur92\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7v4\",\n            key: \"xawao1\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"h6x27f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"5lty7f\"\n        }\n    ]\n]);\nconst BoxSelect = createLucideIcon(\"BoxSelect\", [\n    [\n        \"path\",\n        {\n            d: \"M5 3a2 2 0 0 0-2 2\",\n            key: \"y57alp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 3a2 2 0 0 1 2 2\",\n            key: \"18rm91\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 19a2 2 0 0 1-2 2\",\n            key: \"1j7049\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 21a2 2 0 0 1-2-2\",\n            key: \"sbafld\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 3h1\",\n            key: \"1yesri\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 21h1\",\n            key: \"15o7lz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 3h1\",\n            key: \"1ec4yj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 21h1\",\n            key: \"v9vybs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 9v1\",\n            key: \"1r0deq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 9v1\",\n            key: \"mxsmne\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 14v1\",\n            key: \"vnatye\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 14v1\",\n            key: \"169vum\"\n        }\n    ]\n]);\nconst Box = createLucideIcon(\"Box\", [\n    [\n        \"path\",\n        {\n            d: \"M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z\",\n            key: \"hh9hay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.3 7 8.7 5 8.7-5\",\n            key: \"g66t2b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22V12\",\n            key: \"d0xqtd\"\n        }\n    ]\n]);\nconst Boxes = createLucideIcon(\"Boxes\", [\n    [\n        \"path\",\n        {\n            d: \"M2.97 12.92A2 2 0 0 0 2 14.63v3.24a2 2 0 0 0 .97 1.71l3 1.8a2 2 0 0 0 2.06 0L12 19v-5.5l-5-3-4.03 2.42Z\",\n            key: \"lc1i9w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 16.5-4.74-2.85\",\n            key: \"1o9zyk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 16.5 5-3\",\n            key: \"va8pkn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 16.5v5.17\",\n            key: \"jnp8gn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13.5V19l3.97 2.38a2 2 0 0 0 2.06 0l3-1.8a2 2 0 0 0 .97-1.71v-3.24a2 2 0 0 0-.97-1.71L17 10.5l-5 3Z\",\n            key: \"8zsnat\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 16.5-5-3\",\n            key: \"8arw3v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 16.5 4.74-2.85\",\n            key: \"8rfmw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 16.5v5.17\",\n            key: \"k6z78m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.97 4.42A2 2 0 0 0 7 6.13v4.37l5 3 5-3V6.13a2 2 0 0 0-.97-1.71l-3-1.8a2 2 0 0 0-2.06 0l-3 1.8Z\",\n            key: \"1xygjf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8 7.26 5.15\",\n            key: \"1vbdud\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 8 4.74-2.85\",\n            key: \"3rx089\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13.5V8\",\n            key: \"1io7kd\"\n        }\n    ]\n]);\nconst Braces = createLucideIcon(\"Braces\", [\n    [\n        \"path\",\n        {\n            d: \"M8 3H7a2 2 0 0 0-2 2v5a2 2 0 0 1-2 2 2 2 0 0 1 2 2v5c0 1.1.9 2 2 2h1\",\n            key: \"ezmyqa\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 21h1a2 2 0 0 0 2-2v-5c0-1.1.9-2 2-2a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2h-1\",\n            key: \"e1hn23\"\n        }\n    ]\n]);\nconst Brackets = createLucideIcon(\"Brackets\", [\n    [\n        \"path\",\n        {\n            d: \"M16 3h3v18h-3\",\n            key: \"1yor1f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21H5V3h3\",\n            key: \"1qrfwo\"\n        }\n    ]\n]);\nconst BrainCircuit = createLucideIcon(\"BrainCircuit\", [\n    [\n        \"path\",\n        {\n            d: \"M12 4.5a2.5 2.5 0 0 0-4.96-.46 2.5 2.5 0 0 0-1.98 3 2.5 2.5 0 0 0-1.32 4.24 3 3 0 0 0 .34 5.58 2.5 2.5 0 0 0 2.96 3.08 2.5 2.5 0 0 0 4.91.05L12 20V4.5Z\",\n            key: \"ixwj2a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8V5c0-1.1.9-2 2-2\",\n            key: \"13dx7u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13h4\",\n            key: \"1ku699\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18h6a2 2 0 0 1 2 2v1\",\n            key: \"105ag5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8h8\",\n            key: \"1lhi5i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.5 8a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z\",\n            key: \"1s25gz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.5 13a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z\",\n            key: \"127460\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.5 21a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z\",\n            key: \"fys062\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.5 3a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0Z\",\n            key: \"1vib61\"\n        }\n    ]\n]);\nconst BrainCog = createLucideIcon(\"BrainCog\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 4.5a2.5 2.5 0 0 0-4.96-.46 2.5 2.5 0 0 0-1.98 3 2.5 2.5 0 0 0-1.32 4.24 3 3 0 0 0 .34 5.58 2.5 2.5 0 0 0 2.96 3.08A2.5 2.5 0 0 0 12 19.5a2.5 2.5 0 0 0 4.96.44 2.5 2.5 0 0 0 2.96-3.08 3 3 0 0 0 .34-5.58 2.5 2.5 0 0 0-1.32-4.24 2.5 2.5 0 0 0-1.98-3A2.5 2.5 0 0 0 12 4.5\",\n            key: \"1f4le0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15.7 10.4-.9.4\",\n            key: \"ayzo6p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.2 13.2-.9.4\",\n            key: \"1uzb3g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13.6 15.7-.4-.9\",\n            key: \"11ifqf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10.8 9.2-.4-.9\",\n            key: \"1pmk2v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15.7 13.5-.9-.4\",\n            key: \"7ng02m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.2 10.9-.9-.4\",\n            key: \"1x66zd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10.5 15.7.4-.9\",\n            key: \"3js94g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13.1 9.2.4-.9\",\n            key: \"18n7mc\"\n        }\n    ]\n]);\nconst Brain = createLucideIcon(\"Brain\", [\n    [\n        \"path\",\n        {\n            d: \"M9.5 2A2.5 2.5 0 0 1 12 4.5v15a2.5 2.5 0 0 1-4.96.44 2.5 2.5 0 0 1-2.96-3.08 3 3 0 0 1-.34-5.58 2.5 2.5 0 0 1 1.32-4.24 2.5 2.5 0 0 1 1.98-3A2.5 2.5 0 0 1 9.5 2Z\",\n            key: \"1mhkh5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.5 2A2.5 2.5 0 0 0 12 4.5v15a2.5 2.5 0 0 0 4.96.44 2.5 2.5 0 0 0 2.96-3.08 3 3 0 0 0 .34-5.58 2.5 2.5 0 0 0-1.32-4.24 2.5 2.5 0 0 0-1.98-3A2.5 2.5 0 0 0 14.5 2Z\",\n            key: \"1d6s00\"\n        }\n    ]\n]);\nconst Briefcase = createLucideIcon(\"Briefcase\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"7\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"eto64e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\",\n            key: \"zwj3tp\"\n        }\n    ]\n]);\nconst BringToFront = createLucideIcon(\"BringToFront\", [\n    [\n        \"rect\",\n        {\n            x: \"8\",\n            y: \"8\",\n            width: \"8\",\n            height: \"8\",\n            rx: \"2\",\n            key: \"yj20xf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 10a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2\",\n            key: \"1ltk23\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 20a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2\",\n            key: \"1q24h9\"\n        }\n    ]\n]);\nconst Brush = createLucideIcon(\"Brush\", [\n    [\n        \"path\",\n        {\n            d: \"m9.06 11.9 8.07-8.06a2.85 2.85 0 1 1 4.03 4.03l-8.06 8.08\",\n            key: \"1styjt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.07 14.94c-1.66 0-3 1.35-3 3.02 0 1.33-2.5 1.52-2 2.02 1.08 1.1 2.49 2.02 4 2.02 2.2 0 4-1.8 4-4.04a3.01 3.01 0 0 0-3-3.02z\",\n            key: \"z0l1mu\"\n        }\n    ]\n]);\nconst BugOff = createLucideIcon(\"BugOff\", [\n    [\n        \"path\",\n        {\n            d: \"M15 7.13V6a3 3 0 0 0-5.14-2.1L8 2\",\n            key: \"vl8zik\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.12 3.88 16 2\",\n            key: \"qol33r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 13h-4v-2a4 4 0 0 0-4-4h-1.3\",\n            key: \"1ou0bd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.97 5c0 2.1-1.6 3.8-3.5 4\",\n            key: \"18gb23\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.7 7.7A4 4 0 0 0 6 11v3a6 6 0 0 0 11.13 3.13\",\n            key: \"1njkjs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v-8\",\n            key: \"i3yub9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 13H2\",\n            key: \"82j7cp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 21c0-2.1 1.7-3.9 3.8-4\",\n            key: \"4p0ekp\"\n        }\n    ]\n]);\nconst BugPlay = createLucideIcon(\"BugPlay\", [\n    [\n        \"path\",\n        {\n            d: \"m8 2 1.88 1.88\",\n            key: \"fmnt4t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.12 3.88 16 2\",\n            key: \"qol33r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 7.13v-1a3.003 3.003 0 1 1 6 0v1\",\n            key: \"d7y7pr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 11a4 4 0 0 0-4-4h-4a4 4 0 0 0-4 4v3a6.1 6.1 0 0 0 2 4.5\",\n            key: \"1tjixy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.53 9C4.6 8.8 3 7.1 3 5\",\n            key: \"32zzws\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 13H2\",\n            key: \"82j7cp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 21c0-2.1 1.7-3.9 3.8-4\",\n            key: \"4p0ekp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.97 5c0 2.1-1.6 3.8-3.5 4\",\n            key: \"18gb23\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 12 8 5-8 5Z\",\n            key: \"1ydf81\"\n        }\n    ]\n]);\nconst Bug = createLucideIcon(\"Bug\", [\n    [\n        \"path\",\n        {\n            d: \"m8 2 1.88 1.88\",\n            key: \"fmnt4t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.12 3.88 16 2\",\n            key: \"qol33r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 7.13v-1a3.003 3.003 0 1 1 6 0v1\",\n            key: \"d7y7pr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20c-3.3 0-6-2.7-6-6v-3a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v3c0 3.3-2.7 6-6 6\",\n            key: \"xs1cw7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v-9\",\n            key: \"1qisl0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.53 9C4.6 8.8 3 7.1 3 5\",\n            key: \"32zzws\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 13H2\",\n            key: \"82j7cp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 21c0-2.1 1.7-3.9 3.8-4\",\n            key: \"4p0ekp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.97 5c0 2.1-1.6 3.8-3.5 4\",\n            key: \"18gb23\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 13h-4\",\n            key: \"1jl80f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.2 17c2.1.1 3.8 1.9 3.8 4\",\n            key: \"k3fwyw\"\n        }\n    ]\n]);\nconst Building2 = createLucideIcon(\"Building2\", [\n    [\n        \"path\",\n        {\n            d: \"M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z\",\n            key: \"1b4qmf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2\",\n            key: \"i71pzd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2\",\n            key: \"10jefs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 6h4\",\n            key: \"1itunk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 10h4\",\n            key: \"tcdvrf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 14h4\",\n            key: \"kelpxr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 18h4\",\n            key: \"1ulq68\"\n        }\n    ]\n]);\nconst Building = createLucideIcon(\"Building\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"20\",\n            x: \"4\",\n            y: \"2\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"76otgf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 22v-4h6v4\",\n            key: \"r93iot\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 6h.01\",\n            key: \"1dz90k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 6h.01\",\n            key: \"1x0f13\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 6h.01\",\n            key: \"1vi96p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10h.01\",\n            key: \"1nrarc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 14h.01\",\n            key: \"1etili\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 10h.01\",\n            key: \"1m94wz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 14h.01\",\n            key: \"1gbofw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 10h.01\",\n            key: \"19clt8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14h.01\",\n            key: \"6423bh\"\n        }\n    ]\n]);\nconst BusFront = createLucideIcon(\"BusFront\", [\n    [\n        \"path\",\n        {\n            d: \"M4 6 2 7\",\n            key: \"1mqr15\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 6h4\",\n            key: \"1itunk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 7-2-1\",\n            key: \"1umjhc\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"16\",\n            x: \"4\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"1wxw4b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 11h16\",\n            key: \"mpoxn0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 15h.01\",\n            key: \"a7atzg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 15h.01\",\n            key: \"rnfrdf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 19v2\",\n            key: \"1loha6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 21v-2\",\n            key: \"sqyl04\"\n        }\n    ]\n]);\nconst Bus = createLucideIcon(\"Bus\", [\n    [\n        \"path\",\n        {\n            d: \"M8 6v6\",\n            key: \"18i7km\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 6v6\",\n            key: \"1sg6z9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12h19.6\",\n            key: \"de5uta\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 18h3s.5-1.7.8-2.8c.1-.4.2-.8.2-1.2 0-.4-.1-.8-.2-1.2l-1.4-5C20.1 6.8 19.1 6 18 6H4a2 2 0 0 0-2 2v10h3\",\n            key: \"1wwztk\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"7\",\n            cy: \"18\",\n            r: \"2\",\n            key: \"19iecd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 18h5\",\n            key: \"lrx6i\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16\",\n            cy: \"18\",\n            r: \"2\",\n            key: \"1v4tcr\"\n        }\n    ]\n]);\nconst CableCar = createLucideIcon(\"CableCar\", [\n    [\n        \"path\",\n        {\n            d: \"M10 3h.01\",\n            key: \"lbucoy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 2h.01\",\n            key: \"1k8aa1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 9 20-5\",\n            key: \"1kz0j5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12V6.5\",\n            key: \"1vbrij\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"10\",\n            x: \"4\",\n            y: \"12\",\n            rx: \"3\",\n            key: \"if91er\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 12v5\",\n            key: \"3anwtq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 12v5\",\n            key: \"5xh3zn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 17h16\",\n            key: \"g4d7ey\"\n        }\n    ]\n]);\nconst Cable = createLucideIcon(\"Cable\", [\n    [\n        \"path\",\n        {\n            d: \"M4 9a2 2 0 0 1-2-2V5h6v2a2 2 0 0 1-2 2Z\",\n            key: \"1s6oa5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 5V3\",\n            key: \"1k5hjh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 5V3\",\n            key: \"1t1388\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 15V6.5a3.5 3.5 0 0 0-7 0v11a3.5 3.5 0 0 1-7 0V9\",\n            key: \"1ytv72\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 21v-2\",\n            key: \"ds4u3f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 21v-2\",\n            key: \"eo0ou\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 19h-6v-2a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2Z\",\n            key: \"sdz6o8\"\n        }\n    ]\n]);\nconst CakeSlice = createLucideIcon(\"CakeSlice\", [\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"7\",\n            r: \"2\",\n            key: \"1305pl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.2 7.9 3 11v9c0 .6.4 1 1 1h16c.6 0 1-.4 1-1v-9c0-2-3-6-7-8l-3.6 2.6\",\n            key: \"xle13f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 13H3\",\n            key: \"1wpj08\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 17H3\",\n            key: \"3lvfcd\"\n        }\n    ]\n]);\nconst Cake = createLucideIcon(\"Cake\", [\n    [\n        \"path\",\n        {\n            d: \"M20 21v-8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8\",\n            key: \"1w3rig\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 16s.5-1 2-1 2.5 2 4 2 2.5-2 4-2 2.5 2 4 2 2-1 2-1\",\n            key: \"n2jgmb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 21h20\",\n            key: \"1nyx9w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 8v2\",\n            key: \"kqglng\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v2\",\n            key: \"1woqiv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 8v2\",\n            key: \"teptal\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 4h.01\",\n            key: \"1bh4kh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 4h.01\",\n            key: \"1ujb9j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 4h.01\",\n            key: \"1upcoc\"\n        }\n    ]\n]);\nconst Calculator = createLucideIcon(\"Calculator\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"20\",\n            x: \"4\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"1nb95v\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"16\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"x4nwl0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"14\",\n            y2: \"18\",\n            key: \"wjye3r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 10h.01\",\n            key: \"1m94wz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10h.01\",\n            key: \"1nrarc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 10h.01\",\n            key: \"19clt8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 14h.01\",\n            key: \"1etili\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14h.01\",\n            key: \"6423bh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18h.01\",\n            key: \"mhygvu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 18h.01\",\n            key: \"lrp35t\"\n        }\n    ]\n]);\nconst CalendarCheck2 = createLucideIcon(\"CalendarCheck2\", [\n    [\n        \"path\",\n        {\n            d: \"M21 14V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8\",\n            key: \"bce9hv\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"m3sa8f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"18kwsl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"xt86sb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 20 2 2 4-4\",\n            key: \"13tcca\"\n        }\n    ]\n]);\nconst CalendarCheck = createLucideIcon(\"CalendarCheck\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"4\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"eu3xkr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"m3sa8f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"18kwsl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"xt86sb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 16 2 2 4-4\",\n            key: \"19s6y9\"\n        }\n    ]\n]);\nconst CalendarClock = createLucideIcon(\"CalendarClock\", [\n    [\n        \"path\",\n        {\n            d: \"M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5\",\n            key: \"1osxxc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 2v4\",\n            key: \"4m81vk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 2v4\",\n            key: \"1cmpym\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 10h5\",\n            key: \"r794hk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.5 17.5 16 16.25V14\",\n            key: \"re2vv1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 16a6 6 0 1 1-12 0 6 6 0 0 1 12 0Z\",\n            key: \"ame013\"\n        }\n    ]\n]);\nconst CalendarDays = createLucideIcon(\"CalendarDays\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"4\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"eu3xkr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"m3sa8f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"18kwsl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"xt86sb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14h.01\",\n            key: \"6423bh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 14h.01\",\n            key: \"1etili\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 14h.01\",\n            key: \"1gbofw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 18h.01\",\n            key: \"lrp35t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18h.01\",\n            key: \"mhygvu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18h.01\",\n            key: \"kzsmim\"\n        }\n    ]\n]);\nconst CalendarHeart = createLucideIcon(\"CalendarHeart\", [\n    [\n        \"path\",\n        {\n            d: \"M21 10V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h7\",\n            key: \"1sfrvf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 2v4\",\n            key: \"4m81vk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 2v4\",\n            key: \"1cmpym\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 10h18\",\n            key: \"8toen8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21.29 14.7a2.43 2.43 0 0 0-2.65-.52c-.3.12-.57.3-.8.53l-.34.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L17.5 22l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z\",\n            key: \"1t7hil\"\n        }\n    ]\n]);\nconst CalendarMinus = createLucideIcon(\"CalendarMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8\",\n            key: \"3spt84\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"m3sa8f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"18kwsl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"xt86sb\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"22\",\n            y1: \"19\",\n            y2: \"19\",\n            key: \"1g9955\"\n        }\n    ]\n]);\nconst CalendarOff = createLucideIcon(\"CalendarOff\", [\n    [\n        \"path\",\n        {\n            d: \"M4.18 4.18A2 2 0 0 0 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 1.82-1.18\",\n            key: \"1feomx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 15.5V6a2 2 0 0 0-2-2H9.5\",\n            key: \"yhw86o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 2v4\",\n            key: \"4m81vk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 10h7\",\n            key: \"1wap6i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 10h-5.5\",\n            key: \"quycpq\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst CalendarPlus = createLucideIcon(\"CalendarPlus\", [\n    [\n        \"path\",\n        {\n            d: \"M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8\",\n            key: \"3spt84\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"m3sa8f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"18kwsl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"xt86sb\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"19\",\n            y1: \"16\",\n            y2: \"22\",\n            key: \"1ttwzi\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"22\",\n            y1: \"19\",\n            y2: \"19\",\n            key: \"1g9955\"\n        }\n    ]\n]);\nconst CalendarRange = createLucideIcon(\"CalendarRange\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"4\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"eu3xkr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"m3sa8f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"18kwsl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"xt86sb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 14h-6\",\n            key: \"bkmgh3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 18H7\",\n            key: \"bb0bb7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 14h.01\",\n            key: \"1qa3f1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 18h.01\",\n            key: \"1bdyru\"\n        }\n    ]\n]);\nconst CalendarSearch = createLucideIcon(\"CalendarSearch\", [\n    [\n        \"path\",\n        {\n            d: \"M21 12V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h7.5\",\n            key: \"18ncp8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 2v4\",\n            key: \"4m81vk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 2v4\",\n            key: \"1cmpym\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 10h18\",\n            key: \"8toen8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6v0Z\",\n            key: \"mgbru4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 22-1.5-1.5\",\n            key: \"1x83k4\"\n        }\n    ]\n]);\nconst CalendarX2 = createLucideIcon(\"CalendarX2\", [\n    [\n        \"path\",\n        {\n            d: \"M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8\",\n            key: \"3spt84\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"m3sa8f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"18kwsl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"xt86sb\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"17\",\n            x2: \"22\",\n            y1: \"17\",\n            y2: \"22\",\n            key: \"xa9o8b\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"17\",\n            x2: \"22\",\n            y1: \"22\",\n            y2: \"17\",\n            key: \"18nitg\"\n        }\n    ]\n]);\nconst CalendarX = createLucideIcon(\"CalendarX\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"4\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"eu3xkr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"m3sa8f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"18kwsl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"xt86sb\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"14\",\n            y1: \"14\",\n            y2: \"18\",\n            key: \"1g3qc0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"10\",\n            y1: \"14\",\n            y2: \"18\",\n            key: \"1az83m\"\n        }\n    ]\n]);\nconst Calendar = createLucideIcon(\"Calendar\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"4\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"eu3xkr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"m3sa8f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"18kwsl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"xt86sb\"\n        }\n    ]\n]);\nconst CameraOff = createLucideIcon(\"CameraOff\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16\",\n            key: \"qmtpty\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.5 4h5L17 7h3a2 2 0 0 1 2 2v7.5\",\n            key: \"1ufyfc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.121 15.121A3 3 0 1 1 9.88 10.88\",\n            key: \"11zox6\"\n        }\n    ]\n]);\nconst Camera = createLucideIcon(\"Camera\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z\",\n            key: \"1tc9qg\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"13\",\n            r: \"3\",\n            key: \"1vg3eu\"\n        }\n    ]\n]);\nconst CandlestickChart = createLucideIcon(\"CandlestickChart\", [\n    [\n        \"path\",\n        {\n            d: \"M9 5v4\",\n            key: \"14uxtq\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"4\",\n            height: \"6\",\n            x: \"7\",\n            y: \"9\",\n            rx: \"1\",\n            key: \"f4fvz0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 15v2\",\n            key: \"r5rk32\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 3v2\",\n            key: \"1l2re6\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"4\",\n            height: \"8\",\n            x: \"15\",\n            y: \"5\",\n            rx: \"1\",\n            key: \"z38je5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 13v3\",\n            key: \"5l0wba\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 3v18h18\",\n            key: \"1s2lah\"\n        }\n    ]\n]);\nconst CandyCane = createLucideIcon(\"CandyCane\", [\n    [\n        \"path\",\n        {\n            d: \"M5.7 21a2 2 0 0 1-3.5-2l8.6-14a6 6 0 0 1 10.4 6 2 2 0 1 1-3.464-2 2 2 0 1 0-3.464-2Z\",\n            key: \"isaq8g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.75 7 15 2.1\",\n            key: \"12x7e8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.9 4.8 13 9\",\n            key: \"100a87\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.9 9.7 2 4.4\",\n            key: \"ntfhaj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.9 14.7 7 18.9\",\n            key: \"1x43jy\"\n        }\n    ]\n]);\nconst CandyOff = createLucideIcon(\"CandyOff\", [\n    [\n        \"path\",\n        {\n            d: \"m8.5 8.5-1 1a4.95 4.95 0 0 0 7 7l1-1\",\n            key: \"1ff4ui\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.843 6.187A4.947 4.947 0 0 1 16.5 7.5a4.947 4.947 0 0 1 1.313 4.657\",\n            key: \"1sbrv4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 16.5V14\",\n            key: \"1maf8j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 6.5v1.843\",\n            key: \"1a6u6t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 10v7.5\",\n            key: \"80pj65\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 7 1-5 1.367.683A3 3 0 0 0 19.708 3H21v1.292a3 3 0 0 0 .317 1.341L22 7l-5 1\",\n            key: \"11a9mt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 17-1 5-1.367-.683A3 3 0 0 0 4.292 21H3v-1.292a3 3 0 0 0-.317-1.341L2 17l5-1\",\n            key: \"3mjmon\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Candy = createLucideIcon(\"Candy\", [\n    [\n        \"path\",\n        {\n            d: \"m9.5 7.5-2 2a4.95 4.95 0 1 0 7 7l2-2a4.95 4.95 0 1 0-7-7Z\",\n            key: \"ue6khb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 6.5v10\",\n            key: \"5xnk7c\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 7.5v10\",\n            key: \"1uew51\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 7 1-5 1.37.68A3 3 0 0 0 19.7 3H21v1.3c0 .46.1.92.32 1.33L22 7l-5 1\",\n            key: \"b9cp6k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 17-1 5-1.37-.68A3 3 0 0 0 4.3 21H3v-1.3a3 3 0 0 0-.32-1.33L2 17l5-1\",\n            key: \"5lney8\"\n        }\n    ]\n]);\nconst CarFront = createLucideIcon(\"CarFront\", [\n    [\n        \"path\",\n        {\n            d: \"m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8\",\n            key: \"1imjwt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 14h.01\",\n            key: \"1qa3f1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 14h.01\",\n            key: \"7oqj8z\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"8\",\n            x: \"3\",\n            y: \"10\",\n            rx: \"2\",\n            key: \"a7itu8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 18v2\",\n            key: \"ppbyun\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 18v2\",\n            key: \"gy7782\"\n        }\n    ]\n]);\nconst CarTaxiFront = createLucideIcon(\"CarTaxiFront\", [\n    [\n        \"path\",\n        {\n            d: \"M10 2h4\",\n            key: \"n1abiw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8\",\n            key: \"1imjwt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 14h.01\",\n            key: \"1qa3f1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 14h.01\",\n            key: \"7oqj8z\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"8\",\n            x: \"3\",\n            y: \"10\",\n            rx: \"2\",\n            key: \"a7itu8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 18v2\",\n            key: \"ppbyun\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 18v2\",\n            key: \"gy7782\"\n        }\n    ]\n]);\nconst Car = createLucideIcon(\"Car\", [\n    [\n        \"path\",\n        {\n            d: \"M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.4 2.9A3.7 3.7 0 0 0 2 12v4c0 .6.4 1 1 1h2\",\n            key: \"5owen\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"7\",\n            cy: \"17\",\n            r: \"2\",\n            key: \"u2ysq9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 17h6\",\n            key: \"r8uit2\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17\",\n            cy: \"17\",\n            r: \"2\",\n            key: \"axvx0g\"\n        }\n    ]\n]);\nconst Carrot = createLucideIcon(\"Carrot\", [\n    [\n        \"path\",\n        {\n            d: \"M2.27 21.7s9.87-3.5 12.73-6.36a4.5 4.5 0 0 0-6.36-6.37C5.77 11.84 2.27 21.7 2.27 21.7zM8.64 14l-2.05-2.04M15.34 15l-2.46-2.46\",\n            key: \"rfqxbe\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 9s-1.33-2-3.5-2C16.86 7 15 9 15 9s1.33 2 3.5 2S22 9 22 9z\",\n            key: \"6b25w4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 2s-2 1.33-2 3.5S15 9 15 9s2-1.84 2-3.5C17 3.33 15 2 15 2z\",\n            key: \"fn65lo\"\n        }\n    ]\n]);\nconst CaseLower = createLucideIcon(\"CaseLower\", [\n    [\n        \"circle\",\n        {\n            cx: \"7\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"12clwm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 9v6\",\n            key: \"17i7lo\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"gl7c2s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 7v8\",\n            key: \"dl84cr\"\n        }\n    ]\n]);\nconst CaseSensitive = createLucideIcon(\"CaseSensitive\", [\n    [\n        \"path\",\n        {\n            d: \"m3 15 4-8 4 8\",\n            key: \"1vwr6u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 13h6\",\n            key: \"1r9ots\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1kchzo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 9v6\",\n            key: \"anns31\"\n        }\n    ]\n]);\nconst CaseUpper = createLucideIcon(\"CaseUpper\", [\n    [\n        \"path\",\n        {\n            d: \"m3 15 4-8 4 8\",\n            key: \"1vwr6u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 13h6\",\n            key: \"1r9ots\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 11h4.5a2 2 0 0 1 0 4H15V7h4a2 2 0 0 1 0 4\",\n            key: \"1sqfas\"\n        }\n    ]\n]);\nconst CassetteTape = createLucideIcon(\"CassetteTape\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"16\",\n            x: \"2\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"18n3k1\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"10\",\n            r: \"2\",\n            key: \"1xl4ub\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16\",\n            cy: \"10\",\n            r: \"2\",\n            key: \"r14t7q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 20 .7-2.9A1.4 1.4 0 0 1 8.1 16h7.8a1.4 1.4 0 0 1 1.4 1l.7 3\",\n            key: \"l01ucn\"\n        }\n    ]\n]);\nconst Cast = createLucideIcon(\"Cast\", [\n    [\n        \"path\",\n        {\n            d: \"M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6\",\n            key: \"3zrzxg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12a9 9 0 0 1 8 8\",\n            key: \"g6cvee\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 16a5 5 0 0 1 4 4\",\n            key: \"1y1dii\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"2.01\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"xu2jvo\"\n        }\n    ]\n]);\nconst Castle = createLucideIcon(\"Castle\", [\n    [\n        \"path\",\n        {\n            d: \"M22 20v-9H2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2Z\",\n            key: \"109fe4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 11V4H6v7\",\n            key: \"mon5oj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 22v-4a3 3 0 0 0-3-3v0a3 3 0 0 0-3 3v4\",\n            key: \"jdggr9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 11V9\",\n            key: \"3zbp94\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 11V9\",\n            key: \"1x5rnq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 4V2\",\n            key: \"1rsq15\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 4V2\",\n            key: \"1jsdo1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 4V2\",\n            key: \"75d9ly\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 4V2\",\n            key: \"8nj3z6\"\n        }\n    ]\n]);\nconst Cat = createLucideIcon(\"Cat\", [\n    [\n        \"path\",\n        {\n            d: \"M12 5c.67 0 1.35.09 2 .26 1.78-2 5.03-2.84 6.42-2.26 1.4.58-.42 7-.42 7 .57 1.07 1 2.24 1 3.44C21 17.9 16.97 21 12 21s-9-3-9-7.56c0-1.25.5-2.4 1-3.44 0 0-1.89-6.42-.5-7 1.39-.58 4.72.23 6.5 2.23A9.04 9.04 0 0 1 12 5Z\",\n            key: \"x6xyqk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14v.5\",\n            key: \"1nzgdb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 14v.5\",\n            key: \"1lajdz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.25 16.25h1.5L12 17l-.75-.75Z\",\n            key: \"12kq1m\"\n        }\n    ]\n]);\nconst CheckCheck = createLucideIcon(\"CheckCheck\", [\n    [\n        \"path\",\n        {\n            d: \"M18 6 7 17l-5-5\",\n            key: \"116fxf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 10-7.5 7.5L13 16\",\n            key: \"ke71qq\"\n        }\n    ]\n]);\nconst CheckCircle2 = createLucideIcon(\"CheckCircle2\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\",\n            key: \"14v8dr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 12 2 2 4-4\",\n            key: \"dzmm74\"\n        }\n    ]\n]);\nconst CheckCircle = createLucideIcon(\"CheckCircle\", [\n    [\n        \"path\",\n        {\n            d: \"M22 11.08V12a10 10 0 1 1-5.93-9.14\",\n            key: \"g774vq\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"22 4 12 14.01 9 11.01\",\n            key: \"6xbx8j\"\n        }\n    ]\n]);\nconst CheckSquare = createLucideIcon(\"CheckSquare\", [\n    [\n        \"polyline\",\n        {\n            points: \"9 11 12 14 22 4\",\n            key: \"19ybtz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\",\n            key: \"1jnkn4\"\n        }\n    ]\n]);\nconst Check = createLucideIcon(\"Check\", [\n    [\n        \"polyline\",\n        {\n            points: \"20 6 9 17 4 12\",\n            key: \"10jjfj\"\n        }\n    ]\n]);\nconst ChefHat = createLucideIcon(\"ChefHat\", [\n    [\n        \"path\",\n        {\n            d: \"M6 13.87A4 4 0 0 1 7.41 6a5.11 5.11 0 0 1 1.05-1.54 5 5 0 0 1 7.08 0A5.11 5.11 0 0 1 16.59 6 4 4 0 0 1 18 13.87V21H6Z\",\n            key: \"z3ra2g\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"18\",\n            y1: \"17\",\n            y2: \"17\",\n            key: \"12q60k\"\n        }\n    ]\n]);\nconst Cherry = createLucideIcon(\"Cherry\", [\n    [\n        \"path\",\n        {\n            d: \"M2 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z\",\n            key: \"cvxqlc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z\",\n            key: \"1ostrc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 14c3.22-2.91 4.29-8.75 5-12 1.66 2.38 4.94 9 5 12\",\n            key: \"hqx58h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 9c-4.29 0-7.14-2.33-10-7 5.71 0 10 4.67 10 7Z\",\n            key: \"eykp1o\"\n        }\n    ]\n]);\nconst ChevronDownCircle = createLucideIcon(\"ChevronDownCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 10-4 4-4-4\",\n            key: \"894hmk\"\n        }\n    ]\n]);\nconst ChevronDownSquare = createLucideIcon(\"ChevronDownSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 10-4 4-4-4\",\n            key: \"894hmk\"\n        }\n    ]\n]);\nconst ChevronDown = createLucideIcon(\"ChevronDown\", [\n    [\n        \"path\",\n        {\n            d: \"m6 9 6 6 6-6\",\n            key: \"qrunsl\"\n        }\n    ]\n]);\nconst ChevronFirst = createLucideIcon(\"ChevronFirst\", [\n    [\n        \"path\",\n        {\n            d: \"m17 18-6-6 6-6\",\n            key: \"1yerx2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 6v12\",\n            key: \"1p53r6\"\n        }\n    ]\n]);\nconst ChevronLast = createLucideIcon(\"ChevronLast\", [\n    [\n        \"path\",\n        {\n            d: \"m7 18 6-6-6-6\",\n            key: \"lwmzdw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 6v12\",\n            key: \"1o0aio\"\n        }\n    ]\n]);\nconst ChevronLeftCircle = createLucideIcon(\"ChevronLeftCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 16-4-4 4-4\",\n            key: \"ojs7w8\"\n        }\n    ]\n]);\nconst ChevronLeftSquare = createLucideIcon(\"ChevronLeftSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 16-4-4 4-4\",\n            key: \"ojs7w8\"\n        }\n    ]\n]);\nconst ChevronLeft = createLucideIcon(\"ChevronLeft\", [\n    [\n        \"path\",\n        {\n            d: \"m15 18-6-6 6-6\",\n            key: \"1wnfg3\"\n        }\n    ]\n]);\nconst ChevronRightCircle = createLucideIcon(\"ChevronRightCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 8 4 4-4 4\",\n            key: \"1wy4r4\"\n        }\n    ]\n]);\nconst ChevronRightSquare = createLucideIcon(\"ChevronRightSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 8 4 4-4 4\",\n            key: \"1wy4r4\"\n        }\n    ]\n]);\nconst ChevronRight = createLucideIcon(\"ChevronRight\", [\n    [\n        \"path\",\n        {\n            d: \"m9 18 6-6-6-6\",\n            key: \"mthhwq\"\n        }\n    ]\n]);\nconst ChevronUpCircle = createLucideIcon(\"ChevronUpCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 14 4-4 4 4\",\n            key: \"fy2ptz\"\n        }\n    ]\n]);\nconst ChevronUpSquare = createLucideIcon(\"ChevronUpSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 14 4-4 4 4\",\n            key: \"fy2ptz\"\n        }\n    ]\n]);\nconst ChevronUp = createLucideIcon(\"ChevronUp\", [\n    [\n        \"path\",\n        {\n            d: \"m18 15-6-6-6 6\",\n            key: \"153udz\"\n        }\n    ]\n]);\nconst ChevronsDownUp = createLucideIcon(\"ChevronsDownUp\", [\n    [\n        \"path\",\n        {\n            d: \"m7 20 5-5 5 5\",\n            key: \"13a0gw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 4 5 5 5-5\",\n            key: \"1kwcof\"\n        }\n    ]\n]);\nconst ChevronsDown = createLucideIcon(\"ChevronsDown\", [\n    [\n        \"path\",\n        {\n            d: \"m7 6 5 5 5-5\",\n            key: \"1lc07p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 13 5 5 5-5\",\n            key: \"1d48rs\"\n        }\n    ]\n]);\nconst ChevronsLeftRight = createLucideIcon(\"ChevronsLeftRight\", [\n    [\n        \"path\",\n        {\n            d: \"m9 7-5 5 5 5\",\n            key: \"j5w590\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 7 5 5-5 5\",\n            key: \"1bl6da\"\n        }\n    ]\n]);\nconst ChevronsLeft = createLucideIcon(\"ChevronsLeft\", [\n    [\n        \"path\",\n        {\n            d: \"m11 17-5-5 5-5\",\n            key: \"13zhaf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 17-5-5 5-5\",\n            key: \"h8a8et\"\n        }\n    ]\n]);\nconst ChevronsRightLeft = createLucideIcon(\"ChevronsRightLeft\", [\n    [\n        \"path\",\n        {\n            d: \"m20 17-5-5 5-5\",\n            key: \"30x0n2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4 17 5-5-5-5\",\n            key: \"16spf4\"\n        }\n    ]\n]);\nconst ChevronsRight = createLucideIcon(\"ChevronsRight\", [\n    [\n        \"path\",\n        {\n            d: \"m6 17 5-5-5-5\",\n            key: \"xnjwq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 17 5-5-5-5\",\n            key: \"17xmmf\"\n        }\n    ]\n]);\nconst ChevronsUpDown = createLucideIcon(\"ChevronsUpDown\", [\n    [\n        \"path\",\n        {\n            d: \"m7 15 5 5 5-5\",\n            key: \"1hf1tw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 9 5-5 5 5\",\n            key: \"sgt6xg\"\n        }\n    ]\n]);\nconst ChevronsUp = createLucideIcon(\"ChevronsUp\", [\n    [\n        \"path\",\n        {\n            d: \"m17 11-5-5-5 5\",\n            key: \"e8nh98\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 18-5-5-5 5\",\n            key: \"2avn1x\"\n        }\n    ]\n]);\nconst Chrome = createLucideIcon(\"Chrome\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"4\",\n            key: \"4exip2\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21.17\",\n            x2: \"12\",\n            y1: \"8\",\n            y2: \"8\",\n            key: \"a0cw5f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3.95\",\n            x2: \"8.54\",\n            y1: \"6.06\",\n            y2: \"14\",\n            key: \"1kftof\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10.88\",\n            x2: \"15.46\",\n            y1: \"21.94\",\n            y2: \"14\",\n            key: \"1ymyh8\"\n        }\n    ]\n]);\nconst Church = createLucideIcon(\"Church\", [\n    [\n        \"path\",\n        {\n            d: \"m18 7 4 2v11a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9l4-2\",\n            key: \"gy5gyo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 22v-4a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v4\",\n            key: \"cpkuc4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 22V5l-6-3-6 3v17\",\n            key: \"1hsnhq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7v5\",\n            key: \"ma6bk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 9h4\",\n            key: \"u4k05v\"\n        }\n    ]\n]);\nconst CigaretteOff = createLucideIcon(\"CigaretteOff\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12H2v4h14\",\n            key: \"91gsaq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12v4\",\n            key: \"142cbu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 12h-.5\",\n            key: \"12ymji\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 12v4\",\n            key: \"jqww69\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 8c0-2.5-2-2.5-2-5\",\n            key: \"1il607\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 8c0-2.5-2-2.5-2-5\",\n            key: \"1gah44\"\n        }\n    ]\n]);\nconst Cigarette = createLucideIcon(\"Cigarette\", [\n    [\n        \"path\",\n        {\n            d: \"M18 12H2v4h16\",\n            key: \"2rt1hm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12v4\",\n            key: \"142cbu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 12v4\",\n            key: \"jqww69\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 8c0-2.5-2-2.5-2-5\",\n            key: \"1il607\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 8c0-2.5-2-2.5-2-5\",\n            key: \"1gah44\"\n        }\n    ]\n]);\nconst CircleDashed = createLucideIcon(\"CircleDashed\", [\n    [\n        \"path\",\n        {\n            d: \"M10.1 2.18a9.93 9.93 0 0 1 3.8 0\",\n            key: \"1qdqn0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.6 3.71a9.95 9.95 0 0 1 2.69 2.7\",\n            key: \"1bq7p6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21.82 10.1a9.93 9.93 0 0 1 0 3.8\",\n            key: \"1rlaqf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.29 17.6a9.95 9.95 0 0 1-2.7 2.69\",\n            key: \"1xk03u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.9 21.82a9.94 9.94 0 0 1-3.8 0\",\n            key: \"l7re25\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.4 20.29a9.95 9.95 0 0 1-2.69-2.7\",\n            key: \"1v18p6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2.18 13.9a9.93 9.93 0 0 1 0-3.8\",\n            key: \"xdo6bj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.71 6.4a9.95 9.95 0 0 1 2.7-2.69\",\n            key: \"1jjmaz\"\n        }\n    ]\n]);\nconst CircleDollarSign = createLucideIcon(\"CircleDollarSign\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8\",\n            key: \"1h4pet\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18V6\",\n            key: \"zqpxq5\"\n        }\n    ]\n]);\nconst CircleDotDashed = createLucideIcon(\"CircleDotDashed\", [\n    [\n        \"path\",\n        {\n            d: \"M10.1 2.18a9.93 9.93 0 0 1 3.8 0\",\n            key: \"1qdqn0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.6 3.71a9.95 9.95 0 0 1 2.69 2.7\",\n            key: \"1bq7p6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21.82 10.1a9.93 9.93 0 0 1 0 3.8\",\n            key: \"1rlaqf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.29 17.6a9.95 9.95 0 0 1-2.7 2.69\",\n            key: \"1xk03u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.9 21.82a9.94 9.94 0 0 1-3.8 0\",\n            key: \"l7re25\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.4 20.29a9.95 9.95 0 0 1-2.69-2.7\",\n            key: \"1v18p6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2.18 13.9a9.93 9.93 0 0 1 0-3.8\",\n            key: \"xdo6bj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.71 6.4a9.95 9.95 0 0 1 2.7-2.69\",\n            key: \"1jjmaz\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"41hilf\"\n        }\n    ]\n]);\nconst CircleDot = createLucideIcon(\"CircleDot\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"41hilf\"\n        }\n    ]\n]);\nconst CircleEllipsis = createLucideIcon(\"CircleEllipsis\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 12h.01\",\n            key: \"1m0b6t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12h.01\",\n            key: \"1mp3jc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 12h.01\",\n            key: \"eqddd0\"\n        }\n    ]\n]);\nconst CircleEqual = createLucideIcon(\"CircleEqual\", [\n    [\n        \"path\",\n        {\n            d: \"M7 10h10\",\n            key: \"1101jm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 14h10\",\n            key: \"1mhdw3\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ]\n]);\nconst CircleOff = createLucideIcon(\"CircleOff\", [\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.35 2.69A10 10 0 0 1 21.3 15.65\",\n            key: \"1pfsoa\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.08 19.08A10 10 0 1 1 4.92 4.92\",\n            key: \"1ablyi\"\n        }\n    ]\n]);\nconst CircleSlash2 = createLucideIcon(\"CircleSlash2\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 2 2 22\",\n            key: \"y4kqgn\"\n        }\n    ]\n]);\nconst CircleSlash = createLucideIcon(\"CircleSlash\", [\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"15\",\n            y1: \"15\",\n            y2: \"9\",\n            key: \"1dfufj\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ]\n]);\nconst Circle = createLucideIcon(\"Circle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ]\n]);\nconst CircuitBoard = createLucideIcon(\"CircuitBoard\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 9h4a2 2 0 0 0 2-2V3\",\n            key: \"1ve2rv\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"9\",\n            r: \"2\",\n            key: \"af1f0g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 21v-4a2 2 0 0 1 2-2h4\",\n            key: \"1fwkro\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"15\",\n            cy: \"15\",\n            r: \"2\",\n            key: \"3i40o0\"\n        }\n    ]\n]);\nconst Citrus = createLucideIcon(\"Citrus\", [\n    [\n        \"path\",\n        {\n            d: \"M21.66 17.67a1.08 1.08 0 0 1-.04 1.6A12 12 0 0 1 4.73 2.38a1.1 1.1 0 0 1 1.61-.04z\",\n            key: \"4ite01\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.65 15.66A8 8 0 0 1 8.35 4.34\",\n            key: \"1gxipu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 10-5.5 5.5\",\n            key: \"92pfem\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 17.85V10H6.15\",\n            key: \"xqmtsk\"\n        }\n    ]\n]);\nconst Clapperboard = createLucideIcon(\"Clapperboard\", [\n    [\n        \"path\",\n        {\n            d: \"M20.2 6 3 11l-.9-2.4c-.3-1.1.3-2.2 1.3-2.5l13.5-4c1.1-.3 2.2.3 2.5 1.3Z\",\n            key: \"1tn4o7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6.2 5.3 3.1 3.9\",\n            key: \"iuk76l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12.4 3.4 3.1 4\",\n            key: \"6hsd6n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 11h18v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2Z\",\n            key: \"ltgou9\"\n        }\n    ]\n]);\nconst ClipboardCheck = createLucideIcon(\"ClipboardCheck\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"4\",\n            x: \"8\",\n            y: \"2\",\n            rx: \"1\",\n            ry: \"1\",\n            key: \"tgr4d6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\",\n            key: \"116196\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 14 2 2 4-4\",\n            key: \"df797q\"\n        }\n    ]\n]);\nconst ClipboardCopy = createLucideIcon(\"ClipboardCopy\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"4\",\n            x: \"8\",\n            y: \"2\",\n            rx: \"1\",\n            ry: \"1\",\n            key: \"tgr4d6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2\",\n            key: \"4jdomd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 4h2a2 2 0 0 1 2 2v4\",\n            key: \"3hqy98\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 14H11\",\n            key: \"1bme5i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 10-4 4 4 4\",\n            key: \"5dvupr\"\n        }\n    ]\n]);\nconst ClipboardEdit = createLucideIcon(\"ClipboardEdit\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"4\",\n            x: \"8\",\n            y: \"2\",\n            rx: \"1\",\n            ry: \"1\",\n            key: \"tgr4d6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.42 12.61a2.1 2.1 0 1 1 2.97 2.97L7.95 21 4 22l.99-3.95 5.43-5.44Z\",\n            key: \"1rgxu8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-5.5\",\n            key: \"cereej\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 13.5V6a2 2 0 0 1 2-2h2\",\n            key: \"5ua5vh\"\n        }\n    ]\n]);\nconst ClipboardList = createLucideIcon(\"ClipboardList\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"4\",\n            x: \"8\",\n            y: \"2\",\n            rx: \"1\",\n            ry: \"1\",\n            key: \"tgr4d6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\",\n            key: \"116196\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 11h4\",\n            key: \"1jrz19\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16h4\",\n            key: \"n85exb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 11h.01\",\n            key: \"1dfujw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16h.01\",\n            key: \"18s6g9\"\n        }\n    ]\n]);\nconst ClipboardPaste = createLucideIcon(\"ClipboardPaste\", [\n    [\n        \"path\",\n        {\n            d: \"M15 2H9a1 1 0 0 0-1 1v2c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1Z\",\n            key: \"1pp7kr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2M16 4h2a2 2 0 0 1 2 2v2M11 14h10\",\n            key: \"2ik1ml\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 10 4 4-4 4\",\n            key: \"vp2hj1\"\n        }\n    ]\n]);\nconst ClipboardSignature = createLucideIcon(\"ClipboardSignature\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"4\",\n            x: \"8\",\n            y: \"2\",\n            rx: \"1\",\n            ry: \"1\",\n            key: \"tgr4d6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-.5\",\n            key: \"1but9f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 4h2a2 2 0 0 1 1.73 1\",\n            key: \"1p8n7l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.42 9.61a2.1 2.1 0 1 1 2.97 2.97L16.95 17 13 18l.99-3.95 4.43-4.44Z\",\n            key: \"johvi5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 18h1\",\n            key: \"13wk12\"\n        }\n    ]\n]);\nconst ClipboardType = createLucideIcon(\"ClipboardType\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"4\",\n            x: \"8\",\n            y: \"2\",\n            rx: \"1\",\n            ry: \"1\",\n            key: \"tgr4d6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\",\n            key: \"116196\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 12v-1h6v1\",\n            key: \"iehl6m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 17h2\",\n            key: \"12w5me\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 11v6\",\n            key: \"1bwqyc\"\n        }\n    ]\n]);\nconst ClipboardX = createLucideIcon(\"ClipboardX\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"4\",\n            x: \"8\",\n            y: \"2\",\n            rx: \"1\",\n            ry: \"1\",\n            key: \"tgr4d6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\",\n            key: \"116196\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 11-6 6\",\n            key: \"1toa9n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 11 6 6\",\n            key: \"wlibny\"\n        }\n    ]\n]);\nconst Clipboard = createLucideIcon(\"Clipboard\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"4\",\n            x: \"8\",\n            y: \"2\",\n            rx: \"1\",\n            ry: \"1\",\n            key: \"tgr4d6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\",\n            key: \"116196\"\n        }\n    ]\n]);\nconst Clock1 = createLucideIcon(\"Clock1\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 14.5 8\",\n            key: \"12zbmj\"\n        }\n    ]\n]);\nconst Clock10 = createLucideIcon(\"Clock10\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 8 10\",\n            key: \"atfzqc\"\n        }\n    ]\n]);\nconst Clock11 = createLucideIcon(\"Clock11\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 9.5 8\",\n            key: \"l5bg6f\"\n        }\n    ]\n]);\nconst Clock12 = createLucideIcon(\"Clock12\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12\",\n            key: \"1fub01\"\n        }\n    ]\n]);\nconst Clock2 = createLucideIcon(\"Clock2\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 16 10\",\n            key: \"1g230d\"\n        }\n    ]\n]);\nconst Clock3 = createLucideIcon(\"Clock3\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 16.5 12\",\n            key: \"1aq6pp\"\n        }\n    ]\n]);\nconst Clock4 = createLucideIcon(\"Clock4\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 16 14\",\n            key: \"68esgv\"\n        }\n    ]\n]);\nconst Clock5 = createLucideIcon(\"Clock5\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 14.5 16\",\n            key: \"1pcbox\"\n        }\n    ]\n]);\nconst Clock6 = createLucideIcon(\"Clock6\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 12 16.5\",\n            key: \"hb2qv6\"\n        }\n    ]\n]);\nconst Clock7 = createLucideIcon(\"Clock7\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 9.5 16\",\n            key: \"ka3394\"\n        }\n    ]\n]);\nconst Clock8 = createLucideIcon(\"Clock8\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 8 14\",\n            key: \"tmc9b4\"\n        }\n    ]\n]);\nconst Clock9 = createLucideIcon(\"Clock9\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 7.5 12\",\n            key: \"1k60p0\"\n        }\n    ]\n]);\nconst Clock = createLucideIcon(\"Clock\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 6 12 12 16 14\",\n            key: \"68esgv\"\n        }\n    ]\n]);\nconst CloudCog = createLucideIcon(\"CloudCog\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"17\",\n            r: \"3\",\n            key: \"1spfwm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.2 15.1A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.2\",\n            key: \"zaobp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15.7 18.4-.9-.3\",\n            key: \"4qxpbn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.2 15.9-.9-.3\",\n            key: \"17q7o2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10.6 20.7.3-.9\",\n            key: \"1pf4s2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13.1 14.2.3-.9\",\n            key: \"1mnuqm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13.6 20.7-.4-1\",\n            key: \"1jpd1m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10.8 14.3-.4-1\",\n            key: \"17ugyy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8.3 18.6 1-.4\",\n            key: \"s42vdx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.7 15.8 1-.4\",\n            key: \"2wizun\"\n        }\n    ]\n]);\nconst CloudDrizzle = createLucideIcon(\"CloudDrizzle\", [\n    [\n        \"path\",\n        {\n            d: \"M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242\",\n            key: \"1pljnt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 19v1\",\n            key: \"1dk2by\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14v1\",\n            key: \"84yxot\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 19v1\",\n            key: \"v220m7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 14v1\",\n            key: \"g12gj6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 21v1\",\n            key: \"q8vafk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16v1\",\n            key: \"1mx6rx\"\n        }\n    ]\n]);\nconst CloudFog = createLucideIcon(\"CloudFog\", [\n    [\n        \"path\",\n        {\n            d: \"M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242\",\n            key: \"1pljnt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 17H7\",\n            key: \"pygtm1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 21H9\",\n            key: \"1u2q02\"\n        }\n    ]\n]);\nconst CloudHail = createLucideIcon(\"CloudHail\", [\n    [\n        \"path\",\n        {\n            d: \"M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242\",\n            key: \"1pljnt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 14v2\",\n            key: \"a1is7l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14v2\",\n            key: \"1e9m6t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 20h.01\",\n            key: \"xwek51\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 20h.01\",\n            key: \"1vjney\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16v2\",\n            key: \"z66u1j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22h.01\",\n            key: \"1urd7a\"\n        }\n    ]\n]);\nconst CloudLightning = createLucideIcon(\"CloudLightning\", [\n    [\n        \"path\",\n        {\n            d: \"M6 16.326A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 .5 8.973\",\n            key: \"1cez44\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 12-3 5h4l-3 5\",\n            key: \"1t22er\"\n        }\n    ]\n]);\nconst CloudMoonRain = createLucideIcon(\"CloudMoonRain\", [\n    [\n        \"path\",\n        {\n            d: \"M10.083 9A6.002 6.002 0 0 1 16 4a4.243 4.243 0 0 0 6 6c0 2.22-1.206 4.16-3 5.197\",\n            key: \"u82z8m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24\",\n            key: \"1qmrp3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 20v2\",\n            key: \"174qtz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 19v2\",\n            key: \"12npes\"\n        }\n    ]\n]);\nconst CloudMoon = createLucideIcon(\"CloudMoon\", [\n    [\n        \"path\",\n        {\n            d: \"M13 16a3 3 0 1 1 0 6H7a5 5 0 1 1 4.9-6Z\",\n            key: \"p44pc9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.1 9A6 6 0 0 1 16 4a4.24 4.24 0 0 0 6 6 6 6 0 0 1-3 5.197\",\n            key: \"16nha0\"\n        }\n    ]\n]);\nconst CloudOff = createLucideIcon(\"CloudOff\", [\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.782 5.782A7 7 0 0 0 9 19h8.5a4.5 4.5 0 0 0 1.307-.193\",\n            key: \"yfwify\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21.532 16.5A4.5 4.5 0 0 0 17.5 10h-1.79A7.008 7.008 0 0 0 10 5.07\",\n            key: \"jlfiyv\"\n        }\n    ]\n]);\nconst CloudRainWind = createLucideIcon(\"CloudRainWind\", [\n    [\n        \"path\",\n        {\n            d: \"M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242\",\n            key: \"1pljnt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.2 22 3-7\",\n            key: \"sb5f6j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 13-3 7\",\n            key: \"500co5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 13-3 7\",\n            key: \"8t2fiy\"\n        }\n    ]\n]);\nconst CloudRain = createLucideIcon(\"CloudRain\", [\n    [\n        \"path\",\n        {\n            d: \"M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242\",\n            key: \"1pljnt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 14v6\",\n            key: \"1j4efv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14v6\",\n            key: \"17c4r9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16v6\",\n            key: \"c8a4gj\"\n        }\n    ]\n]);\nconst CloudSnow = createLucideIcon(\"CloudSnow\", [\n    [\n        \"path\",\n        {\n            d: \"M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242\",\n            key: \"1pljnt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 15h.01\",\n            key: \"a7atzg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 19h.01\",\n            key: \"puxtts\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17h.01\",\n            key: \"p32p05\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 21h.01\",\n            key: \"h35vbk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 15h.01\",\n            key: \"rnfrdf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 19h.01\",\n            key: \"1vcnzz\"\n        }\n    ]\n]);\nconst CloudSunRain = createLucideIcon(\"CloudSunRain\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2v2\",\n            key: \"tus03m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.93 4.93 1.41 1.41\",\n            key: \"149t6j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 12h2\",\n            key: \"1q8mjw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.07 4.93-1.41 1.41\",\n            key: \"1shlcs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.947 12.65a4 4 0 0 0-5.925-4.128\",\n            key: \"dpwdj0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24\",\n            key: \"1qmrp3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 20v2\",\n            key: \"174qtz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 19v2\",\n            key: \"12npes\"\n        }\n    ]\n]);\nconst CloudSun = createLucideIcon(\"CloudSun\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2v2\",\n            key: \"tus03m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.93 4.93 1.41 1.41\",\n            key: \"149t6j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 12h2\",\n            key: \"1q8mjw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.07 4.93-1.41 1.41\",\n            key: \"1shlcs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.947 12.65a4 4 0 0 0-5.925-4.128\",\n            key: \"dpwdj0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 22H7a5 5 0 1 1 4.9-6H13a3 3 0 0 1 0 6Z\",\n            key: \"s09mg5\"\n        }\n    ]\n]);\nconst Cloud = createLucideIcon(\"Cloud\", [\n    [\n        \"path\",\n        {\n            d: \"M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z\",\n            key: \"p7xjir\"\n        }\n    ]\n]);\nconst Cloudy = createLucideIcon(\"Cloudy\", [\n    [\n        \"path\",\n        {\n            d: \"M17.5 21H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z\",\n            key: \"gqqjvc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 10a3 3 0 0 0-3-3h-2.207a5.502 5.502 0 0 0-10.702.5\",\n            key: \"1p2s76\"\n        }\n    ]\n]);\nconst Clover = createLucideIcon(\"Clover\", [\n    [\n        \"path\",\n        {\n            d: \"M16.2 3.8a2.7 2.7 0 0 0-3.81 0l-.4.38-.4-.4a2.7 2.7 0 0 0-3.82 0C6.73 4.85 6.67 6.64 8 8l4 4 4-4c1.33-1.36 1.27-3.15.2-4.2z\",\n            key: \"1gxwox\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 8c-1.36-1.33-3.15-1.27-4.2-.2a2.7 2.7 0 0 0 0 3.81l.38.4-.4.4a2.7 2.7 0 0 0 0 3.82C4.85 17.27 6.64 17.33 8 16\",\n            key: \"il7z7z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16c1.36 1.33 3.15 1.27 4.2.2a2.7 2.7 0 0 0 0-3.81l-.38-.4.4-.4a2.7 2.7 0 0 0 0-3.82C19.15 6.73 17.36 6.67 16 8\",\n            key: \"15bpx2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.8 20.2a2.7 2.7 0 0 0 3.81 0l.4-.38.4.4a2.7 2.7 0 0 0 3.82 0c1.06-1.06 1.12-2.85-.21-4.21l-4-4-4 4c-1.33 1.36-1.27 3.15-.2 4.2z\",\n            key: \"v9mug8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 17-5 5\",\n            key: \"1py3mz\"\n        }\n    ]\n]);\nconst Club = createLucideIcon(\"Club\", [\n    [\n        \"path\",\n        {\n            d: \"M17.28 9.05a5.5 5.5 0 1 0-10.56 0A5.5 5.5 0 1 0 12 17.66a5.5 5.5 0 1 0 5.28-8.6Z\",\n            key: \"27yuqz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17.66L12 22\",\n            key: \"ogfahf\"\n        }\n    ]\n]);\nconst Code2 = createLucideIcon(\"Code2\", [\n    [\n        \"path\",\n        {\n            d: \"m18 16 4-4-4-4\",\n            key: \"1inbqp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 8-4 4 4 4\",\n            key: \"15zrgr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.5 4-5 16\",\n            key: \"e7oirm\"\n        }\n    ]\n]);\nconst Code = createLucideIcon(\"Code\", [\n    [\n        \"polyline\",\n        {\n            points: \"16 18 22 12 16 6\",\n            key: \"z7tu5w\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"8 6 2 12 8 18\",\n            key: \"1eg1df\"\n        }\n    ]\n]);\nconst Codepen = createLucideIcon(\"Codepen\", [\n    [\n        \"polygon\",\n        {\n            points: \"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\",\n            key: \"srzb37\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22\",\n            y2: \"15.5\",\n            key: \"1t73f2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"22 8.5 12 15.5 2 8.5\",\n            key: \"ajlxae\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"2 15.5 12 8.5 22 15.5\",\n            key: \"susrui\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"8.5\",\n            key: \"2cldga\"\n        }\n    ]\n]);\nconst Codesandbox = createLucideIcon(\"Codesandbox\", [\n    [\n        \"path\",\n        {\n            d: \"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\",\n            key: \"yt0hxn\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"7.5 4.21 12 6.81 16.5 4.21\",\n            key: \"fabo96\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"7.5 19.79 7.5 14.6 3 12\",\n            key: \"z377f1\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"21 12 16.5 14.6 16.5 19.79\",\n            key: \"9nrev1\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"3.27 6.96 12 12.01 20.73 6.96\",\n            key: \"1180pa\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22.08\",\n            y2: \"12\",\n            key: \"3z3uq6\"\n        }\n    ]\n]);\nconst Coffee = createLucideIcon(\"Coffee\", [\n    [\n        \"path\",\n        {\n            d: \"M17 8h1a4 4 0 1 1 0 8h-1\",\n            key: \"jx4kbh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 8h14v9a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4Z\",\n            key: \"1bxrl0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"2\",\n            y2: \"4\",\n            key: \"1cr9l3\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"10\",\n            y1: \"2\",\n            y2: \"4\",\n            key: \"170wym\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"14\",\n            y1: \"2\",\n            y2: \"4\",\n            key: \"1c5f70\"\n        }\n    ]\n]);\nconst Cog = createLucideIcon(\"Cog\", [\n    [\n        \"path\",\n        {\n            d: \"M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z\",\n            key: \"sobvz5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z\",\n            key: \"11i496\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v2\",\n            key: \"tus03m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22v-2\",\n            key: \"1osdcq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 20.66-1-1.73\",\n            key: \"eq3orb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 10.27 7 3.34\",\n            key: \"16pf9h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20.66 17-1.73-1\",\n            key: \"sg0v6f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.34 7 1.73 1\",\n            key: \"1ulond\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 12h8\",\n            key: \"4f43i9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12h2\",\n            key: \"1t8f8n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20.66 7-1.73 1\",\n            key: \"1ow05n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.34 17 1.73-1\",\n            key: \"nuk764\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 3.34-1 1.73\",\n            key: \"2wel8s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m11 13.73-4 6.93\",\n            key: \"794ttg\"\n        }\n    ]\n]);\nconst Coins = createLucideIcon(\"Coins\", [\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"8\",\n            r: \"6\",\n            key: \"3yglwk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.09 10.37A6 6 0 1 1 10.34 18\",\n            key: \"t5s6rm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 6h1v4\",\n            key: \"1obek4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.71 13.88.7.71-2.82 2.82\",\n            key: \"1rbuyh\"\n        }\n    ]\n]);\nconst Columns = createLucideIcon(\"Columns\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"3\",\n            y2: \"21\",\n            key: \"1efggb\"\n        }\n    ]\n]);\nconst Combine = createLucideIcon(\"Combine\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"8\",\n            x: \"2\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"z1hh3n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 2c1.1 0 2 .9 2 2v4c0 1.1-.9 2-2 2\",\n            key: \"83orz6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 2c1.1 0 2 .9 2 2v4c0 1.1-.9 2-2 2\",\n            key: \"k86dmt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 18H5c-1.7 0-3-1.3-3-3v-1\",\n            key: \"6vokjl\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"7 21 10 18 7 15\",\n            key: \"1k02g0\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"8\",\n            x: \"14\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"1fa9i4\"\n        }\n    ]\n]);\nconst Command = createLucideIcon(\"Command\", [\n    [\n        \"path\",\n        {\n            d: \"M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3\",\n            key: \"11bfej\"\n        }\n    ]\n]);\nconst Compass = createLucideIcon(\"Compass\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polygon\",\n        {\n            points: \"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\",\n            key: \"m9r19z\"\n        }\n    ]\n]);\nconst Component = createLucideIcon(\"Component\", [\n    [\n        \"path\",\n        {\n            d: \"M5.5 8.5 9 12l-3.5 3.5L2 12l3.5-3.5Z\",\n            key: \"1kciei\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 2 3.5 3.5L12 9 8.5 5.5 12 2Z\",\n            key: \"1ome0g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.5 8.5 22 12l-3.5 3.5L15 12l3.5-3.5Z\",\n            key: \"vbupec\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 15 3.5 3.5L12 22l-3.5-3.5L12 15Z\",\n            key: \"16csic\"\n        }\n    ]\n]);\nconst Computer = createLucideIcon(\"Computer\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"8\",\n            x: \"5\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"wc9tft\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"8\",\n            x: \"2\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"w68u3i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18h2\",\n            key: \"rwmk9e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18h6\",\n            key: \"aqd8w3\"\n        }\n    ]\n]);\nconst ConciergeBell = createLucideIcon(\"ConciergeBell\", [\n    [\n        \"path\",\n        {\n            d: \"M2 18a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v2H2v-2Z\",\n            key: \"1co3i8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 16a8 8 0 1 0-16 0\",\n            key: \"1pa543\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 4v4\",\n            key: \"1bq03y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 4h4\",\n            key: \"1xpv9s\"\n        }\n    ]\n]);\nconst Construction = createLucideIcon(\"Construction\", [\n    [\n        \"rect\",\n        {\n            x: \"2\",\n            y: \"6\",\n            width: \"20\",\n            height: \"8\",\n            rx: \"1\",\n            key: \"1estib\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 14v7\",\n            key: \"7m2elx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 14v7\",\n            key: \"1cm7wv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 3v3\",\n            key: \"1v4jwn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 3v3\",\n            key: \"7o6guu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 14 2.3 6.3\",\n            key: \"1023jk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 6 7.7 7.7\",\n            key: \"1s8pl2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 6 8 8\",\n            key: \"hl96qh\"\n        }\n    ]\n]);\nconst Contact2 = createLucideIcon(\"Contact2\", [\n    [\n        \"path\",\n        {\n            d: \"M16 18a4 4 0 0 0-8 0\",\n            key: \"1lzouq\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"11\",\n            r: \"3\",\n            key: \"itu57m\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"1hopcy\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"4\",\n            key: \"1ff9gb\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"4\",\n            key: \"1ufoma\"\n        }\n    ]\n]);\nconst Contact = createLucideIcon(\"Contact\", [\n    [\n        \"path\",\n        {\n            d: \"M17 18a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2\",\n            key: \"1mghuy\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"1hopcy\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"10\",\n            r: \"2\",\n            key: \"1yojzk\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"4\",\n            key: \"1ff9gb\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"4\",\n            key: \"1ufoma\"\n        }\n    ]\n]);\nconst Container = createLucideIcon(\"Container\", [\n    [\n        \"path\",\n        {\n            d: \"M22 7.7c0-.6-.4-1.2-.8-1.5l-6.3-3.9a1.72 1.72 0 0 0-1.7 0l-10.3 6c-.5.2-.9.8-.9 1.4v6.6c0 .5.4 1.2.8 1.5l6.3 3.9a1.72 1.72 0 0 0 1.7 0l10.3-6c.5-.3.9-1 .9-1.5Z\",\n            key: \"1t2lqe\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 21.9V14L2.1 9.1\",\n            key: \"o7czzq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 14 11.9-6.9\",\n            key: \"zm5e20\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 19.8v-8.1\",\n            key: \"159ecu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 17.5V9.4\",\n            key: \"11uown\"\n        }\n    ]\n]);\nconst Contrast = createLucideIcon(\"Contrast\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18a6 6 0 0 0 0-12v12z\",\n            key: \"j4l70d\"\n        }\n    ]\n]);\nconst Cookie = createLucideIcon(\"Cookie\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5\",\n            key: \"laymnq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.5 8.5v.01\",\n            key: \"ue8clq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 15.5v.01\",\n            key: \"14dtrp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v.01\",\n            key: \"u5ubse\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 17v.01\",\n            key: \"1hyl5a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 14v.01\",\n            key: \"uct60s\"\n        }\n    ]\n]);\nconst CopyCheck = createLucideIcon(\"CopyCheck\", [\n    [\n        \"path\",\n        {\n            d: \"m12 15 2 2 4-4\",\n            key: \"2c609p\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"14\",\n            x: \"8\",\n            y: \"8\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"17jyea\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\",\n            key: \"zix9uf\"\n        }\n    ]\n]);\nconst CopyMinus = createLucideIcon(\"CopyMinus\", [\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"18\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"1nscbv\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"14\",\n            x: \"8\",\n            y: \"8\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"17jyea\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\",\n            key: \"zix9uf\"\n        }\n    ]\n]);\nconst CopyPlus = createLucideIcon(\"CopyPlus\", [\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15\",\n            y1: \"12\",\n            y2: \"18\",\n            key: \"1p7wdc\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"18\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"1nscbv\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"14\",\n            x: \"8\",\n            y: \"8\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"17jyea\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\",\n            key: \"zix9uf\"\n        }\n    ]\n]);\nconst CopySlash = createLucideIcon(\"CopySlash\", [\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"18\",\n            y1: \"18\",\n            y2: \"12\",\n            key: \"ebkxgr\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"14\",\n            x: \"8\",\n            y: \"8\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"17jyea\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\",\n            key: \"zix9uf\"\n        }\n    ]\n]);\nconst CopyX = createLucideIcon(\"CopyX\", [\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"18\",\n            y1: \"12\",\n            y2: \"18\",\n            key: \"1rg63v\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"18\",\n            y1: \"18\",\n            y2: \"12\",\n            key: \"ebkxgr\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"14\",\n            x: \"8\",\n            y: \"8\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"17jyea\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\",\n            key: \"zix9uf\"\n        }\n    ]\n]);\nconst Copy = createLucideIcon(\"Copy\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"14\",\n            x: \"8\",\n            y: \"8\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"17jyea\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\",\n            key: \"zix9uf\"\n        }\n    ]\n]);\nconst Copyleft = createLucideIcon(\"Copyleft\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 9.35a4 4 0 1 1 0 5.3\",\n            key: \"p8fkhi\"\n        }\n    ]\n]);\nconst Copyright = createLucideIcon(\"Copyright\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 9.354a4 4 0 1 0 0 5.292\",\n            key: \"8xfhbo\"\n        }\n    ]\n]);\nconst CornerDownLeft = createLucideIcon(\"CornerDownLeft\", [\n    [\n        \"polyline\",\n        {\n            points: \"9 10 4 15 9 20\",\n            key: \"r3jprv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 4v7a4 4 0 0 1-4 4H4\",\n            key: \"6o5b7l\"\n        }\n    ]\n]);\nconst CornerDownRight = createLucideIcon(\"CornerDownRight\", [\n    [\n        \"polyline\",\n        {\n            points: \"15 10 20 15 15 20\",\n            key: \"1q7qjw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 4v7a4 4 0 0 0 4 4h12\",\n            key: \"z08zvw\"\n        }\n    ]\n]);\nconst CornerLeftDown = createLucideIcon(\"CornerLeftDown\", [\n    [\n        \"polyline\",\n        {\n            points: \"14 15 9 20 4 15\",\n            key: \"nkc4i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 4h-7a4 4 0 0 0-4 4v12\",\n            key: \"nbpdq2\"\n        }\n    ]\n]);\nconst CornerLeftUp = createLucideIcon(\"CornerLeftUp\", [\n    [\n        \"polyline\",\n        {\n            points: \"14 9 9 4 4 9\",\n            key: \"m9oyvo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 20h-7a4 4 0 0 1-4-4V4\",\n            key: \"1blwi3\"\n        }\n    ]\n]);\nconst CornerRightDown = createLucideIcon(\"CornerRightDown\", [\n    [\n        \"polyline\",\n        {\n            points: \"10 15 15 20 20 15\",\n            key: \"axus6l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 4h7a4 4 0 0 1 4 4v12\",\n            key: \"wcbgct\"\n        }\n    ]\n]);\nconst CornerRightUp = createLucideIcon(\"CornerRightUp\", [\n    [\n        \"polyline\",\n        {\n            points: \"10 9 15 4 20 9\",\n            key: \"1lr6px\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 20h7a4 4 0 0 0 4-4V4\",\n            key: \"1plgdj\"\n        }\n    ]\n]);\nconst CornerUpLeft = createLucideIcon(\"CornerUpLeft\", [\n    [\n        \"polyline\",\n        {\n            points: \"9 14 4 9 9 4\",\n            key: \"881910\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 20v-7a4 4 0 0 0-4-4H4\",\n            key: \"1nkjon\"\n        }\n    ]\n]);\nconst CornerUpRight = createLucideIcon(\"CornerUpRight\", [\n    [\n        \"polyline\",\n        {\n            points: \"15 14 20 9 15 4\",\n            key: \"1tbx3s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 20v-7a4 4 0 0 1 4-4h12\",\n            key: \"1lu4f8\"\n        }\n    ]\n]);\nconst Cpu = createLucideIcon(\"Cpu\", [\n    [\n        \"rect\",\n        {\n            x: \"4\",\n            y: \"4\",\n            width: \"16\",\n            height: \"16\",\n            rx: \"2\",\n            key: \"1vbyd7\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"9\",\n            y: \"9\",\n            width: \"6\",\n            height: \"6\",\n            key: \"o3kz5p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 2v2\",\n            key: \"13l42r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 20v2\",\n            key: \"15mkzm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 15h2\",\n            key: \"1gxd5l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 9h2\",\n            key: \"1bbxkp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 15h2\",\n            key: \"19e6y8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 9h2\",\n            key: \"19tzq7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 2v2\",\n            key: \"165o2o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 20v2\",\n            key: \"i2bqo8\"\n        }\n    ]\n]);\nconst CreativeCommons = createLucideIcon(\"CreativeCommons\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1\",\n            key: \"1ss3eq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1\",\n            key: \"1od56t\"\n        }\n    ]\n]);\nconst CreditCard = createLucideIcon(\"CreditCard\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"5\",\n            rx: \"2\",\n            key: \"ynyp8z\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"1b3vmo\"\n        }\n    ]\n]);\nconst Croissant = createLucideIcon(\"Croissant\", [\n    [\n        \"path\",\n        {\n            d: \"m4.6 13.11 5.79-3.21c1.89-1.05 4.79 1.78 3.71 3.71l-3.22 5.81C8.8 23.16.79 15.23 4.6 13.11Z\",\n            key: \"1ozxlb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10.5 9.5-1-2.29C9.2 6.48 8.8 6 8 6H4.5C2.79 6 2 6.5 2 8.5a7.71 7.71 0 0 0 2 4.83\",\n            key: \"ffuyb5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 6c0-1.55.24-4-2-4-2 0-2.5 2.17-2.5 4\",\n            key: \"osnpzi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.5 13.5 2.29 1c.73.3 1.21.7 1.21 1.5v3.5c0 1.71-.5 2.5-2.5 2.5a7.71 7.71 0 0 1-4.83-2\",\n            key: \"1vubaw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 16c1.55 0 4-.24 4 2 0 2-2.17 2.5-4 2.5\",\n            key: \"wxr772\"\n        }\n    ]\n]);\nconst Crop = createLucideIcon(\"Crop\", [\n    [\n        \"path\",\n        {\n            d: \"M6 2v14a2 2 0 0 0 2 2h14\",\n            key: \"ron5a4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 22V8a2 2 0 0 0-2-2H2\",\n            key: \"7s9ehn\"\n        }\n    ]\n]);\nconst Cross = createLucideIcon(\"Cross\", [\n    [\n        \"path\",\n        {\n            d: \"M11 2a2 2 0 0 0-2 2v5H4a2 2 0 0 0-2 2v2c0 1.1.9 2 2 2h5v5c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-5h5a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-5V4a2 2 0 0 0-2-2h-2z\",\n            key: \"1t5g7j\"\n        }\n    ]\n]);\nconst Crosshair = createLucideIcon(\"Crosshair\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"18\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"l9bcsi\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"2\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"13hhkx\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"6\",\n            y2: \"2\",\n            key: \"10w3f3\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22\",\n            y2: \"18\",\n            key: \"15g9kq\"\n        }\n    ]\n]);\nconst Crown = createLucideIcon(\"Crown\", [\n    [\n        \"path\",\n        {\n            d: \"m2 4 3 12h14l3-12-6 7-4-7-4 7-6-7zm3 16h14\",\n            key: \"zkxr6b\"\n        }\n    ]\n]);\nconst CupSoda = createLucideIcon(\"CupSoda\", [\n    [\n        \"path\",\n        {\n            d: \"m6 8 1.75 12.28a2 2 0 0 0 2 1.72h4.54a2 2 0 0 0 2-1.72L18 8\",\n            key: \"8166m8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 8h14\",\n            key: \"pcz4l3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 15a6.47 6.47 0 0 1 5 0 6.47 6.47 0 0 0 5 0\",\n            key: \"yjz344\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 8 1-6h2\",\n            key: \"3ybfa4\"\n        }\n    ]\n]);\nconst Currency = createLucideIcon(\"Currency\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"8\",\n            key: \"46899m\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"6\",\n            y1: \"3\",\n            y2: \"6\",\n            key: \"1jkytn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"18\",\n            y1: \"3\",\n            y2: \"6\",\n            key: \"14zfjt\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"6\",\n            y1: \"21\",\n            y2: \"18\",\n            key: \"iusuec\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"18\",\n            y1: \"21\",\n            y2: \"18\",\n            key: \"yj2dd7\"\n        }\n    ]\n]);\nconst DatabaseBackup = createLucideIcon(\"DatabaseBackup\", [\n    [\n        \"ellipse\",\n        {\n            cx: \"12\",\n            cy: \"5\",\n            rx: \"9\",\n            ry: \"3\",\n            key: \"msslwz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12a9 3 0 0 0 5 2.69\",\n            key: \"1ui2ym\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 9.3V5\",\n            key: \"6k6cib\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 5v14a9 3 0 0 0 6.47 2.88\",\n            key: \"i62tjy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v4h4\",\n            key: \"1bxaet\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 20a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L12 16\",\n            key: \"1f4ei9\"\n        }\n    ]\n]);\nconst DatabaseZap = createLucideIcon(\"DatabaseZap\", [\n    [\n        \"ellipse\",\n        {\n            cx: \"12\",\n            cy: \"5\",\n            rx: \"9\",\n            ry: \"3\",\n            key: \"msslwz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 5V19A9 3 0 0 0 15 21.84\",\n            key: \"14ibmq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 5V8\",\n            key: \"1marbg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12L18 17H22L19 22\",\n            key: \"zafso\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12A9 3 0 0 0 14.59 14.87\",\n            key: \"1y4wr8\"\n        }\n    ]\n]);\nconst Database = createLucideIcon(\"Database\", [\n    [\n        \"ellipse\",\n        {\n            cx: \"12\",\n            cy: \"5\",\n            rx: \"9\",\n            ry: \"3\",\n            key: \"msslwz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 5V19A9 3 0 0 0 21 19V5\",\n            key: \"1wlel7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12A9 3 0 0 0 21 12\",\n            key: \"mv7ke4\"\n        }\n    ]\n]);\nconst Delete = createLucideIcon(\"Delete\", [\n    [\n        \"path\",\n        {\n            d: \"M20 5H9l-7 7 7 7h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2Z\",\n            key: \"1oy587\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"12\",\n            y1: \"9\",\n            y2: \"15\",\n            key: \"1olkx5\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"18\",\n            y1: \"9\",\n            y2: \"15\",\n            key: \"1n50pc\"\n        }\n    ]\n]);\nconst Dessert = createLucideIcon(\"Dessert\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"4\",\n            r: \"2\",\n            key: \"muu5ef\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.2 3.2C5.5 4 2 8.1 2 13a2 2 0 0 0 4 0v-1a2 2 0 0 1 4 0v4a2 2 0 0 0 4 0v-4a2 2 0 0 1 4 0v1a2 2 0 0 0 4 0c0-4.9-3.5-9-8.2-9.8\",\n            key: \"lfo06j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.2 14.8a9 9 0 0 0 17.6 0\",\n            key: \"12xarc\"\n        }\n    ]\n]);\nconst Diamond = createLucideIcon(\"Diamond\", [\n    [\n        \"path\",\n        {\n            d: \"M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41l-7.59-7.59a2.41 2.41 0 0 0-3.41 0Z\",\n            key: \"1f1r0c\"\n        }\n    ]\n]);\nconst Dice1 = createLucideIcon(\"Dice1\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12h.01\",\n            key: \"1mp3jc\"\n        }\n    ]\n]);\nconst Dice2 = createLucideIcon(\"Dice2\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 9h.01\",\n            key: \"x1ddxp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 15h.01\",\n            key: \"fzyn71\"\n        }\n    ]\n]);\nconst Dice3 = createLucideIcon(\"Dice3\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8h.01\",\n            key: \"cr5u4v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12h.01\",\n            key: \"1mp3jc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16h.01\",\n            key: \"18s6g9\"\n        }\n    ]\n]);\nconst Dice4 = createLucideIcon(\"Dice4\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8h.01\",\n            key: \"cr5u4v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 8h.01\",\n            key: \"1e4136\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16h.01\",\n            key: \"18s6g9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16h.01\",\n            key: \"1f9h7w\"\n        }\n    ]\n]);\nconst Dice5 = createLucideIcon(\"Dice5\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8h.01\",\n            key: \"cr5u4v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 8h.01\",\n            key: \"1e4136\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16h.01\",\n            key: \"18s6g9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16h.01\",\n            key: \"1f9h7w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12h.01\",\n            key: \"1mp3jc\"\n        }\n    ]\n]);\nconst Dice6 = createLucideIcon(\"Dice6\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8h.01\",\n            key: \"cr5u4v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12h.01\",\n            key: \"1l6xoz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16h.01\",\n            key: \"1f9h7w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 8h.01\",\n            key: \"1e4136\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h.01\",\n            key: \"czm47f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16h.01\",\n            key: \"18s6g9\"\n        }\n    ]\n]);\nconst Dices = createLucideIcon(\"Dices\", [\n    [\n        \"rect\",\n        {\n            width: \"12\",\n            height: \"12\",\n            x: \"2\",\n            y: \"10\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"6agr2n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6\",\n            key: \"1o487t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18h.01\",\n            key: \"uhywen\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 14h.01\",\n            key: \"ssrbsk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 6h.01\",\n            key: \"cblpky\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 9h.01\",\n            key: \"2061c0\"\n        }\n    ]\n]);\nconst Diff = createLucideIcon(\"Diff\", [\n    [\n        \"path\",\n        {\n            d: \"M12 3v14\",\n            key: \"7cf3v8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 10h14\",\n            key: \"elsbfy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 21h14\",\n            key: \"11awu3\"\n        }\n    ]\n]);\nconst Disc2 = createLucideIcon(\"Disc2\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"4\",\n            key: \"4exip2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12h.01\",\n            key: \"1mp3jc\"\n        }\n    ]\n]);\nconst Disc3 = createLucideIcon(\"Disc3\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12c0-1.7.7-3.2 1.8-4.2\",\n            key: \"oqkarx\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"1c9p78\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 12c0 1.7-.7 3.2-1.8 4.2\",\n            key: \"1eah9h\"\n        }\n    ]\n]);\nconst Disc = createLucideIcon(\"Disc\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"1c9p78\"\n        }\n    ]\n]);\nconst DivideCircle = createLucideIcon(\"DivideCircle\", [\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"16\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1jonct\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"aqc6ln\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"8\",\n            y2: \"8\",\n            key: \"1mkcni\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ]\n]);\nconst DivideSquare = createLucideIcon(\"DivideSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"16\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1jonct\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"aqc6ln\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"8\",\n            y2: \"8\",\n            key: \"1mkcni\"\n        }\n    ]\n]);\nconst Divide = createLucideIcon(\"Divide\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"6\",\n            r: \"1\",\n            key: \"1bh7o1\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"5\",\n            x2: \"19\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"13b5wn\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"18\",\n            r: \"1\",\n            key: \"lqb9t5\"\n        }\n    ]\n]);\nconst DnaOff = createLucideIcon(\"DnaOff\", [\n    [\n        \"path\",\n        {\n            d: \"M15 2c-1.35 1.5-2.092 3-2.5 4.5M9 22c1.35-1.5 2.092-3 2.5-4.5\",\n            key: \"sxiaad\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 15c3.333-3 6.667-3 10-3m10-3c-1.5 1.35-3 2.092-4.5 2.5\",\n            key: \"yn4bs1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 6-2.5-2.5\",\n            key: \"5cdfhj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 8-1.5-1.5\",\n            key: \"1ohn8i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 18 2.5 2.5\",\n            key: \"16tu1a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.5 14.5.5.5\",\n            key: \"hapbhd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20 9 .5.5\",\n            key: \"1n7z02\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6.5 12.5 1 1\",\n            key: \"cs35ky\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.5 10.5 1 1\",\n            key: \"696xn5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 16 1.5 1.5\",\n            key: \"11lckj\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Dna = createLucideIcon(\"Dna\", [\n    [\n        \"path\",\n        {\n            d: \"M2 15c6.667-6 13.333 0 20-6\",\n            key: \"1pyr53\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 22c1.798-1.998 2.518-3.995 2.807-5.993\",\n            key: \"q3hbxp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 2c-1.798 1.998-2.518 3.995-2.807 5.993\",\n            key: \"80uv8i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 6-2.5-2.5\",\n            key: \"5cdfhj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 8-1-1\",\n            key: \"15nbz5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 18 2.5 2.5\",\n            key: \"16tu1a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.5 14.5.5.5\",\n            key: \"hapbhd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20 9 .5.5\",\n            key: \"1n7z02\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6.5 12.5 1 1\",\n            key: \"cs35ky\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.5 10.5 1 1\",\n            key: \"696xn5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 16 1.5 1.5\",\n            key: \"11lckj\"\n        }\n    ]\n]);\nconst Dog = createLucideIcon(\"Dog\", [\n    [\n        \"path\",\n        {\n            d: \"M10 5.172C10 3.782 8.423 2.679 6.5 3c-2.823.47-4.113 6.006-4 7 .08.703 1.725 1.722 3.656 1 1.261-.472 1.96-1.45 2.344-2.5\",\n            key: \"19br0u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.267 5.172c0-1.39 1.577-2.493 3.5-2.172 2.823.47 4.113 6.006 4 7-.08.703-1.725 1.722-3.656 1-1.261-.472-1.855-1.45-2.239-2.5\",\n            key: \"11n1an\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14v.5\",\n            key: \"1nzgdb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 14v.5\",\n            key: \"1lajdz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.25 16.25h1.5L12 17l-.75-.75Z\",\n            key: \"12kq1m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.42 11.247A13.152 13.152 0 0 0 4 14.556C4 18.728 7.582 21 12 21s8-2.272 8-6.444c0-1.061-.162-2.2-.493-3.309m-9.243-6.082A8.801 8.801 0 0 1 12 5c.78 0 1.5.108 2.161.306\",\n            key: \"wsu29d\"\n        }\n    ]\n]);\nconst DollarSign = createLucideIcon(\"DollarSign\", [\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"7eqyqh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\",\n            key: \"1b0p4s\"\n        }\n    ]\n]);\nconst Donut = createLucideIcon(\"Donut\", [\n    [\n        \"path\",\n        {\n            d: \"M20.5 10a2.5 2.5 0 0 1-2.4-3H18a2.95 2.95 0 0 1-2.6-4.4 10 10 0 1 0 6.3 7.1c-.3.2-.8.3-1.2.3\",\n            key: \"19sr3x\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ]\n]);\nconst DoorClosed = createLucideIcon(\"DoorClosed\", [\n    [\n        \"path\",\n        {\n            d: \"M18 20V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v14\",\n            key: \"36qu9e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 20h20\",\n            key: \"owomy5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 12v.01\",\n            key: \"xfcn54\"\n        }\n    ]\n]);\nconst DoorOpen = createLucideIcon(\"DoorOpen\", [\n    [\n        \"path\",\n        {\n            d: \"M13 4h3a2 2 0 0 1 2 2v14\",\n            key: \"hrm0s9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 20h3\",\n            key: \"1gaodv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 20h9\",\n            key: \"s90cdi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 12v.01\",\n            key: \"vx6srw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 4.562v16.157a1 1 0 0 1-1.242.97L5 20V5.562a2 2 0 0 1 1.515-1.94l4-1A2 2 0 0 1 13 4.561Z\",\n            key: \"199qr4\"\n        }\n    ]\n]);\nconst Dot = createLucideIcon(\"Dot\", [\n    [\n        \"circle\",\n        {\n            cx: \"12.1\",\n            cy: \"12.1\",\n            r: \"1\",\n            key: \"18d7e5\"\n        }\n    ]\n]);\nconst DownloadCloud = createLucideIcon(\"DownloadCloud\", [\n    [\n        \"path\",\n        {\n            d: \"M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242\",\n            key: \"1pljnt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v9\",\n            key: \"192myk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 17 4 4 4-4\",\n            key: \"1ul180\"\n        }\n    ]\n]);\nconst Download = createLucideIcon(\"Download\", [\n    [\n        \"path\",\n        {\n            d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\",\n            key: \"ih7n3h\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"7 10 12 15 17 10\",\n            key: \"2ggqvy\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"15\",\n            y2: \"3\",\n            key: \"1vk2je\"\n        }\n    ]\n]);\nconst Dribbble = createLucideIcon(\"Dribbble\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.13 5.09C15.22 9.14 10 10.44 2.25 10.94\",\n            key: \"hpej1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21.75 12.84c-6.62-1.41-12.14 1-16.38 6.32\",\n            key: \"1tr44o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.56 2.75c4.37 6 6 9.42 8 17.72\",\n            key: \"kbh691\"\n        }\n    ]\n]);\nconst Droplet = createLucideIcon(\"Droplet\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-4-6.5c-.5 2.5-2 4.9-4 6.5C6 11.1 5 13 5 15a7 7 0 0 0 7 7z\",\n            key: \"c7niix\"\n        }\n    ]\n]);\nconst Droplets = createLucideIcon(\"Droplets\", [\n    [\n        \"path\",\n        {\n            d: \"M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z\",\n            key: \"1ptgy4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97\",\n            key: \"1sl1rz\"\n        }\n    ]\n]);\nconst Drumstick = createLucideIcon(\"Drumstick\", [\n    [\n        \"path\",\n        {\n            d: \"M15.45 15.4c-2.13.65-4.3.32-5.7-1.1-2.29-2.27-1.76-6.5 1.17-9.42 2.93-2.93 7.15-3.46 9.43-1.18 1.41 1.41 1.74 3.57 1.1 5.71-1.4-.51-3.26-.02-4.64 1.36-1.38 1.38-1.87 3.23-1.36 4.63z\",\n            key: \"1o96s0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m11.25 15.6-2.16 2.16a2.5 2.5 0 1 1-4.56 1.73 2.49 2.49 0 0 1-1.41-4.24 2.5 2.5 0 0 1 3.14-.32l2.16-2.16\",\n            key: \"14vv5h\"\n        }\n    ]\n]);\nconst Dumbbell = createLucideIcon(\"Dumbbell\", [\n    [\n        \"path\",\n        {\n            d: \"m6.5 6.5 11 11\",\n            key: \"f7oqzb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 21-1-1\",\n            key: \"cpc6if\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 3 1 1\",\n            key: \"d3rpuf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 22 4-4\",\n            key: \"1e32o6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 6 4-4\",\n            key: \"189tqz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 10 7-7\",\n            key: \"1bxui2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 21 7-7\",\n            key: \"16x78n\"\n        }\n    ]\n]);\nconst EarOff = createLucideIcon(\"EarOff\", [\n    [\n        \"path\",\n        {\n            d: \"M6 18.5a3.5 3.5 0 1 0 7 0c0-1.57.92-2.52 2.04-3.46\",\n            key: \"1qngmn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 8.5c0-.75.13-1.47.36-2.14\",\n            key: \"b06bma\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.8 3.15A6.5 6.5 0 0 1 19 8.5c0 1.63-.44 2.81-1.09 3.76\",\n            key: \"g10hsz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12.5 6A2.5 2.5 0 0 1 15 8.5M10 13a2 2 0 0 0 1.82-1.18\",\n            key: \"ygzou7\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Ear = createLucideIcon(\"Ear\", [\n    [\n        \"path\",\n        {\n            d: \"M6 8.5a6.5 6.5 0 1 1 13 0c0 6-6 6-6 10a3.5 3.5 0 1 1-7 0\",\n            key: \"1dfaln\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 8.5a2.5 2.5 0 0 0-5 0v1a2 2 0 1 1 0 4\",\n            key: \"1qnva7\"\n        }\n    ]\n]);\nconst EggFried = createLucideIcon(\"EggFried\", [\n    [\n        \"circle\",\n        {\n            cx: \"11.5\",\n            cy: \"12.5\",\n            r: \"3.5\",\n            key: \"1cl1mi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 8c0-3.5 2.5-6 6.5-6 5 0 4.83 3 7.5 5s5 2 5 6c0 4.5-2.5 6.5-7 6.5-2.5 0-2.5 2.5-6 2.5s-7-2-7-5.5c0-3 1.5-3 1.5-5C3.5 10 3 9 3 8Z\",\n            key: \"165ef9\"\n        }\n    ]\n]);\nconst EggOff = createLucideIcon(\"EggOff\", [\n    [\n        \"path\",\n        {\n            d: \"M6.399 6.399C5.362 8.157 4.65 10.189 4.5 12c-.37 4.43 1.27 9.95 7.5 10 3.256-.026 5.259-1.547 6.375-3.625\",\n            key: \"6et380\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.532 13.875A14.07 14.07 0 0 0 19.5 12c-.36-4.34-3.95-9.96-7.5-10-1.04.012-2.082.502-3.046 1.297\",\n            key: \"gcdc3f\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Egg = createLucideIcon(\"Egg\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22c6.23-.05 7.87-5.57 7.5-10-.36-4.34-3.95-9.96-7.5-10-3.55.04-7.14 5.66-7.5 10-.37 4.43 1.27 9.95 7.5 10z\",\n            key: \"1c39pg\"\n        }\n    ]\n]);\nconst EqualNot = createLucideIcon(\"EqualNot\", [\n    [\n        \"line\",\n        {\n            x1: \"5\",\n            x2: \"19\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1nwqeh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"5\",\n            x2: \"19\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"g8yjpy\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"5\",\n            y1: \"5\",\n            y2: \"19\",\n            key: \"1x9vlm\"\n        }\n    ]\n]);\nconst Equal = createLucideIcon(\"Equal\", [\n    [\n        \"line\",\n        {\n            x1: \"5\",\n            x2: \"19\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1nwqeh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"5\",\n            x2: \"19\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"g8yjpy\"\n        }\n    ]\n]);\nconst Eraser = createLucideIcon(\"Eraser\", [\n    [\n        \"path\",\n        {\n            d: \"m7 21-4.3-4.3c-1-1-1-2.5 0-3.4l9.6-9.6c1-1 2.5-1 3.4 0l5.6 5.6c1 1 1 2.5 0 3.4L13 21\",\n            key: \"182aya\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 21H7\",\n            key: \"t4ddhn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 11 9 9\",\n            key: \"1mo9qw\"\n        }\n    ]\n]);\nconst Euro = createLucideIcon(\"Euro\", [\n    [\n        \"path\",\n        {\n            d: \"M4 10h12\",\n            key: \"1y6xl8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 14h9\",\n            key: \"1loblj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 6a7.7 7.7 0 0 0-5.2-2A7.9 7.9 0 0 0 6 12c0 4.4 3.5 8 7.8 8 2 0 3.8-.8 5.2-2\",\n            key: \"1j6lzo\"\n        }\n    ]\n]);\nconst Expand = createLucideIcon(\"Expand\", [\n    [\n        \"path\",\n        {\n            d: \"m21 21-6-6m6 6v-4.8m0 4.8h-4.8\",\n            key: \"1c15vz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 16.2V21m0 0h4.8M3 21l6-6\",\n            key: \"1fsnz2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 7.8V3m0 0h-4.8M21 3l-6 6\",\n            key: \"hawz9i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 7.8V3m0 0h4.8M3 3l6 6\",\n            key: \"u9ee12\"\n        }\n    ]\n]);\nconst ExternalLink = createLucideIcon(\"ExternalLink\", [\n    [\n        \"path\",\n        {\n            d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\",\n            key: \"a6xqqp\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"15 3 21 3 21 9\",\n            key: \"mznyad\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"21\",\n            y1: \"14\",\n            y2: \"3\",\n            key: \"18c3s4\"\n        }\n    ]\n]);\nconst EyeOff = createLucideIcon(\"EyeOff\", [\n    [\n        \"path\",\n        {\n            d: \"M9.88 9.88a3 3 0 1 0 4.24 4.24\",\n            key: \"1jxqfv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68\",\n            key: \"9wicm4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61\",\n            key: \"1jreej\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Eye = createLucideIcon(\"Eye\", [\n    [\n        \"path\",\n        {\n            d: \"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\",\n            key: \"rwhkz3\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ]\n]);\nconst Facebook = createLucideIcon(\"Facebook\", [\n    [\n        \"path\",\n        {\n            d: \"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\",\n            key: \"1jg4f8\"\n        }\n    ]\n]);\nconst Factory = createLucideIcon(\"Factory\", [\n    [\n        \"path\",\n        {\n            d: \"M2 20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8l-7 5V8l-7 5V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z\",\n            key: \"159hny\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 18h1\",\n            key: \"uldtlt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18h1\",\n            key: \"s9uhes\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 18h1\",\n            key: \"1neino\"\n        }\n    ]\n]);\nconst Fan = createLucideIcon(\"Fan\", [\n    [\n        \"path\",\n        {\n            d: \"M10.827 16.379a6.082 6.082 0 0 1-8.618-7.002l5.412 1.45a6.082 6.082 0 0 1 7.002-8.618l-1.45 5.412a6.082 6.082 0 0 1 8.618 7.002l-5.412-1.45a6.082 6.082 0 0 1-7.002 8.618l1.45-5.412Z\",\n            key: \"484a7f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v.01\",\n            key: \"u5ubse\"\n        }\n    ]\n]);\nconst FastForward = createLucideIcon(\"FastForward\", [\n    [\n        \"polygon\",\n        {\n            points: \"13 19 22 12 13 5 13 19\",\n            key: \"587y9g\"\n        }\n    ],\n    [\n        \"polygon\",\n        {\n            points: \"2 19 11 12 2 5 2 19\",\n            key: \"3pweh0\"\n        }\n    ]\n]);\nconst Feather = createLucideIcon(\"Feather\", [\n    [\n        \"path\",\n        {\n            d: \"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\",\n            key: \"u4sw5n\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"2\",\n            y1: \"8\",\n            y2: \"22\",\n            key: \"1c47m2\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"17.5\",\n            x2: \"9\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"2fj3pr\"\n        }\n    ]\n]);\nconst FerrisWheel = createLucideIcon(\"FerrisWheel\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"1c9p78\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v4\",\n            key: \"3427ic\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6.8 15-3.5 2\",\n            key: \"hjy98k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20.7 7-3.5 2\",\n            key: \"f08gto\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.8 9 3.3 7\",\n            key: \"1aevh4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20.7 17-3.5-2\",\n            key: \"1liqo3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 22 3-8 3 8\",\n            key: \"wees03\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 22h8\",\n            key: \"rmew8v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 18.7a9 9 0 1 0-12 0\",\n            key: \"dhzg4g\"\n        }\n    ]\n]);\nconst Figma = createLucideIcon(\"Figma\", [\n    [\n        \"path\",\n        {\n            d: \"M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z\",\n            key: \"1340ok\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z\",\n            key: \"1hz3m3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z\",\n            key: \"1oz8n2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z\",\n            key: \"1ff65i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z\",\n            key: \"pdip6e\"\n        }\n    ]\n]);\nconst FileArchive = createLucideIcon(\"FileArchive\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22V4c0-.5.2-1 .6-1.4C5 2.2 5.5 2 6 2h8.5L20 7.5V20c0 .5-.2 1-.6 1.4-.4.4-.9.6-1.4.6h-2\",\n            key: \"1u864v\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"10\",\n            cy: \"20\",\n            r: \"2\",\n            key: \"1xzdoj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 7V6\",\n            key: \"dljcrl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 12v-1\",\n            key: \"v7bkov\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 18v-2\",\n            key: \"1cjy8d\"\n        }\n    ]\n]);\nconst FileAudio2 = createLucideIcon(\"FileAudio2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v2\",\n            key: \"fkyf72\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 17v-3a4 4 0 0 1 8 0v3\",\n            key: \"1ggdre\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"17\",\n            r: \"1\",\n            key: \"bc1fq4\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"3\",\n            cy: \"17\",\n            r: \"1\",\n            key: \"vo6nti\"\n        }\n    ]\n]);\nconst FileAudio = createLucideIcon(\"FileAudio\", [\n    [\n        \"path\",\n        {\n            d: \"M17.5 22h.5c.5 0 1-.2 1.4-.6.4-.4.6-.9.6-1.4V7.5L14.5 2H6c-.5 0-1 .2-1.4.6C4.2 3 4 3.5 4 4v3\",\n            key: \"1013sb\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 20v-1a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0Z\",\n            key: \"gqt63y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 20v-1a2 2 0 1 0-4 0v1a2 2 0 1 0 4 0Z\",\n            key: \"cf7lqx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 19v-3a6 6 0 0 1 12 0v3\",\n            key: \"1acxgf\"\n        }\n    ]\n]);\nconst FileAxis3d = createLucideIcon(\"FileAxis3d\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 10v8h8\",\n            key: \"tlaukw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 18 4-4\",\n            key: \"12zab0\"\n        }\n    ]\n]);\nconst FileBadge2 = createLucideIcon(\"FileBadge2\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\",\n            key: \"13rien\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 12.5 1 5.5-3-1-3 1 1-5.5\",\n            key: \"14xlky\"\n        }\n    ]\n]);\nconst FileBadge = createLucideIcon(\"FileBadge\", [\n    [\n        \"path\",\n        {\n            d: \"M4 7V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2h-6\",\n            key: \"qtddq0\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 17a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\",\n            key: \"u0c8gj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 16.5 8 22l-3-1-3 1 1-5.5\",\n            key: \"5gm2nr\"\n        }\n    ]\n]);\nconst FileBarChart2 = createLucideIcon(\"FileBarChart2\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18v-6\",\n            key: \"17g6i2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 18v-1\",\n            key: \"zg0ygc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18v-3\",\n            key: \"j5jt4h\"\n        }\n    ]\n]);\nconst FileBarChart = createLucideIcon(\"FileBarChart\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18v-4\",\n            key: \"q1q25u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 18v-2\",\n            key: \"qcmpov\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18v-6\",\n            key: \"15y0np\"\n        }\n    ]\n]);\nconst FileBox = createLucideIcon(\"FileBox\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 22H18a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"h7jej2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2.97 13.12c-.6.36-.97 1.02-.97 1.74v3.28c0 .72.37 1.38.97 1.74l3 1.83c.63.39 1.43.39 2.06 0l3-1.83c.6-.36.97-1.02.97-1.74v-3.28c0-.72-.37-1.38-.97-1.74l-3-1.83a1.97 1.97 0 0 0-2.06 0l-3 1.83Z\",\n            key: \"f4a3oc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 17-4.74-2.85\",\n            key: \"etm6su\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 17 4.74-2.85\",\n            key: \"5xuooz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 17v5\",\n            key: \"1yj1jh\"\n        }\n    ]\n]);\nconst FileCheck2 = createLucideIcon(\"FileCheck2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"702lig\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 15 2 2 4-4\",\n            key: \"1lhrkk\"\n        }\n    ]\n]);\nconst FileCheck = createLucideIcon(\"FileCheck\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 15 2 2 4-4\",\n            key: \"1grp1n\"\n        }\n    ]\n]);\nconst FileClock = createLucideIcon(\"FileClock\", [\n    [\n        \"path\",\n        {\n            d: \"M16 22h2c.5 0 1-.2 1.4-.6.4-.4.6-.9.6-1.4V7.5L14.5 2H6c-.5 0-1 .2-1.4.6C4.2 3 4 3.5 4 4v3\",\n            key: \"9lo3o3\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"16\",\n            r: \"6\",\n            key: \"10v15b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.5 17.5 8 16.25V14\",\n            key: \"1o80t2\"\n        }\n    ]\n]);\nconst FileCode2 = createLucideIcon(\"FileCode2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"702lig\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 18 3-3-3-3\",\n            key: \"112psh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 12-3 3 3 3\",\n            key: \"oke12k\"\n        }\n    ]\n]);\nconst FileCode = createLucideIcon(\"FileCode\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 13-2 2 2 2\",\n            key: \"17smn8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 17 2-2-2-2\",\n            key: \"14mezr\"\n        }\n    ]\n]);\nconst FileCog = createLucideIcon(\"FileCog\", [\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"13\",\n            r: \"3\",\n            key: \"1z65bp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.7 14.4-.9-.3\",\n            key: \"o1luaq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.2 11.9-.9-.3\",\n            key: \"qm3zk5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.6 16.7.3-.9\",\n            key: \"1o0ect\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.6 16.7-.4-1\",\n            key: \"1ym8d1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.8 10.3-.4-1\",\n            key: \"18q26g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2.3 14.6 1-.4\",\n            key: \"121m88\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8.7 11.8 1-.4\",\n            key: \"9meqp2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.4 9.3-.3.9\",\n            key: \"136qqn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 2v6h6\",\n            key: \"1kof46\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 5.5V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H6a2 2 0 0 1-2-1.5\",\n            key: \"xwe04\"\n        }\n    ]\n]);\nconst FileDiff = createLucideIcon(\"FileDiff\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13V7\",\n            key: \"h0r20n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 10h6\",\n            key: \"9gxzsh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 17h6\",\n            key: \"r8uit2\"\n        }\n    ]\n]);\nconst FileDigit = createLucideIcon(\"FileDigit\", [\n    [\n        \"rect\",\n        {\n            width: \"4\",\n            height: \"6\",\n            x: \"2\",\n            y: \"12\",\n            rx: \"2\",\n            key: \"jm304g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 2v6h6\",\n            key: \"1kof46\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"702lig\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 12h2v6\",\n            key: \"12zw74\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 18h4\",\n            key: \"1ulq68\"\n        }\n    ]\n]);\nconst FileDown = createLucideIcon(\"FileDown\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18v-6\",\n            key: \"17g6i2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 15 3 3 3-3\",\n            key: \"1npd3o\"\n        }\n    ]\n]);\nconst FileEdit = createLucideIcon(\"FileEdit\", [\n    [\n        \"path\",\n        {\n            d: \"M4 13.5V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2h-5.5\",\n            key: \"1bg6eb\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.42 12.61a2.1 2.1 0 1 1 2.97 2.97L7.95 21 4 22l.99-3.95 5.43-5.44Z\",\n            key: \"1rgxu8\"\n        }\n    ]\n]);\nconst FileHeart = createLucideIcon(\"FileHeart\", [\n    [\n        \"path\",\n        {\n            d: \"M4 6V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4\",\n            key: \"dba9qu\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.29 10.7a2.43 2.43 0 0 0-2.66-.52c-.29.12-.56.3-.78.53l-.35.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L6.5 18l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z\",\n            key: \"1c1fso\"\n        }\n    ]\n]);\nconst FileImage = createLucideIcon(\"FileImage\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"10\",\n            cy: \"13\",\n            r: \"2\",\n            key: \"6v46hv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20 17-1.09-1.09a2 2 0 0 0-2.82 0L10 22\",\n            key: \"17vly1\"\n        }\n    ]\n]);\nconst FileInput = createLucideIcon(\"FileInput\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"702lig\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 15h10\",\n            key: \"jfw4w8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 18 3-3-3-3\",\n            key: \"112psh\"\n        }\n    ]\n]);\nconst FileJson2 = createLucideIcon(\"FileJson2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"702lig\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1\",\n            key: \"fq0c9t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1\",\n            key: \"4gibmv\"\n        }\n    ]\n]);\nconst FileJson = createLucideIcon(\"FileJson\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1\",\n            key: \"1oajmo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1\",\n            key: \"mpwhp6\"\n        }\n    ]\n]);\nconst FileKey2 = createLucideIcon(\"FileKey2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 10V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4\",\n            key: \"1nw5t3\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"4\",\n            cy: \"16\",\n            r: \"2\",\n            key: \"1ehqvc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 10-4.5 4.5\",\n            key: \"7fwrp6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 11 1 1\",\n            key: \"wa6s5q\"\n        }\n    ]\n]);\nconst FileKey = createLucideIcon(\"FileKey\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"10\",\n            cy: \"16\",\n            r: \"2\",\n            key: \"4ckbqe\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 10-4.5 4.5\",\n            key: \"7p3ebg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 11 1 1\",\n            key: \"1bsyx3\"\n        }\n    ]\n]);\nconst FileLineChart = createLucideIcon(\"FileLineChart\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 13-3.5 3.5-2-2L8 17\",\n            key: \"zz7yod\"\n        }\n    ]\n]);\nconst FileLock2 = createLucideIcon(\"FileLock2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 5V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4\",\n            key: \"gwd2r9\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"5\",\n            x: \"2\",\n            y: \"13\",\n            rx: \"1\",\n            key: \"10y5wo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 13v-2a2 2 0 1 0-4 0v2\",\n            key: \"1pdxzg\"\n        }\n    ]\n]);\nconst FileLock = createLucideIcon(\"FileLock\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"6\",\n            x: \"8\",\n            y: \"12\",\n            rx: \"1\",\n            key: \"3yr8at\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 12v-2a3 3 0 1 0-6 0v2\",\n            key: \"1nqnhw\"\n        }\n    ]\n]);\nconst FileMinus2 = createLucideIcon(\"FileMinus2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"702lig\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 15h6\",\n            key: \"4e2qda\"\n        }\n    ]\n]);\nconst FileMinus = createLucideIcon(\"FileMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"15\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"110plj\"\n        }\n    ]\n]);\nconst FileOutput = createLucideIcon(\"FileOutput\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"702lig\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 15h10\",\n            key: \"jfw4w8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 12-3 3 3 3\",\n            key: \"oke12k\"\n        }\n    ]\n]);\nconst FilePieChart = createLucideIcon(\"FilePieChart\", [\n    [\n        \"path\",\n        {\n            d: \"M16 22h2a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v3\",\n            key: \"zhyrez\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.04 11.71a5.84 5.84 0 1 0 8.2 8.29\",\n            key: \"f1t5jc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.83 16A5.83 5.83 0 0 0 8 10.17V16h5.83Z\",\n            key: \"7q54ec\"\n        }\n    ]\n]);\nconst FilePlus2 = createLucideIcon(\"FilePlus2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"702lig\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 15h6\",\n            key: \"4e2qda\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12v6\",\n            key: \"1u72j0\"\n        }\n    ]\n]);\nconst FilePlus = createLucideIcon(\"FilePlus\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"18\",\n            y2: \"12\",\n            key: \"1tsf04\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"15\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"110plj\"\n        }\n    ]\n]);\nconst FileQuestion = createLucideIcon(\"FileQuestion\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 10.3c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2\",\n            key: \"1umxtm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17h.01\",\n            key: \"p32p05\"\n        }\n    ]\n]);\nconst FileScan = createLucideIcon(\"FileScan\", [\n    [\n        \"path\",\n        {\n            d: \"M20 10V7.5L14.5 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h4.5\",\n            key: \"uvikde\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 22a2 2 0 0 1-2-2\",\n            key: \"1wqh5n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 22a2 2 0 0 0 2-2\",\n            key: \"1l9q4k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 14a2 2 0 0 1 2 2\",\n            key: \"1ny6zw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 14a2 2 0 0 0-2 2\",\n            key: \"ceaadl\"\n        }\n    ]\n]);\nconst FileSearch2 = createLucideIcon(\"FileSearch2\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"11.5\",\n            cy: \"14.5\",\n            r: \"2.5\",\n            key: \"1bq0ko\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.25 16.25 15 18\",\n            key: \"9eh8bj\"\n        }\n    ]\n]);\nconst FileSearch = createLucideIcon(\"FileSearch\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v3\",\n            key: \"am10z3\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 17a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\",\n            key: \"ychnub\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 18-1.5-1.5\",\n            key: \"1j6qii\"\n        }\n    ]\n]);\nconst FileSignature = createLucideIcon(\"FileSignature\", [\n    [\n        \"path\",\n        {\n            d: \"M20 19.5v.5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h8.5L18 5.5\",\n            key: \"kd5d3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 18h1\",\n            key: \"13wk12\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.42 9.61a2.1 2.1 0 1 1 2.97 2.97L16.95 17 13 18l.99-3.95 4.43-4.44Z\",\n            key: \"johvi5\"\n        }\n    ]\n]);\nconst FileSpreadsheet = createLucideIcon(\"FileSpreadsheet\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 13h2\",\n            key: \"yr2amv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 17h2\",\n            key: \"2yhykz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 13h2\",\n            key: \"un5t4a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 17h2\",\n            key: \"10kma7\"\n        }\n    ]\n]);\nconst FileStack = createLucideIcon(\"FileStack\", [\n    [\n        \"path\",\n        {\n            d: \"M16 2v5h5\",\n            key: \"kt2in0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 6v6.5c0 .8-.7 1.5-1.5 1.5h-7c-.8 0-1.5-.7-1.5-1.5v-9c0-.8.7-1.5 1.5-1.5H17l4 4z\",\n            key: \"1km23n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 8v8.8c0 .3.2.6.4.8.2.2.5.4.8.4H15\",\n            key: \"16874u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12v8.8c0 .3.2.6.4.8.2.2.5.4.8.4H11\",\n            key: \"k2ox98\"\n        }\n    ]\n]);\nconst FileSymlink = createLucideIcon(\"FileSymlink\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v7\",\n            key: \"138uzh\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 18 3-3-3-3\",\n            key: \"18f6ys\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 18v-1a2 2 0 0 1 2-2h6\",\n            key: \"5uz2rn\"\n        }\n    ]\n]);\nconst FileTerminal = createLucideIcon(\"FileTerminal\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 16 2-2-2-2\",\n            key: \"10vzyd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18h4\",\n            key: \"1wd2n7\"\n        }\n    ]\n]);\nconst FileText = createLucideIcon(\"FileText\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"8\",\n            y1: \"13\",\n            y2: \"13\",\n            key: \"14keom\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"8\",\n            y1: \"17\",\n            y2: \"17\",\n            key: \"17nazh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"8\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1a5vjj\"\n        }\n    ]\n]);\nconst FileType2 = createLucideIcon(\"FileType2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"702lig\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 13v-1h6v1\",\n            key: \"1dh9dg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 18h2\",\n            key: \"1xrofg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 12v6\",\n            key: \"150t9c\"\n        }\n    ]\n]);\nconst FileType = createLucideIcon(\"FileType\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 13v-1h6v1\",\n            key: \"1bb014\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 18h2\",\n            key: \"12mj7e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v6\",\n            key: \"3ahymv\"\n        }\n    ]\n]);\nconst FileUp = createLucideIcon(\"FileUp\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v6\",\n            key: \"3ahymv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 15-3-3-3 3\",\n            key: \"15xj92\"\n        }\n    ]\n]);\nconst FileVideo2 = createLucideIcon(\"FileVideo2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 8V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2H4\",\n            key: \"1nti49\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 15.5 4 2.5v-6l-4 2.5\",\n            key: \"t7cp39\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"6\",\n            x: \"2\",\n            y: \"12\",\n            rx: \"1\",\n            key: \"1a6c1e\"\n        }\n    ]\n]);\nconst FileVideo = createLucideIcon(\"FileVideo\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 11 5 3-5 3v-6Z\",\n            key: \"7ntvm4\"\n        }\n    ]\n]);\nconst FileVolume2 = createLucideIcon(\"FileVolume2\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.5 13.5c.32.4.5.94.5 1.5s-.18 1.1-.5 1.5\",\n            key: \"joawwx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 12c.64.8 1 1.87 1 3s-.36 2.2-1 3\",\n            key: \"1f2wyw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 15h.01\",\n            key: \"a7atzg\"\n        }\n    ]\n]);\nconst FileVolume = createLucideIcon(\"FileVolume\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v3\",\n            key: \"am10z3\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 10-3 2H2v4h2l3 2v-8Z\",\n            key: \"tazg57\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 11c.64.8 1 1.87 1 3s-.36 2.2-1 3\",\n            key: \"1yej3m\"\n        }\n    ]\n]);\nconst FileWarning = createLucideIcon(\"FileWarning\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 9v4\",\n            key: \"juzpu7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17h.01\",\n            key: \"p32p05\"\n        }\n    ]\n]);\nconst FileX2 = createLucideIcon(\"FileX2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h14a2 2 0 0 0 2-2V7.5L14.5 2H6a2 2 0 0 0-2 2v4\",\n            key: \"702lig\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 2v6h6\",\n            key: \"1kof46\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 12.5 5 5\",\n            key: \"1qls4r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 12.5-5 5\",\n            key: \"b853mi\"\n        }\n    ]\n]);\nconst FileX = createLucideIcon(\"FileX\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9.5\",\n            x2: \"14.5\",\n            y1: \"12.5\",\n            y2: \"17.5\",\n            key: \"izs6du\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14.5\",\n            x2: \"9.5\",\n            y1: \"12.5\",\n            y2: \"17.5\",\n            key: \"1lehlj\"\n        }\n    ]\n]);\nconst File = createLucideIcon(\"File\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\",\n            key: \"1nnpy2\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14 2 14 8 20 8\",\n            key: \"1ew0cm\"\n        }\n    ]\n]);\nconst Files = createLucideIcon(\"Files\", [\n    [\n        \"path\",\n        {\n            d: \"M15.5 2H8.6c-.4 0-.8.2-1.1.5-.3.3-.5.7-.5 1.1v12.8c0 .4.2.8.5 1.1.3.3.7.5 1.1.5h9.8c.4 0 .8-.2 1.1-.5.3-.3.5-.7.5-1.1V6.5L15.5 2z\",\n            key: \"cennsq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 7.6v12.8c0 .4.2.8.5 1.1.3.3.7.5 1.1.5h9.8\",\n            key: \"ms809a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 2v5h5\",\n            key: \"qq6kwv\"\n        }\n    ]\n]);\nconst Film = createLucideIcon(\"Film\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 3v18\",\n            key: \"bbkbws\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 7.5h4\",\n            key: \"zfgn84\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12h18\",\n            key: \"1i2n21\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 16.5h4\",\n            key: \"1230mu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 3v18\",\n            key: \"in4fa5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 7.5h4\",\n            key: \"myr1c1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 16.5h4\",\n            key: \"go4c1d\"\n        }\n    ]\n]);\nconst FilterX = createLucideIcon(\"FilterX\", [\n    [\n        \"path\",\n        {\n            d: \"M13.013 3H2l8 9.46V19l4 2v-8.54l.9-1.055\",\n            key: \"1fi1da\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 3-5 5\",\n            key: \"12jva0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 3 5 5\",\n            key: \"k36vhe\"\n        }\n    ]\n]);\nconst Filter = createLucideIcon(\"Filter\", [\n    [\n        \"polygon\",\n        {\n            points: \"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\",\n            key: \"1yg77f\"\n        }\n    ]\n]);\nconst Fingerprint = createLucideIcon(\"Fingerprint\", [\n    [\n        \"path\",\n        {\n            d: \"M2 12C2 6.5 6.5 2 12 2a10 10 0 0 1 8 4\",\n            key: \"1jc9o5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 19.5C5.5 18 6 15 6 12c0-.7.12-1.37.34-2\",\n            key: \"1mxgy1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.29 21.02c.12-.6.43-2.3.5-3.02\",\n            key: \"ptglia\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4\",\n            key: \"1nerag\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.65 22c.21-.66.45-1.32.57-2\",\n            key: \"13wd9y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 13.12c0 2.38 0 6.38-1 8.88\",\n            key: \"o46ks0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 16h.01\",\n            key: \"1gqxmh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21.8 16c.2-2 .131-5.354 0-6\",\n            key: \"drycrb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 6.8a6 6 0 0 1 9 5.2c0 .47 0 1.17-.02 2\",\n            key: \"1fgabc\"\n        }\n    ]\n]);\nconst FishOff = createLucideIcon(\"FishOff\", [\n    [\n        \"path\",\n        {\n            d: \"M18 12.47v.03m0-.5v.47m-.475 5.056A6.744 6.744 0 0 1 15 18c-3.56 0-7.56-2.53-8.5-6 .348-1.28 1.114-2.433 2.121-3.38m3.444-2.088A8.802 8.802 0 0 1 15 6c3.56 0 6.06 2.54 7 6-.309 1.14-.786 2.177-1.413 3.058\",\n            key: \"1j1hse\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33m7.48-4.372A9.77 9.77 0 0 1 16 6.07m0 11.86a9.77 9.77 0 0 1-1.728-3.618\",\n            key: \"1q46z8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98M8.53 3h5.27a2 2 0 0 1 1.98 1.67l.23 1.4M2 2l20 20\",\n            key: \"1407gh\"\n        }\n    ]\n]);\nconst FishSymbol = createLucideIcon(\"FishSymbol\", [\n    [\n        \"path\",\n        {\n            d: \"M2 16s9-15 20-4C11 23 2 8 2 8\",\n            key: \"h4oh4o\"\n        }\n    ]\n]);\nconst Fish = createLucideIcon(\"Fish\", [\n    [\n        \"path\",\n        {\n            d: \"M6.5 12c.94-3.46 4.94-6 8.5-6 3.56 0 6.06 2.54 7 6-.94 3.47-3.44 6-7 6s-7.56-2.53-8.5-6Z\",\n            key: \"15baut\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 12v.5\",\n            key: \"18hhni\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 17.93a9.77 9.77 0 0 1 0-11.86\",\n            key: \"16dt7o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33\",\n            key: \"l9di03\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.46 7.26C10.2 5.88 9.17 4.24 8 3h5.8a2 2 0 0 1 1.98 1.67l.23 1.4\",\n            key: \"1kjonw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98\",\n            key: \"1zlm23\"\n        }\n    ]\n]);\nconst FlagOff = createLucideIcon(\"FlagOff\", [\n    [\n        \"path\",\n        {\n            d: \"M8 2c3 0 5 2 8 2s4-1 4-1v11\",\n            key: \"9rwyz9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 22V4\",\n            key: \"1plyxx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 15s1-1 4-1 5 2 8 2\",\n            key: \"1myooe\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst FlagTriangleLeft = createLucideIcon(\"FlagTriangleLeft\", [\n    [\n        \"path\",\n        {\n            d: \"M17 22V2L7 7l10 5\",\n            key: \"1rmf0r\"\n        }\n    ]\n]);\nconst FlagTriangleRight = createLucideIcon(\"FlagTriangleRight\", [\n    [\n        \"path\",\n        {\n            d: \"M7 22V2l10 5-10 5\",\n            key: \"17n18y\"\n        }\n    ]\n]);\nconst Flag = createLucideIcon(\"Flag\", [\n    [\n        \"path\",\n        {\n            d: \"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\",\n            key: \"i9b6wo\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"4\",\n            y1: \"22\",\n            y2: \"15\",\n            key: \"1cm3nv\"\n        }\n    ]\n]);\nconst Flame = createLucideIcon(\"Flame\", [\n    [\n        \"path\",\n        {\n            d: \"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\",\n            key: \"96xj49\"\n        }\n    ]\n]);\nconst FlashlightOff = createLucideIcon(\"FlashlightOff\", [\n    [\n        \"path\",\n        {\n            d: \"M16 16v4a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4\",\n            key: \"1r120k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 2h11v4c0 2-2 2-2 4v1\",\n            key: \"dz1920\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"11\",\n            x2: \"18\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"bi1vpe\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Flashlight = createLucideIcon(\"Flashlight\", [\n    [\n        \"path\",\n        {\n            d: \"M18 6c0 2-2 2-2 4v10a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4V2h12z\",\n            key: \"1orkel\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"18\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"1z11jq\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1f4yc1\"\n        }\n    ]\n]);\nconst FlaskConicalOff = createLucideIcon(\"FlaskConicalOff\", [\n    [\n        \"path\",\n        {\n            d: \"M10 10 4.72 20.55a1 1 0 0 0 .9 1.45h12.76a1 1 0 0 0 .9-1.45l-1.272-2.542\",\n            key: \"59ek9y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 2v2.343\",\n            key: \"15t272\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 2v6.343\",\n            key: \"sxr80q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.5 2h7\",\n            key: \"csnxdl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 16h9\",\n            key: \"t5njau\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst FlaskConical = createLucideIcon(\"FlaskConical\", [\n    [\n        \"path\",\n        {\n            d: \"M10 2v7.527a2 2 0 0 1-.211.896L4.72 20.55a1 1 0 0 0 .9 1.45h12.76a1 1 0 0 0 .9-1.45l-5.069-10.127A2 2 0 0 1 14 9.527V2\",\n            key: \"pzvekw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.5 2h7\",\n            key: \"csnxdl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 16h10\",\n            key: \"wp8him\"\n        }\n    ]\n]);\nconst FlaskRound = createLucideIcon(\"FlaskRound\", [\n    [\n        \"path\",\n        {\n            d: \"M10 2v7.31\",\n            key: \"5d1hyh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 9.3V1.99\",\n            key: \"14k4l0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.5 2h7\",\n            key: \"csnxdl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 9.3a6.5 6.5 0 1 1-4 0\",\n            key: \"1r8fvy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.52 16h12.96\",\n            key: \"46hh1i\"\n        }\n    ]\n]);\nconst FlipHorizontal2 = createLucideIcon(\"FlipHorizontal2\", [\n    [\n        \"path\",\n        {\n            d: \"m3 7 5 5-5 5V7\",\n            key: \"couhi7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 7-5 5 5 5V7\",\n            key: \"6ouia7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v2\",\n            key: \"1lh1kg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 14v2\",\n            key: \"8jcxud\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v2\",\n            key: \"1woqiv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v2\",\n            key: \"tus03m\"\n        }\n    ]\n]);\nconst FlipHorizontal = createLucideIcon(\"FlipHorizontal\", [\n    [\n        \"path\",\n        {\n            d: \"M8 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h3\",\n            key: \"1i73f7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 3h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-3\",\n            key: \"saxlbk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v2\",\n            key: \"1lh1kg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 14v2\",\n            key: \"8jcxud\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v2\",\n            key: \"1woqiv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v2\",\n            key: \"tus03m\"\n        }\n    ]\n]);\nconst FlipVertical2 = createLucideIcon(\"FlipVertical2\", [\n    [\n        \"path\",\n        {\n            d: \"m17 3-5 5-5-5h10\",\n            key: \"1ftt6x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 21-5-5-5 5h10\",\n            key: \"1m0wmu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 12H2\",\n            key: \"rhcxmi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 12H8\",\n            key: \"s88cx1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12h-2\",\n            key: \"10asgb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12h-2\",\n            key: \"14jgyd\"\n        }\n    ]\n]);\nconst FlipVertical = createLucideIcon(\"FlipVertical\", [\n    [\n        \"path\",\n        {\n            d: \"M21 8V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3\",\n            key: \"14bfxa\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 16v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3\",\n            key: \"14rx03\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 12H2\",\n            key: \"rhcxmi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 12H8\",\n            key: \"s88cx1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12h-2\",\n            key: \"10asgb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12h-2\",\n            key: \"14jgyd\"\n        }\n    ]\n]);\nconst Flower2 = createLucideIcon(\"Flower2\", [\n    [\n        \"path\",\n        {\n            d: \"M12 5a3 3 0 1 1 3 3m-3-3a3 3 0 1 0-3 3m3-3v1M9 8a3 3 0 1 0 3 3M9 8h1m5 0a3 3 0 1 1-3 3m3-3h-1m-2 3v-1\",\n            key: \"3pnvol\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"8\",\n            r: \"2\",\n            key: \"1822b1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10v12\",\n            key: \"6ubwww\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22c4.2 0 7-1.667 7-5-4.2 0-7 1.667-7 5Z\",\n            key: \"9hd38g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22c-4.2 0-7-1.667-7-5 4.2 0 7 1.667 7 5Z\",\n            key: \"ufn41s\"\n        }\n    ]\n]);\nconst Flower = createLucideIcon(\"Flower\", [\n    [\n        \"path\",\n        {\n            d: \"M12 7.5a4.5 4.5 0 1 1 4.5 4.5M12 7.5A4.5 4.5 0 1 0 7.5 12M12 7.5V9m-4.5 3a4.5 4.5 0 1 0 4.5 4.5M7.5 12H9m7.5 0a4.5 4.5 0 1 1-4.5 4.5m4.5-4.5H15m-3 4.5V15\",\n            key: \"51z86h\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 16 1.5-1.5\",\n            key: \"ce6zph\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.5 9.5 16 8\",\n            key: \"1kzrzb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 8 1.5 1.5\",\n            key: \"1yv88w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.5 14.5 16 16\",\n            key: \"12xhjh\"\n        }\n    ]\n]);\nconst Focus = createLucideIcon(\"Focus\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 7V5a2 2 0 0 1 2-2h2\",\n            key: \"aa7l1z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 3h2a2 2 0 0 1 2 2v2\",\n            key: \"4qcy5o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 17v2a2 2 0 0 1-2 2h-2\",\n            key: \"6vwrx8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 21H5a2 2 0 0 1-2-2v-2\",\n            key: \"ioqczr\"\n        }\n    ]\n]);\nconst FoldHorizontal = createLucideIcon(\"FoldHorizontal\", [\n    [\n        \"path\",\n        {\n            d: \"M2 12h6\",\n            key: \"1wqiqv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12h-6\",\n            key: \"1eg9hc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v2\",\n            key: \"tus03m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v2\",\n            key: \"1woqiv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 14v2\",\n            key: \"8jcxud\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v2\",\n            key: \"1lh1kg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 9-3 3 3 3\",\n            key: \"12ol22\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 15 3-3-3-3\",\n            key: \"1kdhjc\"\n        }\n    ]\n]);\nconst FoldVertical = createLucideIcon(\"FoldVertical\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22v-6\",\n            key: \"6o8u61\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8V2\",\n            key: \"1wkif3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 12H2\",\n            key: \"rhcxmi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 12H8\",\n            key: \"s88cx1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12h-2\",\n            key: \"10asgb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12h-2\",\n            key: \"14jgyd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 19-3-3-3 3\",\n            key: \"e37ymu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 5-3 3-3-3\",\n            key: \"19d6lf\"\n        }\n    ]\n]);\nconst FolderArchive = createLucideIcon(\"FolderArchive\", [\n    [\n        \"path\",\n        {\n            d: \"M22 20V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2h6\",\n            key: \"1l0vpk\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16\",\n            cy: \"19\",\n            r: \"2\",\n            key: \"1uwppb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 11v-1\",\n            key: \"eoyjtm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 17v-2\",\n            key: \"1xp69b\"\n        }\n    ]\n]);\nconst FolderCheck = createLucideIcon(\"FolderCheck\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 13 2 2 4-4\",\n            key: \"6343dt\"\n        }\n    ]\n]);\nconst FolderClock = createLucideIcon(\"FolderClock\", [\n    [\n        \"path\",\n        {\n            d: \"M7 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2\",\n            key: \"1p0xo9\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16\",\n            cy: \"16\",\n            r: \"6\",\n            key: \"qoo3c4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 14v2l1 1\",\n            key: \"xth2jh\"\n        }\n    ]\n]);\nconst FolderClosed = createLucideIcon(\"FolderClosed\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 10h20\",\n            key: \"1ir3d8\"\n        }\n    ]\n]);\nconst FolderCog = createLucideIcon(\"FolderCog\", [\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"1xkwt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.5 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v3.5\",\n            key: \"j83l98\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21.7 19.4-.9-.3\",\n            key: \"1qgwi9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15.2 16.9-.9-.3\",\n            key: \"1t7mvx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.6 21.7.3-.9\",\n            key: \"1j67ps\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.1 15.2.3-.9\",\n            key: \"18r7jp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.6 21.7-.4-1\",\n            key: \"z2vh2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.8 15.3-.4-1\",\n            key: \"1ei7r6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.3 19.6 1-.4\",\n            key: \"11sv9r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20.7 16.8 1-.4\",\n            key: \"19m87a\"\n        }\n    ]\n]);\nconst FolderDot = createLucideIcon(\"FolderDot\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"13\",\n            r: \"1\",\n            key: \"49l61u\"\n        }\n    ]\n]);\nconst FolderDown = createLucideIcon(\"FolderDown\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10v6\",\n            key: \"1bos4e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 13-3 3-3-3\",\n            key: \"6j2sf0\"\n        }\n    ]\n]);\nconst FolderEdit = createLucideIcon(\"FolderEdit\", [\n    [\n        \"path\",\n        {\n            d: \"M8.42 10.61a2.1 2.1 0 1 1 2.97 2.97L5.95 19 2 20l.99-3.95 5.43-5.44Z\",\n            key: \"o1ah0z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 11.5V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5\",\n            key: \"bim890\"\n        }\n    ]\n]);\nconst FolderGit2 = createLucideIcon(\"FolderGit2\", [\n    [\n        \"path\",\n        {\n            d: \"M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v5\",\n            key: \"1w6njk\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"13\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"1j92g6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 19c-2.8 0-5-2.2-5-5v8\",\n            key: \"pkpw2h\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"20\",\n            cy: \"19\",\n            r: \"2\",\n            key: \"1obnsp\"\n        }\n    ]\n]);\nconst FolderGit = createLucideIcon(\"FolderGit\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"13\",\n            r: \"2\",\n            key: \"1c1ljs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 13h3\",\n            key: \"1dgedf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 13h3\",\n            key: \"1pygq7\"\n        }\n    ]\n]);\nconst FolderHeart = createLucideIcon(\"FolderHeart\", [\n    [\n        \"path\",\n        {\n            d: \"M11 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v1.5\",\n            key: \"zoglpu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21.29 13.7a2.43 2.43 0 0 0-2.65-.52c-.3.12-.57.3-.8.53l-.34.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L17.5 21l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z\",\n            key: \"2tfff6\"\n        }\n    ]\n]);\nconst FolderInput = createLucideIcon(\"FolderInput\", [\n    [\n        \"path\",\n        {\n            d: \"M2 9V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-1\",\n            key: \"1gu97c\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 13h10\",\n            key: \"pgb2dq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 16 3-3-3-3\",\n            key: \"6m91ic\"\n        }\n    ]\n]);\nconst FolderKanban = createLucideIcon(\"FolderKanban\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 10v4\",\n            key: \"tgpxqk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10v2\",\n            key: \"hh53o1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 10v6\",\n            key: \"1d6xys\"\n        }\n    ]\n]);\nconst FolderKey = createLucideIcon(\"FolderKey\", [\n    [\n        \"path\",\n        {\n            d: \"M10 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v2\",\n            key: \"203odn\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16\",\n            cy: \"20\",\n            r: \"2\",\n            key: \"1vifvg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 14-4.5 4.5\",\n            key: \"1ef6z8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 15 1 1\",\n            key: \"1ejcpy\"\n        }\n    ]\n]);\nconst FolderLock = createLucideIcon(\"FolderLock\", [\n    [\n        \"path\",\n        {\n            d: \"M10 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v2.5\",\n            key: \"1ivsx8\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"5\",\n            x: \"14\",\n            y: \"17\",\n            rx: \"1\",\n            key: \"19aais\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 17v-2a2 2 0 1 0-4 0v2\",\n            key: \"pwaxnr\"\n        }\n    ]\n]);\nconst FolderMinus = createLucideIcon(\"FolderMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"15\",\n            y1: \"13\",\n            y2: \"13\",\n            key: \"10hoct\"\n        }\n    ]\n]);\nconst FolderOpenDot = createLucideIcon(\"FolderOpenDot\", [\n    [\n        \"path\",\n        {\n            d: \"m6 14 1.45-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.55 6a2 2 0 0 1-1.94 1.5H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H18a2 2 0 0 1 2 2v2\",\n            key: \"1nmvlm\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"14\",\n            cy: \"15\",\n            r: \"1\",\n            key: \"1gm4qj\"\n        }\n    ]\n]);\nconst FolderOpen = createLucideIcon(\"FolderOpen\", [\n    [\n        \"path\",\n        {\n            d: \"m6 14 1.45-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.55 6a2 2 0 0 1-1.94 1.5H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H18a2 2 0 0 1 2 2v2\",\n            key: \"1nmvlm\"\n        }\n    ]\n]);\nconst FolderOutput = createLucideIcon(\"FolderOutput\", [\n    [\n        \"path\",\n        {\n            d: \"M2 7.5V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H2\",\n            key: \"jm8npq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 13h10\",\n            key: \"pgb2dq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 10-3 3 3 3\",\n            key: \"1r8ie0\"\n        }\n    ]\n]);\nconst FolderPlus = createLucideIcon(\"FolderPlus\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"10\",\n            y2: \"16\",\n            key: \"3c25pp\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"15\",\n            y1: \"13\",\n            y2: \"13\",\n            key: \"10hoct\"\n        }\n    ]\n]);\nconst FolderRoot = createLucideIcon(\"FolderRoot\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"13\",\n            r: \"2\",\n            key: \"1c1ljs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 15v5\",\n            key: \"11xva1\"\n        }\n    ]\n]);\nconst FolderSearch2 = createLucideIcon(\"FolderSearch2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"11.5\",\n            cy: \"12.5\",\n            r: \"2.5\",\n            key: \"1ea5ju\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.27 14.27 15 16\",\n            key: \"5hsvtf\"\n        }\n    ]\n]);\nconst FolderSearch = createLucideIcon(\"FolderSearch\", [\n    [\n        \"path\",\n        {\n            d: \"M11 20H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v4\",\n            key: \"1moo03\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17\",\n            cy: \"17\",\n            r: \"3\",\n            key: \"18b49y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 21-1.5-1.5\",\n            key: \"3sg1j\"\n        }\n    ]\n]);\nconst FolderSymlink = createLucideIcon(\"FolderSymlink\", [\n    [\n        \"path\",\n        {\n            d: \"M2 9V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H2\",\n            key: \"1or2t8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 16 3-3-3-3\",\n            key: \"rlqrt1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 16v-1a2 2 0 0 1 2-2h6\",\n            key: \"pgw8ln\"\n        }\n    ]\n]);\nconst FolderSync = createLucideIcon(\"FolderSync\", [\n    [\n        \"path\",\n        {\n            d: \"M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v1\",\n            key: \"1rkwto\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10v4h4\",\n            key: \"1czhmt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 14 1.5-1.5c.9-.9 2.2-1.5 3.5-1.5s2.6.6 3.5 1.5c.4.4.8 1 1 1.5\",\n            key: \"25wejs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 22v-4h-4\",\n            key: \"1ewp4q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 18-1.5 1.5c-.9.9-2.1 1.5-3.5 1.5s-2.6-.6-3.5-1.5c-.4-.4-.8-1-1-1.5\",\n            key: \"vlp1j8\"\n        }\n    ]\n]);\nconst FolderTree = createLucideIcon(\"FolderTree\", [\n    [\n        \"path\",\n        {\n            d: \"M13 10h7a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1h-2.5a1 1 0 0 1-.8-.4l-.9-1.2A1 1 0 0 0 15 3h-2a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z\",\n            key: \"10jzg2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 21h7a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-2.88a1 1 0 0 1-.9-.55l-.44-.9a1 1 0 0 0-.9-.55H13a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z\",\n            key: \"1b9nqm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 3v2c0 1.1.9 2 2 2h3\",\n            key: \"1wqwis\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 3v13c0 1.1.9 2 2 2h3\",\n            key: \"1bqeom\"\n        }\n    ]\n]);\nconst FolderUp = createLucideIcon(\"FolderUp\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10v6\",\n            key: \"1bos4e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 13 3-3 3 3\",\n            key: \"1pxg3c\"\n        }\n    ]\n]);\nconst FolderX = createLucideIcon(\"FolderX\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.5 10.5 5 5\",\n            key: \"ra9qjz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.5 10.5-5 5\",\n            key: \"l2rkpq\"\n        }\n    ]\n]);\nconst Folder = createLucideIcon(\"Folder\", [\n    [\n        \"path\",\n        {\n            d: \"M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z\",\n            key: \"1fr9dc\"\n        }\n    ]\n]);\nconst Folders = createLucideIcon(\"Folders\", [\n    [\n        \"path\",\n        {\n            d: \"M8 17h12a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3.93a2 2 0 0 1-1.66-.9l-.82-1.2a2 2 0 0 0-1.66-.9H8a2 2 0 0 0-2 2v9c0 1.1.9 2 2 2Z\",\n            key: \"1aska4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 8v11c0 1.1.9 2 2 2h14\",\n            key: \"n13cji\"\n        }\n    ]\n]);\nconst Footprints = createLucideIcon(\"Footprints\", [\n    [\n        \"path\",\n        {\n            d: \"M4 16v-2.38C4 11.5 2.97 10.5 3 8c.03-2.72 1.49-6 4.5-6C9.37 2 10 3.8 10 5.5c0 3.11-2 5.66-2 8.68V16a2 2 0 1 1-4 0Z\",\n            key: \"1dudjm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 20v-2.38c0-2.12 1.03-3.12 1-5.62-.03-2.72-1.49-6-4.5-6C14.63 6 14 7.8 14 9.5c0 3.11 2 5.66 2 8.68V20a2 2 0 1 0 4 0Z\",\n            key: \"l2t8xc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 17h4\",\n            key: \"1dejxt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 13h4\",\n            key: \"1bwh8b\"\n        }\n    ]\n]);\nconst Forklift = createLucideIcon(\"Forklift\", [\n    [\n        \"path\",\n        {\n            d: \"M12 12H5a2 2 0 0 0-2 2v5\",\n            key: \"7zsz91\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"13\",\n            cy: \"19\",\n            r: \"2\",\n            key: \"wjnkru\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"19\",\n            r: \"2\",\n            key: \"v8kfzx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 19h3m5-17v17h6M6 12V7c0-1.1.9-2 2-2h3l5 5\",\n            key: \"13bk1p\"\n        }\n    ]\n]);\nconst FormInput = createLucideIcon(\"FormInput\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"12\",\n            x: \"2\",\n            y: \"6\",\n            rx: \"2\",\n            key: \"9lu3g6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12h.01\",\n            key: \"1mp3jc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 12h.01\",\n            key: \"1m0b6t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 12h.01\",\n            key: \"eqddd0\"\n        }\n    ]\n]);\nconst Forward = createLucideIcon(\"Forward\", [\n    [\n        \"polyline\",\n        {\n            points: \"15 17 20 12 15 7\",\n            key: \"1w3sku\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 18v-2a4 4 0 0 1 4-4h12\",\n            key: \"jmiej9\"\n        }\n    ]\n]);\nconst Frame = createLucideIcon(\"Frame\", [\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"2\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"15w7dq\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"2\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"1ip48p\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a2lnyx\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"18\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"8vb6jd\"\n        }\n    ]\n]);\nconst Framer = createLucideIcon(\"Framer\", [\n    [\n        \"path\",\n        {\n            d: \"M5 16V9h14V2H5l14 14h-7m-7 0 7 7v-7m-7 0h7\",\n            key: \"1a2nng\"\n        }\n    ]\n]);\nconst Frown = createLucideIcon(\"Frown\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16s-1.5-2-4-2-4 2-4 2\",\n            key: \"epbg0q\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"9.01\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"yxxnd0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15.01\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1p4y9e\"\n        }\n    ]\n]);\nconst Fuel = createLucideIcon(\"Fuel\", [\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"15\",\n            y1: \"22\",\n            y2: \"22\",\n            key: \"xegly4\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"14\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"xcnuvu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 22V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v18\",\n            key: \"16j0yd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 13h2a2 2 0 0 1 2 2v2a2 2 0 0 0 2 2h0a2 2 0 0 0 2-2V9.83a2 2 0 0 0-.59-1.42L18 5\",\n            key: \"8ur5zv\"\n        }\n    ]\n]);\nconst FunctionSquare = createLucideIcon(\"FunctionSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 17c2 0 2.8-1 2.8-2.8V10c0-2 1-3.3 3.2-3\",\n            key: \"m1af9g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 11.2h5.7\",\n            key: \"3zgcl2\"\n        }\n    ]\n]);\nconst GalleryHorizontalEnd = createLucideIcon(\"GalleryHorizontalEnd\", [\n    [\n        \"path\",\n        {\n            d: \"M2 7v10\",\n            key: \"a2pl2d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 5v14\",\n            key: \"1kq3d7\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"12\",\n            height: \"18\",\n            x: \"10\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"13i7bc\"\n        }\n    ]\n]);\nconst GalleryHorizontal = createLucideIcon(\"GalleryHorizontal\", [\n    [\n        \"path\",\n        {\n            d: \"M2 3v18\",\n            key: \"pzttux\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"12\",\n            height: \"18\",\n            x: \"6\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"btr8bg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 3v18\",\n            key: \"6jf3v\"\n        }\n    ]\n]);\nconst GalleryThumbnails = createLucideIcon(\"GalleryThumbnails\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"14\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"74y24f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 21h1\",\n            key: \"16zlid\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 21h1\",\n            key: \"15o7lz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 21h1\",\n            key: \"v9vybs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 21h1\",\n            key: \"edywat\"\n        }\n    ]\n]);\nconst GalleryVerticalEnd = createLucideIcon(\"GalleryVerticalEnd\", [\n    [\n        \"path\",\n        {\n            d: \"M7 2h10\",\n            key: \"nczekb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 6h14\",\n            key: \"u2x4p\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"12\",\n            x: \"3\",\n            y: \"10\",\n            rx: \"2\",\n            key: \"l0tzu3\"\n        }\n    ]\n]);\nconst GalleryVertical = createLucideIcon(\"GalleryVertical\", [\n    [\n        \"path\",\n        {\n            d: \"M3 2h18\",\n            key: \"15qxfx\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"12\",\n            x: \"3\",\n            y: \"6\",\n            rx: \"2\",\n            key: \"1439r6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 22h18\",\n            key: \"8prr45\"\n        }\n    ]\n]);\nconst Gamepad2 = createLucideIcon(\"Gamepad2\", [\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"10\",\n            y1: \"11\",\n            y2: \"11\",\n            key: \"1gktln\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"9\",\n            y2: \"13\",\n            key: \"qnk9ow\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15.01\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"krot7o\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"18.01\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"1lcuu1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.32 5H6.68a4 4 0 0 0-3.978 3.59c-.006.052-.01.101-.017.152C2.604 9.416 2 14.456 2 16a3 3 0 0 0 3 3c1 0 1.5-.5 2-1l1.414-1.414A2 2 0 0 1 9.828 16h4.344a2 2 0 0 1 1.414.586L17 18c.5.5 1 1 2 1a3 3 0 0 0 3-3c0-1.545-.604-6.584-.685-7.258-.007-.05-.011-.1-.017-.151A4 4 0 0 0 17.32 5z\",\n            key: \"mfqc10\"\n        }\n    ]\n]);\nconst Gamepad = createLucideIcon(\"Gamepad\", [\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"10\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"161bw2\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"10\",\n            y2: \"14\",\n            key: \"1i6ji0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15.01\",\n            y1: \"13\",\n            y2: \"13\",\n            key: \"dqpgro\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"18.01\",\n            y1: \"11\",\n            y2: \"11\",\n            key: \"meh2c\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"12\",\n            x: \"2\",\n            y: \"6\",\n            rx: \"2\",\n            key: \"9lu3g6\"\n        }\n    ]\n]);\nconst GanttChartSquare = createLucideIcon(\"GanttChartSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 8h7\",\n            key: \"kbo1nt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h6\",\n            key: \"ikassy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 16h5\",\n            key: \"oq65wt\"\n        }\n    ]\n]);\nconst GanttChart = createLucideIcon(\"GanttChart\", [\n    [\n        \"path\",\n        {\n            d: \"M8 6h10\",\n            key: \"9lnwnk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12h9\",\n            key: \"1g9pqf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 18h7\",\n            key: \"c8dzvl\"\n        }\n    ]\n]);\nconst GaugeCircle = createLucideIcon(\"GaugeCircle\", [\n    [\n        \"path\",\n        {\n            d: \"M15.6 2.7a10 10 0 1 0 5.7 5.7\",\n            key: \"1e0p6d\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"1c9p78\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.4 10.6 19 5\",\n            key: \"1kr7tw\"\n        }\n    ]\n]);\nconst Gauge = createLucideIcon(\"Gauge\", [\n    [\n        \"path\",\n        {\n            d: \"m12 14 4-4\",\n            key: \"9kzdfg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.34 19a10 10 0 1 1 17.32 0\",\n            key: \"19p75a\"\n        }\n    ]\n]);\nconst Gavel = createLucideIcon(\"Gavel\", [\n    [\n        \"path\",\n        {\n            d: \"m14 13-7.5 7.5c-.83.83-2.17.83-3 0 0 0 0 0 0 0a2.12 2.12 0 0 1 0-3L11 10\",\n            key: \"c9cbz0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 16 6-6\",\n            key: \"vzrcl6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 8 6-6\",\n            key: \"18bi4p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 7 8 8\",\n            key: \"5jnvq1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 11-8-8\",\n            key: \"z4y7zo\"\n        }\n    ]\n]);\nconst Gem = createLucideIcon(\"Gem\", [\n    [\n        \"path\",\n        {\n            d: \"M6 3h12l4 6-10 13L2 9Z\",\n            key: \"1pcd5k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 3 8 9l4 13 4-13-3-6\",\n            key: \"1fcu3u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 9h20\",\n            key: \"16fsjt\"\n        }\n    ]\n]);\nconst Ghost = createLucideIcon(\"Ghost\", [\n    [\n        \"path\",\n        {\n            d: \"M9 10h.01\",\n            key: \"qbtxuw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 10h.01\",\n            key: \"1qmjsl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2a8 8 0 0 0-8 8v12l3-3 2.5 2.5L12 19l2.5 2.5L17 19l3 3V10a8 8 0 0 0-8-8z\",\n            key: \"uwwb07\"\n        }\n    ]\n]);\nconst Gift = createLucideIcon(\"Gift\", [\n    [\n        \"polyline\",\n        {\n            points: \"20 12 20 22 4 22 4 12\",\n            key: \"nda8fc\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"5\",\n            x: \"2\",\n            y: \"7\",\n            key: \"wkgdzj\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22\",\n            y2: \"7\",\n            key: \"1n8zgp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\",\n            key: \"zighg4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\",\n            key: \"1pa5tk\"\n        }\n    ]\n]);\nconst GitBranchPlus = createLucideIcon(\"GitBranchPlus\", [\n    [\n        \"path\",\n        {\n            d: \"M6 3v12\",\n            key: \"qpgusn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\",\n            key: \"1d02ji\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\",\n            key: \"chk6ph\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 6a9 9 0 0 0-9 9\",\n            key: \"or332x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 15v6\",\n            key: \"9wciyi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 18h-6\",\n            key: \"139f0c\"\n        }\n    ]\n]);\nconst GitBranch = createLucideIcon(\"GitBranch\", [\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"3\",\n            y2: \"15\",\n            key: \"17qcm7\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"1h7g24\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"fqmcym\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 9a9 9 0 0 1-9 9\",\n            key: \"n2h4wq\"\n        }\n    ]\n]);\nconst GitCommit = createLucideIcon(\"GitCommit\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"9\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1dyftd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"21\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"oup4p8\"\n        }\n    ]\n]);\nconst GitCompare = createLucideIcon(\"GitCompare\", [\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"1xkwt0\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"1lh9wr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 6h3a2 2 0 0 1 2 2v7\",\n            key: \"1yeb86\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 18H8a2 2 0 0 1-2-2V9\",\n            key: \"19pyzm\"\n        }\n    ]\n]);\nconst GitFork = createLucideIcon(\"GitFork\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"1mpf1b\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"1lh9wr\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"1h7g24\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 9v1a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V9\",\n            key: \"c89w8i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v3\",\n            key: \"158kv8\"\n        }\n    ]\n]);\nconst GitMerge = createLucideIcon(\"GitMerge\", [\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"1xkwt0\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"1lh9wr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 21V9a9 9 0 0 0 9 9\",\n            key: \"7kw0sc\"\n        }\n    ]\n]);\nconst GitPullRequestClosed = createLucideIcon(\"GitPullRequestClosed\", [\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"1xkwt0\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"1lh9wr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 11.5V15\",\n            key: \"65xf6f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 3-6 6\",\n            key: \"16nqsk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 9-6-6\",\n            key: \"9j17rh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"9\",\n            y2: \"21\",\n            key: \"rroup\"\n        }\n    ]\n]);\nconst GitPullRequestDraft = createLucideIcon(\"GitPullRequestDraft\", [\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"1xkwt0\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"1lh9wr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 6V5\",\n            key: \"1oao2s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 11v-1\",\n            key: \"11c8tz\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"9\",\n            y2: \"21\",\n            key: \"rroup\"\n        }\n    ]\n]);\nconst GitPullRequest = createLucideIcon(\"GitPullRequest\", [\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"1xkwt0\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"1lh9wr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 6h3a2 2 0 0 1 2 2v7\",\n            key: \"1yeb86\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"9\",\n            y2: \"21\",\n            key: \"rroup\"\n        }\n    ]\n]);\nconst Github = createLucideIcon(\"Github\", [\n    [\n        \"path\",\n        {\n            d: \"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4\",\n            key: \"tonef\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 18c-4.51 2-5-2-7-2\",\n            key: \"9comsn\"\n        }\n    ]\n]);\nconst Gitlab = createLucideIcon(\"Gitlab\", [\n    [\n        \"path\",\n        {\n            d: \"m22 13.29-3.33-10a.42.42 0 0 0-.14-.18.38.38 0 0 0-.22-.11.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18l-2.26 6.67H8.32L6.1 3.26a.42.42 0 0 0-.1-.18.38.38 0 0 0-.26-.08.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18L2 13.29a.74.74 0 0 0 .27.83L12 21l9.69-6.88a.71.71 0 0 0 .31-.83Z\",\n            key: \"148pdi\"\n        }\n    ]\n]);\nconst GlassWater = createLucideIcon(\"GlassWater\", [\n    [\n        \"path\",\n        {\n            d: \"M15.2 22H8.8a2 2 0 0 1-2-1.79L5 3h14l-1.81 17.21A2 2 0 0 1 15.2 22Z\",\n            key: \"48rfw3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0\",\n            key: \"mjntcy\"\n        }\n    ]\n]);\nconst Glasses = createLucideIcon(\"Glasses\", [\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"15\",\n            r: \"4\",\n            key: \"vux9w4\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"15\",\n            r: \"4\",\n            key: \"18o8ve\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 15a2 2 0 0 0-2-2 2 2 0 0 0-2 2\",\n            key: \"1ag4bs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2.5 13 5 7c.7-1.3 1.4-2 3-2\",\n            key: \"1hm1gs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21.5 13 19 7c-.7-1.3-1.5-2-3-2\",\n            key: \"1r31ai\"\n        }\n    ]\n]);\nconst Globe2 = createLucideIcon(\"Globe2\", [\n    [\n        \"path\",\n        {\n            d: \"M21.54 15H17a2 2 0 0 0-2 2v4.54\",\n            key: \"1djwo0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 3.34V5a3 3 0 0 0 3 3v0a2 2 0 0 1 2 2v0c0 1.1.9 2 2 2v0a2 2 0 0 0 2-2v0c0-1.1.9-2 2-2h3.17\",\n            key: \"1fi5u6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 21.95V18a2 2 0 0 0-2-2v0a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05\",\n            key: \"xsiumc\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ]\n]);\nconst Globe = createLucideIcon(\"Globe\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1dnqot\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\",\n            key: \"nb9nel\"\n        }\n    ]\n]);\nconst Goal = createLucideIcon(\"Goal\", [\n    [\n        \"path\",\n        {\n            d: \"M12 13V2l8 4-8 4\",\n            key: \"5wlwwj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.55 10.23A9 9 0 1 1 8 4.94\",\n            key: \"5988i3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 10a5 5 0 1 0 8.9 2.02\",\n            key: \"1hq7ot\"\n        }\n    ]\n]);\nconst Grab = createLucideIcon(\"Grab\", [\n    [\n        \"path\",\n        {\n            d: \"M18 11.5V9a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v1.4\",\n            key: \"n5nng\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 10V8a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v2\",\n            key: \"185i9d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 9.9V9a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v5\",\n            key: \"11pz95\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 14v0a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v0\",\n            key: \"16yk7l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 11v0a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-4a8 8 0 0 1-8-8 2 2 0 1 1 4 0\",\n            key: \"nzvb1c\"\n        }\n    ]\n]);\nconst GraduationCap = createLucideIcon(\"GraduationCap\", [\n    [\n        \"path\",\n        {\n            d: \"M22 10v6M2 10l10-5 10 5-10 5z\",\n            key: \"1ef52a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12v5c3 3 9 3 12 0v-5\",\n            key: \"1f75yj\"\n        }\n    ]\n]);\nconst Grape = createLucideIcon(\"Grape\", [\n    [\n        \"path\",\n        {\n            d: \"M22 5V2l-5.89 5.89\",\n            key: \"1eenpo\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16.6\",\n            cy: \"15.89\",\n            r: \"3\",\n            key: \"xjtalx\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8.11\",\n            cy: \"7.4\",\n            r: \"3\",\n            key: \"u2fv6i\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12.35\",\n            cy: \"11.65\",\n            r: \"3\",\n            key: \"i6i8g7\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"13.91\",\n            cy: \"5.85\",\n            r: \"3\",\n            key: \"6ye0dv\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18.15\",\n            cy: \"10.09\",\n            r: \"3\",\n            key: \"snx9no\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6.56\",\n            cy: \"13.2\",\n            r: \"3\",\n            key: \"17x4xg\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"10.8\",\n            cy: \"17.44\",\n            r: \"3\",\n            key: \"1hogw9\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"19\",\n            r: \"3\",\n            key: \"1sn6vo\"\n        }\n    ]\n]);\nconst Grid2x2 = createLucideIcon(\"Grid2x2\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12h18\",\n            key: \"1i2n21\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 3v18\",\n            key: \"108xh3\"\n        }\n    ]\n]);\nconst Grid3x3 = createLucideIcon(\"Grid3x3\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 9h18\",\n            key: \"1pudct\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 15h18\",\n            key: \"5xshup\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 3v18\",\n            key: \"fh3hqa\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 3v18\",\n            key: \"14nvp0\"\n        }\n    ]\n]);\nconst GripHorizontal = createLucideIcon(\"GripHorizontal\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"9\",\n            r: \"1\",\n            key: \"124mty\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"9\",\n            r: \"1\",\n            key: \"1ruzo2\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"9\",\n            r: \"1\",\n            key: \"1a8b28\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"15\",\n            r: \"1\",\n            key: \"1e56xg\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"15\",\n            r: \"1\",\n            key: \"1a92ep\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"15\",\n            r: \"1\",\n            key: \"5r1jwy\"\n        }\n    ]\n]);\nconst GripVertical = createLucideIcon(\"GripVertical\", [\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"1vctgf\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"5\",\n            r: \"1\",\n            key: \"hp0tcf\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"19\",\n            r: \"1\",\n            key: \"fkjjf6\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"15\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"1tmaij\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"15\",\n            cy: \"5\",\n            r: \"1\",\n            key: \"19l28e\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"15\",\n            cy: \"19\",\n            r: \"1\",\n            key: \"f4zoj3\"\n        }\n    ]\n]);\nconst Grip = createLucideIcon(\"Grip\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"5\",\n            r: \"1\",\n            key: \"gxeob9\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"5\",\n            r: \"1\",\n            key: \"w8mnmm\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"5\",\n            r: \"1\",\n            key: \"lttvr7\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"41hilf\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"1wjl8i\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"1pcz8c\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"19\",\n            r: \"1\",\n            key: \"lyex9k\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"19\",\n            r: \"1\",\n            key: \"shf9b7\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"19\",\n            r: \"1\",\n            key: \"bfqh0e\"\n        }\n    ]\n]);\nconst Group = createLucideIcon(\"Group\", [\n    [\n        \"path\",\n        {\n            d: \"M3 7V5c0-1.1.9-2 2-2h2\",\n            key: \"adw53z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 3h2c1.1 0 2 .9 2 2v2\",\n            key: \"an4l38\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 17v2c0 1.1-.9 2-2 2h-2\",\n            key: \"144t0e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 21H5c-1.1 0-2-.9-2-2v-2\",\n            key: \"rtnfgi\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"5\",\n            x: \"7\",\n            y: \"7\",\n            rx: \"1\",\n            key: \"1eyiv7\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"5\",\n            x: \"10\",\n            y: \"12\",\n            rx: \"1\",\n            key: \"1qlmkx\"\n        }\n    ]\n]);\nconst Hammer = createLucideIcon(\"Hammer\", [\n    [\n        \"path\",\n        {\n            d: \"m15 12-8.5 8.5c-.83.83-2.17.83-3 0 0 0 0 0 0 0a2.12 2.12 0 0 1 0-3L12 9\",\n            key: \"1afvon\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.64 15 22 10.64\",\n            key: \"zsji6s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20.91 11.7-1.25-1.25c-.6-.6-.93-1.4-.93-2.25v-.86L16.01 4.6a5.56 5.56 0 0 0-3.94-1.64H9l.92.82A6.18 6.18 0 0 1 12 8.4v1.56l2 2h2.47l2.26 1.91\",\n            key: \"lehyy1\"\n        }\n    ]\n]);\nconst HandMetal = createLucideIcon(\"HandMetal\", [\n    [\n        \"path\",\n        {\n            d: \"M18 12.5V10a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v1.4\",\n            key: \"7eki13\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 11V9a2 2 0 1 0-4 0v2\",\n            key: \"94qvcw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 10.5V5a2 2 0 1 0-4 0v9\",\n            key: \"m1ah89\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 15-1.76-1.76a2 2 0 0 0-2.83 2.82l3.6 3.6C7.5 21.14 9.2 22 12 22h2a8 8 0 0 0 8-8V7a2 2 0 1 0-4 0v5\",\n            key: \"t1skq1\"\n        }\n    ]\n]);\nconst Hand = createLucideIcon(\"Hand\", [\n    [\n        \"path\",\n        {\n            d: \"M18 11V6a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v0\",\n            key: \"aigmz7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 10V4a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v2\",\n            key: \"1n6bmn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 10.5V6a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v8\",\n            key: \"a9iiix\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 8a2 2 0 1 1 4 0v6a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15\",\n            key: \"1s1gnw\"\n        }\n    ]\n]);\nconst HardDriveDownload = createLucideIcon(\"HardDriveDownload\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2v8\",\n            key: \"1q4o3n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 6-4 4-4-4\",\n            key: \"6wukr\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"8\",\n            x: \"2\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"w68u3i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18h.01\",\n            key: \"uhywen\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 18h.01\",\n            key: \"h775k\"\n        }\n    ]\n]);\nconst HardDriveUpload = createLucideIcon(\"HardDriveUpload\", [\n    [\n        \"path\",\n        {\n            d: \"m16 6-4-4-4 4\",\n            key: \"13yo43\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v8\",\n            key: \"1q4o3n\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"8\",\n            x: \"2\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"w68u3i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18h.01\",\n            key: \"uhywen\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 18h.01\",\n            key: \"h775k\"\n        }\n    ]\n]);\nconst HardDrive = createLucideIcon(\"HardDrive\", [\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"2\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1y58io\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\",\n            key: \"oot6mr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6.01\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"sgf278\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"10.01\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"1l4acy\"\n        }\n    ]\n]);\nconst HardHat = createLucideIcon(\"HardHat\", [\n    [\n        \"path\",\n        {\n            d: \"M2 18a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v2z\",\n            key: \"1dej2m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 10V5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v5\",\n            key: \"1p9q5i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 15v-3a6 6 0 0 1 6-6h0\",\n            key: \"1uc279\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 6h0a6 6 0 0 1 6 6v3\",\n            key: \"1j9mnm\"\n        }\n    ]\n]);\nconst Hash = createLucideIcon(\"Hash\", [\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"20\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"4lhtct\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"20\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"vyu0kd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"8\",\n            y1: \"3\",\n            y2: \"21\",\n            key: \"1ggp8o\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"14\",\n            y1: \"3\",\n            y2: \"21\",\n            key: \"weycgp\"\n        }\n    ]\n]);\nconst Haze = createLucideIcon(\"Haze\", [\n    [\n        \"path\",\n        {\n            d: \"m5.2 6.2 1.4 1.4\",\n            key: \"17imol\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 13h2\",\n            key: \"13gyu8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 13h2\",\n            key: \"16rner\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17.4 7.6 1.4-1.4\",\n            key: \"t4xlah\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 17H2\",\n            key: \"1gtaj3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 21H2\",\n            key: \"1gy6en\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 13a4 4 0 0 0-8 0\",\n            key: \"1dyczq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 5V2.5\",\n            key: \"1vytko\"\n        }\n    ]\n]);\nconst HdmiPort = createLucideIcon(\"HdmiPort\", [\n    [\n        \"path\",\n        {\n            d: \"M22 9a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h1l2 2h12l2-2h1a1 1 0 0 0 1-1Z\",\n            key: \"2128wb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.5 12h9\",\n            key: \"1t0ckc\"\n        }\n    ]\n]);\nconst Heading1 = createLucideIcon(\"Heading1\", [\n    [\n        \"path\",\n        {\n            d: \"M4 12h8\",\n            key: \"17cfdx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 18V6\",\n            key: \"1rz3zl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18V6\",\n            key: \"zqpxq5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 12 3-2v8\",\n            key: \"1hhhft\"\n        }\n    ]\n]);\nconst Heading2 = createLucideIcon(\"Heading2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 12h8\",\n            key: \"17cfdx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 18V6\",\n            key: \"1rz3zl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18V6\",\n            key: \"zqpxq5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 18h-4c0-4 4-3 4-6 0-1.5-2-2.5-4-1\",\n            key: \"9jr5yi\"\n        }\n    ]\n]);\nconst Heading3 = createLucideIcon(\"Heading3\", [\n    [\n        \"path\",\n        {\n            d: \"M4 12h8\",\n            key: \"17cfdx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 18V6\",\n            key: \"1rz3zl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18V6\",\n            key: \"zqpxq5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.5 10.5c1.7-1 3.5 0 3.5 1.5a2 2 0 0 1-2 2\",\n            key: \"68ncm8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 17.5c2 1.5 4 .3 4-1.5a2 2 0 0 0-2-2\",\n            key: \"1ejuhz\"\n        }\n    ]\n]);\nconst Heading4 = createLucideIcon(\"Heading4\", [\n    [\n        \"path\",\n        {\n            d: \"M4 12h8\",\n            key: \"17cfdx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 18V6\",\n            key: \"1rz3zl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18V6\",\n            key: \"zqpxq5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 10v4h4\",\n            key: \"13sv97\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 10v8\",\n            key: \"1kdml4\"\n        }\n    ]\n]);\nconst Heading5 = createLucideIcon(\"Heading5\", [\n    [\n        \"path\",\n        {\n            d: \"M4 12h8\",\n            key: \"17cfdx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 18V6\",\n            key: \"1rz3zl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18V6\",\n            key: \"zqpxq5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 13v-3h4\",\n            key: \"1nvgqp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 17.7c.4.2.8.3 1.3.3 1.5 0 2.7-1.1 2.7-2.5S19.8 13 18.3 13H17\",\n            key: \"2nebdn\"\n        }\n    ]\n]);\nconst Heading6 = createLucideIcon(\"Heading6\", [\n    [\n        \"path\",\n        {\n            d: \"M4 12h8\",\n            key: \"17cfdx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 18V6\",\n            key: \"1rz3zl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18V6\",\n            key: \"zqpxq5\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"16\",\n            r: \"2\",\n            key: \"15mx69\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 10c-2 2-3 3.5-3 6\",\n            key: \"f35dl0\"\n        }\n    ]\n]);\nconst Heading = createLucideIcon(\"Heading\", [\n    [\n        \"path\",\n        {\n            d: \"M6 12h12\",\n            key: \"8npq4p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 20V4\",\n            key: \"1w1bmo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 20V4\",\n            key: \"o2hl4u\"\n        }\n    ]\n]);\nconst Headphones = createLucideIcon(\"Headphones\", [\n    [\n        \"path\",\n        {\n            d: \"M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 18 0v7a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3\",\n            key: \"1xhozi\"\n        }\n    ]\n]);\nconst HeartCrack = createLucideIcon(\"HeartCrack\", [\n    [\n        \"path\",\n        {\n            d: \"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\",\n            key: \"c3ymky\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 13-1-1 2-2-3-3 2-2\",\n            key: \"xjdxli\"\n        }\n    ]\n]);\nconst HeartHandshake = createLucideIcon(\"HeartHandshake\", [\n    [\n        \"path\",\n        {\n            d: \"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\",\n            key: \"c3ymky\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 5 9.04 7.96a2.17 2.17 0 0 0 0 3.08v0c.82.82 2.13.85 3 .07l2.07-1.9a2.82 2.82 0 0 1 3.79 0l2.96 2.66\",\n            key: \"12sd6o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 15-2-2\",\n            key: \"60u0ii\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 18-2-2\",\n            key: \"6p76be\"\n        }\n    ]\n]);\nconst HeartOff = createLucideIcon(\"HeartOff\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            y1: \"2\",\n            x2: \"22\",\n            y2: \"22\",\n            key: \"1w4vcy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.5 16.5 12 21l-7-7c-1.5-1.45-3-3.2-3-5.5a5.5 5.5 0 0 1 2.14-4.35\",\n            key: \"3mpagl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.76 3.1c1.15.22 2.13.78 3.24 1.9 1.5-1.5 2.74-2 4.5-2A5.5 5.5 0 0 1 22 8.5c0 2.12-1.3 3.78-2.67 5.17\",\n            key: \"1gh3v3\"\n        }\n    ]\n]);\nconst HeartPulse = createLucideIcon(\"HeartPulse\", [\n    [\n        \"path\",\n        {\n            d: \"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\",\n            key: \"c3ymky\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.22 12H9.5l.5-1 2 4.5 2-7 1.5 3.5h5.27\",\n            key: \"1uw2ng\"\n        }\n    ]\n]);\nconst Heart = createLucideIcon(\"Heart\", [\n    [\n        \"path\",\n        {\n            d: \"M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z\",\n            key: \"c3ymky\"\n        }\n    ]\n]);\nconst HelpCircle = createLucideIcon(\"HelpCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\",\n            key: \"1u773s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17h.01\",\n            key: \"p32p05\"\n        }\n    ]\n]);\nconst HelpingHand = createLucideIcon(\"HelpingHand\", [\n    [\n        \"path\",\n        {\n            d: \"m3 15 5.12-5.12A3 3 0 0 1 10.24 9H13a2 2 0 1 1 0 4h-2.5m4-.68 4.17-4.89a1.88 1.88 0 0 1 2.92 2.36l-4.2 5.94A3 3 0 0 1 14.96 17H9.83a2 2 0 0 0-1.42.59L7 19\",\n            key: \"nitrv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 14 6 6\",\n            key: \"g6j1uo\"\n        }\n    ]\n]);\nconst Hexagon = createLucideIcon(\"Hexagon\", [\n    [\n        \"path\",\n        {\n            d: \"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\",\n            key: \"yt0hxn\"\n        }\n    ]\n]);\nconst Highlighter = createLucideIcon(\"Highlighter\", [\n    [\n        \"path\",\n        {\n            d: \"m9 11-6 6v3h9l3-3\",\n            key: \"1a3l36\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 12-4.6 4.6a2 2 0 0 1-2.8 0l-5.2-5.2a2 2 0 0 1 0-2.8L14 4\",\n            key: \"14a9rk\"\n        }\n    ]\n]);\nconst History = createLucideIcon(\"History\", [\n    [\n        \"path\",\n        {\n            d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\",\n            key: \"1357e3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 3v5h5\",\n            key: \"1xhq8a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7v5l4 2\",\n            key: \"1fdv2h\"\n        }\n    ]\n]);\nconst Home = createLucideIcon(\"Home\", [\n    [\n        \"path\",\n        {\n            d: \"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\",\n            key: \"y5dka4\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"9 22 9 12 15 12 15 22\",\n            key: \"e2us08\"\n        }\n    ]\n]);\nconst HopOff = createLucideIcon(\"HopOff\", [\n    [\n        \"path\",\n        {\n            d: \"M17.5 5.5C19 7 20.5 9 21 11c-1.323.265-2.646.39-4.118.226\",\n            key: \"10j95a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.5 17.5C7 19 9 20.5 11 21c.5-2.5.5-5-1-8.5\",\n            key: \"1mqyjd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.5 17.5c-2.5 0-4 0-6-1\",\n            key: \"11elt5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 11.5c1 1.5 2 3.5 2 4.5\",\n            key: \"13ezvz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.5 20c1.5 1 3.5 2 4.5 2 .5-1.5 0-3-.5-4.5\",\n            key: \"1ufrz1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 22c-2 0-3.5-.5-5.5-1.5\",\n            key: \"1n8vbj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.783 4.782C1.073 8.492 1 14.5 5 18c1-1 2-4.5 1.5-6.5 1.5 1 4 1 5.5.5M8.227 2.57C11.578 1.335 15.453 2.089 18 5c-.88.88-3.7 1.761-5.726 1.618\",\n            key: \"1h85u8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Hop = createLucideIcon(\"Hop\", [\n    [\n        \"path\",\n        {\n            d: \"M17.5 5.5C19 7 20.5 9 21 11c-2.5.5-5 .5-8.5-1\",\n            key: \"l0z2za\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.5 17.5C7 19 9 20.5 11 21c.5-2.5.5-5-1-8.5\",\n            key: \"1mqyjd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.5 11.5c1 2 1 3.5 1 6-2.5 0-4 0-6-1\",\n            key: \"10xoad\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 11.5c1 1.5 2 3.5 2 4.5-1.5.5-3 0-4.5-.5\",\n            key: \"1a4gpx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.5 20c1.5 1 3.5 2 4.5 2 .5-1.5 0-3-.5-4.5\",\n            key: \"1ufrz1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.5 16.5c1 2 1.5 3.5 1.5 5.5-2 0-3.5-.5-5.5-1.5\",\n            key: \"1ok5d2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.783 4.782C8.493 1.072 14.5 1 18 5c-1 1-4.5 2-6.5 1.5 1 1.5 1 4 .5 5.5-1.5.5-4 .5-5.5-.5C7 13.5 6 17 5 18c-4-3.5-3.927-9.508-.217-13.218Z\",\n            key: \"8hlroy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.5 4.5 3 3c-.184-.185-.184-.816 0-1\",\n            key: \"q3aj97\"\n        }\n    ]\n]);\nconst Hotel = createLucideIcon(\"Hotel\", [\n    [\n        \"path\",\n        {\n            d: \"M18 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Z\",\n            key: \"p9z69c\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 16 .348-.24c1.465-1.013 3.84-1.013 5.304 0L15 16\",\n            key: \"1bvcvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 7h.01\",\n            key: \"1vti4s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 7h.01\",\n            key: \"1kdx03\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7h.01\",\n            key: \"1ivr5q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 11h.01\",\n            key: \"z322tv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 11h.01\",\n            key: \"xkw8gn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 11h.01\",\n            key: \"1dfujw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 22v-6.5m4 0V22\",\n            key: \"16gs4s\"\n        }\n    ]\n]);\nconst Hourglass = createLucideIcon(\"Hourglass\", [\n    [\n        \"path\",\n        {\n            d: \"M5 22h14\",\n            key: \"ehvnwv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 2h14\",\n            key: \"pdyrp9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22\",\n            key: \"1d314k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2\",\n            key: \"1vvvr6\"\n        }\n    ]\n]);\nconst IceCream2 = createLucideIcon(\"IceCream2\", [\n    [\n        \"path\",\n        {\n            d: \"M12 17c5 0 8-2.69 8-6H4c0 3.31 3 6 8 6Zm-4 4h8m-4-3v3M5.14 11a3.5 3.5 0 1 1 6.71 0\",\n            key: \"g86ewz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12.14 11a3.5 3.5 0 1 1 6.71 0\",\n            key: \"4k3m1s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.5 6.5a3.5 3.5 0 1 0-7 0\",\n            key: \"zmuahr\"\n        }\n    ]\n]);\nconst IceCream = createLucideIcon(\"IceCream\", [\n    [\n        \"path\",\n        {\n            d: \"m7 11 4.08 10.35a1 1 0 0 0 1.84 0L17 11\",\n            key: \"1v6356\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 7A5 5 0 0 0 7 7\",\n            key: \"151p3v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 7a2 2 0 0 1 0 4H7a2 2 0 0 1 0-4\",\n            key: \"1sdaij\"\n        }\n    ]\n]);\nconst ImageMinus = createLucideIcon(\"ImageMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M21 9v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7\",\n            key: \"m87ecr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"22\",\n            y1: \"5\",\n            y2: \"5\",\n            key: \"ez7e4s\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"9\",\n            r: \"2\",\n            key: \"af1f0g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\",\n            key: \"1xmnt7\"\n        }\n    ]\n]);\nconst ImageOff = createLucideIcon(\"ImageOff\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.41 10.41a2 2 0 1 1-2.83-2.83\",\n            key: \"1bzlo9\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"13.5\",\n            x2: \"6\",\n            y1: \"13.5\",\n            y2: \"21\",\n            key: \"1q0aeu\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"21\",\n            y1: \"12\",\n            y2: \"15\",\n            key: \"5mozeu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.59 3.59A1.99 1.99 0 0 0 3 5v14a2 2 0 0 0 2 2h14c.55 0 1.052-.22 1.41-.59\",\n            key: \"mmje98\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 15V5a2 2 0 0 0-2-2H9\",\n            key: \"43el77\"\n        }\n    ]\n]);\nconst ImagePlus = createLucideIcon(\"ImagePlus\", [\n    [\n        \"path\",\n        {\n            d: \"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7\",\n            key: \"31hg93\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"22\",\n            y1: \"5\",\n            y2: \"5\",\n            key: \"ez7e4s\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"19\",\n            y1: \"2\",\n            y2: \"8\",\n            key: \"1gkr8c\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"9\",\n            r: \"2\",\n            key: \"af1f0g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\",\n            key: \"1xmnt7\"\n        }\n    ]\n]);\nconst Image = createLucideIcon(\"Image\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"9\",\n            r: \"2\",\n            key: \"af1f0g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\",\n            key: \"1xmnt7\"\n        }\n    ]\n]);\nconst Import = createLucideIcon(\"Import\", [\n    [\n        \"path\",\n        {\n            d: \"M12 3v12\",\n            key: \"1x0j5s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 11 4 4 4-4\",\n            key: \"1dohi6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 5H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-4\",\n            key: \"1ywtjm\"\n        }\n    ]\n]);\nconst Inbox = createLucideIcon(\"Inbox\", [\n    [\n        \"polyline\",\n        {\n            points: \"22 12 16 12 14 15 10 15 8 12 2 12\",\n            key: \"o97t9d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\",\n            key: \"oot6mr\"\n        }\n    ]\n]);\nconst Indent = createLucideIcon(\"Indent\", [\n    [\n        \"polyline\",\n        {\n            points: \"3 8 7 12 3 16\",\n            key: \"f3rxhf\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"11\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1fxxak\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"11\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"asgu94\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"11\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"13dsj7\"\n        }\n    ]\n]);\nconst IndianRupee = createLucideIcon(\"IndianRupee\", [\n    [\n        \"path\",\n        {\n            d: \"M6 3h12\",\n            key: \"ggurg9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 8h12\",\n            key: \"6g4wlu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 13 8.5 8\",\n            key: \"u1kupk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 13h3\",\n            key: \"wdp6ag\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 13c6.667 0 6.667-10 0-10\",\n            key: \"1nkvk2\"\n        }\n    ]\n]);\nconst Infinity = createLucideIcon(\"Infinity\", [\n    [\n        \"path\",\n        {\n            d: \"M12 12c-2-2.67-4-4-6-4a4 4 0 1 0 0 8c2 0 4-1.33 6-4Zm0 0c2 2.67 4 4 6 4a4 4 0 0 0 0-8c-2 0-4 1.33-6 4Z\",\n            key: \"1z0uae\"\n        }\n    ]\n]);\nconst Info = createLucideIcon(\"Info\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16v-4\",\n            key: \"1dtifu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8h.01\",\n            key: \"e9boi3\"\n        }\n    ]\n]);\nconst Instagram = createLucideIcon(\"Instagram\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"20\",\n            x: \"2\",\n            y: \"2\",\n            rx: \"5\",\n            ry: \"5\",\n            key: \"2e1cvw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\",\n            key: \"9exkf1\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"17.5\",\n            x2: \"17.51\",\n            y1: \"6.5\",\n            y2: \"6.5\",\n            key: \"r4j83e\"\n        }\n    ]\n]);\nconst Italic = createLucideIcon(\"Italic\", [\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"10\",\n            y1: \"4\",\n            y2: \"4\",\n            key: \"15jd3p\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"5\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"bu0au3\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"9\",\n            y1: \"4\",\n            y2: \"20\",\n            key: \"uljnxc\"\n        }\n    ]\n]);\nconst IterationCcw = createLucideIcon(\"IterationCcw\", [\n    [\n        \"path\",\n        {\n            d: \"M20 10c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8h8\",\n            key: \"4znkd0\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"16 14 20 18 16 22\",\n            key: \"11njsm\"\n        }\n    ]\n]);\nconst IterationCw = createLucideIcon(\"IterationCw\", [\n    [\n        \"path\",\n        {\n            d: \"M4 10c0-4.4 3.6-8 8-8s8 3.6 8 8-3.6 8-8 8H4\",\n            key: \"tuf4su\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"8 22 4 18 8 14\",\n            key: \"evkj9s\"\n        }\n    ]\n]);\nconst JapaneseYen = createLucideIcon(\"JapaneseYen\", [\n    [\n        \"path\",\n        {\n            d: \"M12 9.5V21m0-11.5L6 3m6 6.5L18 3\",\n            key: \"2ej80x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 15h12\",\n            key: \"1hwgt5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 11h12\",\n            key: \"wf4gp6\"\n        }\n    ]\n]);\nconst Joystick = createLucideIcon(\"Joystick\", [\n    [\n        \"path\",\n        {\n            d: \"M21 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-2Z\",\n            key: \"jg2n2t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 15v-2\",\n            key: \"gd6mvg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 15V9\",\n            key: \"8c7uyn\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"1gm2ql\"\n        }\n    ]\n]);\nconst KanbanSquareDashed = createLucideIcon(\"KanbanSquareDashed\", [\n    [\n        \"path\",\n        {\n            d: \"M8 7v7\",\n            key: \"1x2jlm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7v4\",\n            key: \"xawao1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 7v9\",\n            key: \"1hp2iy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 3a2 2 0 0 0-2 2\",\n            key: \"y57alp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 3h1\",\n            key: \"1yesri\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 3h1\",\n            key: \"1ec4yj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 3a2 2 0 0 1 2 2\",\n            key: \"18rm91\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 9v1\",\n            key: \"mxsmne\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 14v1\",\n            key: \"169vum\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 19a2 2 0 0 1-2 2\",\n            key: \"1j7049\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 21h1\",\n            key: \"v9vybs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 21h1\",\n            key: \"15o7lz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 21a2 2 0 0 1-2-2\",\n            key: \"sbafld\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 14v1\",\n            key: \"vnatye\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 9v1\",\n            key: \"1r0deq\"\n        }\n    ]\n]);\nconst KanbanSquare = createLucideIcon(\"KanbanSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 7v7\",\n            key: \"1x2jlm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7v4\",\n            key: \"xawao1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 7v9\",\n            key: \"1hp2iy\"\n        }\n    ]\n]);\nconst Kanban = createLucideIcon(\"Kanban\", [\n    [\n        \"path\",\n        {\n            d: \"M6 5v11\",\n            key: \"mdvv1e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 5v6\",\n            key: \"14ar3b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 5v14\",\n            key: \"7ji314\"\n        }\n    ]\n]);\nconst KeyRound = createLucideIcon(\"KeyRound\", [\n    [\n        \"path\",\n        {\n            d: \"M2 18v3c0 .6.4 1 1 1h4v-3h3v-3h2l1.4-1.4a6.5 6.5 0 1 0-4-4Z\",\n            key: \"167ctg\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16.5\",\n            cy: \"7.5\",\n            r: \".5\",\n            key: \"1kog09\"\n        }\n    ]\n]);\nconst KeySquare = createLucideIcon(\"KeySquare\", [\n    [\n        \"path\",\n        {\n            d: \"M12.4 2.7c.9-.9 2.5-.9 3.4 0l5.5 5.5c.9.9.9 2.5 0 3.4l-3.7 3.7c-.9.9-2.5.9-3.4 0L8.7 9.8c-.9-.9-.9-2.5 0-3.4Z\",\n            key: \"9li5bk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 7 3 3\",\n            key: \"1r5n42\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.4 10.6 2 18v3c0 .6.4 1 1 1h4v-3h3v-3h2l1.4-1.4\",\n            key: \"1ym3zm\"\n        }\n    ]\n]);\nconst Key = createLucideIcon(\"Key\", [\n    [\n        \"circle\",\n        {\n            cx: \"7.5\",\n            cy: \"15.5\",\n            r: \"5.5\",\n            key: \"yqb3hr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 2-9.6 9.6\",\n            key: \"1j0ho8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15.5 7.5 3 3L22 7l-3-3\",\n            key: \"1rn1fs\"\n        }\n    ]\n]);\nconst Keyboard = createLucideIcon(\"Keyboard\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"16\",\n            x: \"2\",\n            y: \"4\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"15u882\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 8h.001\",\n            key: \"1ej0i3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 8h.001\",\n            key: \"1x2st2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 8h.001\",\n            key: \"1vkmyp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 8h.001\",\n            key: \"kfsenl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h.001\",\n            key: \"1sjpby\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12h.001\",\n            key: \"al75ts\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12h.001\",\n            key: \"931bgk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 16h10\",\n            key: \"wp8him\"\n        }\n    ]\n]);\nconst LampCeiling = createLucideIcon(\"LampCeiling\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2v5\",\n            key: \"nd4vlx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 7h12l4 9H2l4-9Z\",\n            key: \"123d64\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.17 16a3 3 0 1 0 5.66 0\",\n            key: \"1061mw\"\n        }\n    ]\n]);\nconst LampDesk = createLucideIcon(\"LampDesk\", [\n    [\n        \"path\",\n        {\n            d: \"m14 5-3 3 2 7 8-8-7-2Z\",\n            key: \"1b0msb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 5-3 3-3-3 3-3 3 3Z\",\n            key: \"1uemms\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.5 6.5 4 12l3 6\",\n            key: \"1bx08v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 22v-2c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2H3Z\",\n            key: \"wap775\"\n        }\n    ]\n]);\nconst LampFloor = createLucideIcon(\"LampFloor\", [\n    [\n        \"path\",\n        {\n            d: \"M9 2h6l3 7H6l3-7Z\",\n            key: \"wcx6mj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 9v13\",\n            key: \"3n1su1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 22h6\",\n            key: \"1rlq3v\"\n        }\n    ]\n]);\nconst LampWallDown = createLucideIcon(\"LampWallDown\", [\n    [\n        \"path\",\n        {\n            d: \"M11 13h6l3 7H8l3-7Z\",\n            key: \"9n3qlo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 13V8a2 2 0 0 0-2-2H8\",\n            key: \"1hu4hb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 9h2a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H4v6Z\",\n            key: \"s053bc\"\n        }\n    ]\n]);\nconst LampWallUp = createLucideIcon(\"LampWallUp\", [\n    [\n        \"path\",\n        {\n            d: \"M11 4h6l3 7H8l3-7Z\",\n            key: \"11x1ee\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 11v5a2 2 0 0 1-2 2H8\",\n            key: \"eutp5o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 15h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H4v-6Z\",\n            key: \"1iuthr\"\n        }\n    ]\n]);\nconst Lamp = createLucideIcon(\"Lamp\", [\n    [\n        \"path\",\n        {\n            d: \"M8 2h8l4 10H4L8 2Z\",\n            key: \"9dma5w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v6\",\n            key: \"3ahymv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 22v-2c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2H8Z\",\n            key: \"mwf4oh\"\n        }\n    ]\n]);\nconst Landmark = createLucideIcon(\"Landmark\", [\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"22\",\n            y2: \"22\",\n            key: \"j8o0r\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"18\",\n            y2: \"11\",\n            key: \"10tf0k\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"10\",\n            y1: \"18\",\n            y2: \"11\",\n            key: \"54lgf6\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"14\",\n            y1: \"18\",\n            y2: \"11\",\n            key: \"380y\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"18\",\n            y1: \"18\",\n            y2: \"11\",\n            key: \"1kevvc\"\n        }\n    ],\n    [\n        \"polygon\",\n        {\n            points: \"12 2 20 7 4 7\",\n            key: \"jkujk7\"\n        }\n    ]\n]);\nconst Languages = createLucideIcon(\"Languages\", [\n    [\n        \"path\",\n        {\n            d: \"m5 8 6 6\",\n            key: \"1wu5hv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4 14 6-6 2-3\",\n            key: \"1k1g8d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 5h12\",\n            key: \"or177f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 2h1\",\n            key: \"1t2jsx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 22-5-10-5 10\",\n            key: \"don7ne\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 18h6\",\n            key: \"1m8k6r\"\n        }\n    ]\n]);\nconst Laptop2 = createLucideIcon(\"Laptop2\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"12\",\n            x: \"3\",\n            y: \"4\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1qhy41\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"ni3hll\"\n        }\n    ]\n]);\nconst Laptop = createLucideIcon(\"Laptop\", [\n    [\n        \"path\",\n        {\n            d: \"M20 16V7a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v9m16 0H4m16 0 1.28 2.55a1 1 0 0 1-.9 1.45H3.62a1 1 0 0 1-.9-1.45L4 16\",\n            key: \"tarvll\"\n        }\n    ]\n]);\nconst LassoSelect = createLucideIcon(\"LassoSelect\", [\n    [\n        \"path\",\n        {\n            d: \"M7 22a5 5 0 0 1-2-4\",\n            key: \"umushi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 16.93c.96.43 1.96.74 2.99.91\",\n            key: \"ybbtv3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.34 14A6.8 6.8 0 0 1 2 10c0-4.42 4.48-8 10-8s10 3.58 10 8a7.19 7.19 0 0 1-.33 2\",\n            key: \"gt5e1w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z\",\n            key: \"bq3ynw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.33 22h-.09a.35.35 0 0 1-.24-.32v-10a.34.34 0 0 1 .33-.34c.08 0 .15.03.21.08l7.34 6a.33.33 0 0 1-.21.59h-4.49l-2.57 3.85a.35.35 0 0 1-.28.14v0z\",\n            key: \"1bawls\"\n        }\n    ]\n]);\nconst Lasso = createLucideIcon(\"Lasso\", [\n    [\n        \"path\",\n        {\n            d: \"M7 22a5 5 0 0 1-2-4\",\n            key: \"umushi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.3 14A6.8 6.8 0 0 1 2 10c0-4.4 4.5-8 10-8s10 3.6 10 8-4.5 8-10 8a12 12 0 0 1-5-1\",\n            key: \"146dds\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z\",\n            key: \"bq3ynw\"\n        }\n    ]\n]);\nconst Laugh = createLucideIcon(\"Laugh\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 13a6 6 0 0 1-6 5 6 6 0 0 1-6-5h12Z\",\n            key: \"b2q4dd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"9.01\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"yxxnd0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15.01\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1p4y9e\"\n        }\n    ]\n]);\nconst Layers = createLucideIcon(\"Layers\", [\n    [\n        \"polygon\",\n        {\n            points: \"12 2 2 7 12 12 22 7 12 2\",\n            key: \"1b0ttc\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"2 17 12 22 22 17\",\n            key: \"imjtdl\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"2 12 12 17 22 12\",\n            key: \"5dexcv\"\n        }\n    ]\n]);\nconst LayoutDashboard = createLucideIcon(\"LayoutDashboard\", [\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"9\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"10lvy0\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"5\",\n            x: \"14\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"16une8\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"9\",\n            x: \"14\",\n            y: \"12\",\n            rx: \"1\",\n            key: \"1hutg5\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"5\",\n            x: \"3\",\n            y: \"16\",\n            rx: \"1\",\n            key: \"ldoo1y\"\n        }\n    ]\n]);\nconst LayoutGrid = createLucideIcon(\"LayoutGrid\", [\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"1g98yp\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"14\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"6d4xhi\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"14\",\n            y: \"14\",\n            rx: \"1\",\n            key: \"nxv5o0\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"3\",\n            y: \"14\",\n            rx: \"1\",\n            key: \"1bb6yr\"\n        }\n    ]\n]);\nconst LayoutList = createLucideIcon(\"LayoutList\", [\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"1g98yp\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"3\",\n            y: \"14\",\n            rx: \"1\",\n            key: \"1bb6yr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 4h7\",\n            key: \"3xa0d5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 9h7\",\n            key: \"1icrd9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 15h7\",\n            key: \"1mj8o2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 20h7\",\n            key: \"11slyb\"\n        }\n    ]\n]);\nconst LayoutPanelLeft = createLucideIcon(\"LayoutPanelLeft\", [\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"2obqm\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"14\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"6d4xhi\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"14\",\n            y: \"14\",\n            rx: \"1\",\n            key: \"nxv5o0\"\n        }\n    ]\n]);\nconst LayoutPanelTop = createLucideIcon(\"LayoutPanelTop\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"7\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"f1a2em\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"3\",\n            y: \"14\",\n            rx: \"1\",\n            key: \"1bb6yr\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"7\",\n            x: \"14\",\n            y: \"14\",\n            rx: \"1\",\n            key: \"nxv5o0\"\n        }\n    ]\n]);\nconst LayoutTemplate = createLucideIcon(\"LayoutTemplate\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"7\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"f1a2em\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"9\",\n            height: \"7\",\n            x: \"3\",\n            y: \"14\",\n            rx: \"1\",\n            key: \"jqznyg\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"5\",\n            height: \"7\",\n            x: \"16\",\n            y: \"14\",\n            rx: \"1\",\n            key: \"q5h2i8\"\n        }\n    ]\n]);\nconst Layout = createLucideIcon(\"Layout\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1vqk6q\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"9\",\n            y1: \"21\",\n            y2: \"9\",\n            key: \"wpwpyp\"\n        }\n    ]\n]);\nconst Leaf = createLucideIcon(\"Leaf\", [\n    [\n        \"path\",\n        {\n            d: \"M11 20A7 7 0 0 1 9.8 6.1C15.5 5 17 4.48 19 2c1 2 2 4.18 2 8 0 5.5-4.78 10-10 10Z\",\n            key: \"nnexq3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 21c0-3 1.85-5.36 5.08-6C9.5 14.52 12 13 13 12\",\n            key: \"mt58a7\"\n        }\n    ]\n]);\nconst LeafyGreen = createLucideIcon(\"LeafyGreen\", [\n    [\n        \"path\",\n        {\n            d: \"M2 22c1.25-.987 2.27-1.975 3.9-2.2a5.56 5.56 0 0 1 3.8 1.5 4 4 0 0 0 6.187-2.353 3.5 3.5 0 0 0 3.69-5.116A3.5 3.5 0 0 0 20.95 8 3.5 3.5 0 1 0 16 3.05a3.5 3.5 0 0 0-5.831 1.373 3.5 3.5 0 0 0-5.116 3.69 4 4 0 0 0-2.348 6.155C3.499 15.42 4.409 16.712 4.2 18.1 3.926 19.743 3.014 20.732 2 22\",\n            key: \"1134nt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 22 17 7\",\n            key: \"1q7jp2\"\n        }\n    ]\n]);\nconst Library = createLucideIcon(\"Library\", [\n    [\n        \"path\",\n        {\n            d: \"m16 6 4 14\",\n            key: \"ji33uf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 6v14\",\n            key: \"1n7gus\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 8v12\",\n            key: \"1gg7y9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 4v16\",\n            key: \"6qkkli\"\n        }\n    ]\n]);\nconst LifeBuoy = createLucideIcon(\"LifeBuoy\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.93 4.93 4.24 4.24\",\n            key: \"1ymg45\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.83 9.17 4.24-4.24\",\n            key: \"1cb5xl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.83 14.83 4.24 4.24\",\n            key: \"q42g0n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.17 14.83-4.24 4.24\",\n            key: \"bqpfvv\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"4\",\n            key: \"4exip2\"\n        }\n    ]\n]);\nconst Ligature = createLucideIcon(\"Ligature\", [\n    [\n        \"path\",\n        {\n            d: \"M8 20V8c0-2.2 1.8-4 4-4 1.5 0 2.8.8 3.5 2\",\n            key: \"1rtphz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12h4\",\n            key: \"a4o3ry\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 12h2v8\",\n            key: \"c1fccl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 20h4\",\n            key: \"1i6q5t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 20h4\",\n            key: \"lzx1xo\"\n        }\n    ]\n]);\nconst LightbulbOff = createLucideIcon(\"LightbulbOff\", [\n    [\n        \"path\",\n        {\n            d: \"M16.8 11.2c.8-.9 1.2-2 1.2-3.2a6 6 0 0 0-9.3-5\",\n            key: \"1fkcox\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.3 6.3a4.67 4.67 0 0 0 1.2 5.2c.7.7 1.3 1.5 1.5 2.5\",\n            key: \"10m8kw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 18h6\",\n            key: \"x1upvd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 22h4\",\n            key: \"ceow96\"\n        }\n    ]\n]);\nconst Lightbulb = createLucideIcon(\"Lightbulb\", [\n    [\n        \"path\",\n        {\n            d: \"M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5\",\n            key: \"1gvzjb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 18h6\",\n            key: \"x1upvd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 22h4\",\n            key: \"ceow96\"\n        }\n    ]\n]);\nconst LineChart = createLucideIcon(\"LineChart\", [\n    [\n        \"path\",\n        {\n            d: \"M3 3v18h18\",\n            key: \"1s2lah\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 9-5 5-4-4-3 3\",\n            key: \"2osh9i\"\n        }\n    ]\n]);\nconst Link2Off = createLucideIcon(\"Link2Off\", [\n    [\n        \"path\",\n        {\n            d: \"M9 17H7A5 5 0 0 1 7 7\",\n            key: \"10o201\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 7h2a5 5 0 0 1 4 8\",\n            key: \"1d3206\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"12\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"rvw6j4\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Link2 = createLucideIcon(\"Link2\", [\n    [\n        \"path\",\n        {\n            d: \"M9 17H7A5 5 0 0 1 7 7h2\",\n            key: \"8i5ue5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 7h2a5 5 0 1 1 0 10h-2\",\n            key: \"1b9ql8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"16\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1jonct\"\n        }\n    ]\n]);\nconst Link = createLucideIcon(\"Link\", [\n    [\n        \"path\",\n        {\n            d: \"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\",\n            key: \"1cjeqo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\",\n            key: \"19qd67\"\n        }\n    ]\n]);\nconst Linkedin = createLucideIcon(\"Linkedin\", [\n    [\n        \"path\",\n        {\n            d: \"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\",\n            key: \"c2jq9f\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"4\",\n            height: \"12\",\n            x: \"2\",\n            y: \"9\",\n            key: \"mk3on5\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"4\",\n            cy: \"4\",\n            r: \"2\",\n            key: \"bt5ra8\"\n        }\n    ]\n]);\nconst ListChecks = createLucideIcon(\"ListChecks\", [\n    [\n        \"path\",\n        {\n            d: \"m3 17 2 2 4-4\",\n            key: \"1jhpwq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 7 2 2 4-4\",\n            key: \"1obspn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 6h8\",\n            key: \"15sg57\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 12h8\",\n            key: \"h98zly\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 18h8\",\n            key: \"oe0vm4\"\n        }\n    ]\n]);\nconst ListEnd = createLucideIcon(\"ListEnd\", [\n    [\n        \"path\",\n        {\n            d: \"M16 12H3\",\n            key: \"1a2rj7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 6H3\",\n            key: \"1wxfjs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 18H3\",\n            key: \"13769t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 6v10a2 2 0 0 1-2 2h-5\",\n            key: \"ilrcs8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 16-2 2 2 2\",\n            key: \"kkc6pm\"\n        }\n    ]\n]);\nconst ListFilter = createLucideIcon(\"ListFilter\", [\n    [\n        \"path\",\n        {\n            d: \"M3 6h18\",\n            key: \"d0wm0j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 12h10\",\n            key: \"b7w52i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 18h4\",\n            key: \"1ulq68\"\n        }\n    ]\n]);\nconst ListMinus = createLucideIcon(\"ListMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M11 12H3\",\n            key: \"51ecnj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 6H3\",\n            key: \"1wxfjs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18H3\",\n            key: \"12xzn7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12h-6\",\n            key: \"bt1uis\"\n        }\n    ]\n]);\nconst ListMusic = createLucideIcon(\"ListMusic\", [\n    [\n        \"path\",\n        {\n            d: \"M21 15V6\",\n            key: \"h1cx4g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.5 18a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z\",\n            key: \"8saifv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12H3\",\n            key: \"18klou\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 6H3\",\n            key: \"1wxfjs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18H3\",\n            key: \"11ftsu\"\n        }\n    ]\n]);\nconst ListOrdered = createLucideIcon(\"ListOrdered\", [\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"21\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"76qw6h\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"21\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"16nom4\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"21\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"u3jurt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 6h1v4\",\n            key: \"cnovpq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 10h2\",\n            key: \"16xx2s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18H4c0-1 2-2 2-3s-1-1.5-2-1\",\n            key: \"m9a95d\"\n        }\n    ]\n]);\nconst ListPlus = createLucideIcon(\"ListPlus\", [\n    [\n        \"path\",\n        {\n            d: \"M11 12H3\",\n            key: \"51ecnj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 6H3\",\n            key: \"1wxfjs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18H3\",\n            key: \"12xzn7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 9v6\",\n            key: \"1twb98\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12h-6\",\n            key: \"bt1uis\"\n        }\n    ]\n]);\nconst ListRestart = createLucideIcon(\"ListRestart\", [\n    [\n        \"path\",\n        {\n            d: \"M21 6H3\",\n            key: \"1jwq7v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 12H3\",\n            key: \"13ou7f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 18H3\",\n            key: \"1sijw9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L11 14\",\n            key: \"qth677\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 10v4h4\",\n            key: \"172dkj\"\n        }\n    ]\n]);\nconst ListStart = createLucideIcon(\"ListStart\", [\n    [\n        \"path\",\n        {\n            d: \"M16 12H3\",\n            key: \"1a2rj7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18H3\",\n            key: \"12xzn7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 6H3\",\n            key: \"lf8lx7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 18V8a2 2 0 0 0-2-2h-5\",\n            key: \"1hghli\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 8-2-2 2-2\",\n            key: \"160uvd\"\n        }\n    ]\n]);\nconst ListTodo = createLucideIcon(\"ListTodo\", [\n    [\n        \"rect\",\n        {\n            x: \"3\",\n            y: \"5\",\n            width: \"6\",\n            height: \"6\",\n            rx: \"1\",\n            key: \"1defrl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 17 2 2 4-4\",\n            key: \"1jhpwq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 6h8\",\n            key: \"15sg57\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 12h8\",\n            key: \"h98zly\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 18h8\",\n            key: \"oe0vm4\"\n        }\n    ]\n]);\nconst ListTree = createLucideIcon(\"ListTree\", [\n    [\n        \"path\",\n        {\n            d: \"M21 12h-8\",\n            key: \"1bmf0i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 6H8\",\n            key: \"1pqkrb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 18h-8\",\n            key: \"1tm79t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 6v4c0 1.1.9 2 2 2h3\",\n            key: \"1ywdgy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 10v6c0 1.1.9 2 2 2h3\",\n            key: \"2wc746\"\n        }\n    ]\n]);\nconst ListVideo = createLucideIcon(\"ListVideo\", [\n    [\n        \"path\",\n        {\n            d: \"M12 12H3\",\n            key: \"18klou\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 6H3\",\n            key: \"1wxfjs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18H3\",\n            key: \"11ftsu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 12 5 3-5 3v-6Z\",\n            key: \"zpskkp\"\n        }\n    ]\n]);\nconst ListX = createLucideIcon(\"ListX\", [\n    [\n        \"path\",\n        {\n            d: \"M11 12H3\",\n            key: \"51ecnj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 6H3\",\n            key: \"1wxfjs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18H3\",\n            key: \"12xzn7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 10-4 4\",\n            key: \"1tz659\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 10 4 4\",\n            key: \"1n7nei\"\n        }\n    ]\n]);\nconst List = createLucideIcon(\"List\", [\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"21\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"7ey8pc\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"21\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"rjfblc\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"21\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"c3b1m8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"3.01\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"1g7gq3\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"3.01\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1pjlvk\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"3.01\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"28t2mc\"\n        }\n    ]\n]);\nconst Loader2 = createLucideIcon(\"Loader2\", [\n    [\n        \"path\",\n        {\n            d: \"M21 12a9 9 0 1 1-6.219-8.56\",\n            key: \"13zald\"\n        }\n    ]\n]);\nconst Loader = createLucideIcon(\"Loader\", [\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"gza1u7\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"18\",\n            y2: \"22\",\n            key: \"1qhbu9\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4.93\",\n            x2: \"7.76\",\n            y1: \"4.93\",\n            y2: \"7.76\",\n            key: \"xae44r\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16.24\",\n            x2: \"19.07\",\n            y1: \"16.24\",\n            y2: \"19.07\",\n            key: \"bxnmvf\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"6\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"89khin\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"22\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"pb8tfm\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4.93\",\n            x2: \"7.76\",\n            y1: \"19.07\",\n            y2: \"16.24\",\n            key: \"1uxjnu\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16.24\",\n            x2: \"19.07\",\n            y1: \"7.76\",\n            y2: \"4.93\",\n            key: \"6duxfx\"\n        }\n    ]\n]);\nconst LocateFixed = createLucideIcon(\"LocateFixed\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"5\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"bvdh0s\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"22\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1tbv5k\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"5\",\n            key: \"11lu5j\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"19\",\n            y2: \"22\",\n            key: \"x3vr5v\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"7\",\n            key: \"fim9np\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ]\n]);\nconst LocateOff = createLucideIcon(\"LocateOff\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"5\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"bvdh0s\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"22\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1tbv5k\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"5\",\n            key: \"11lu5j\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"19\",\n            y2: \"22\",\n            key: \"x3vr5v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.11 7.11C5.83 8.39 5 10.1 5 12c0 3.87 3.13 7 7 7 1.9 0 3.61-.83 4.89-2.11\",\n            key: \"1oh7ia\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.71 13.96c.19-.63.29-1.29.29-1.96 0-3.87-3.13-7-7-7-.67 0-1.33.1-1.96.29\",\n            key: \"3qdecy\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Locate = createLucideIcon(\"Locate\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"5\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"bvdh0s\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"22\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1tbv5k\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"5\",\n            key: \"11lu5j\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"19\",\n            y2: \"22\",\n            key: \"x3vr5v\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"7\",\n            key: \"fim9np\"\n        }\n    ]\n]);\nconst Lock = createLucideIcon(\"Lock\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"11\",\n            x: \"3\",\n            y: \"11\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1w4ew1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 11V7a5 5 0 0 1 10 0v4\",\n            key: \"fwvmzm\"\n        }\n    ]\n]);\nconst LogIn = createLucideIcon(\"LogIn\", [\n    [\n        \"path\",\n        {\n            d: \"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\",\n            key: \"u53s6r\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"10 17 15 12 10 7\",\n            key: \"1ail0h\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"3\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"v6grx8\"\n        }\n    ]\n]);\nconst LogOut = createLucideIcon(\"LogOut\", [\n    [\n        \"path\",\n        {\n            d: \"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\",\n            key: \"1uf3rs\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"16 17 21 12 16 7\",\n            key: \"1gabdz\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"9\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1uyos4\"\n        }\n    ]\n]);\nconst Lollipop = createLucideIcon(\"Lollipop\", [\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"11\",\n            r: \"8\",\n            key: \"4ej97u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 21-4.3-4.3\",\n            key: \"1qie3q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 11a2 2 0 0 0 4 0 4 4 0 0 0-8 0 6 6 0 0 0 12 0\",\n            key: \"107gwy\"\n        }\n    ]\n]);\nconst Luggage = createLucideIcon(\"Luggage\", [\n    [\n        \"path\",\n        {\n            d: \"M6 20h0a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h0\",\n            key: \"1h5fkc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 18V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v14\",\n            key: \"1l99gc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 20h4\",\n            key: \"ni2waw\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16\",\n            cy: \"20\",\n            r: \"2\",\n            key: \"1vifvg\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"20\",\n            r: \"2\",\n            key: \"ckkr5m\"\n        }\n    ]\n]);\nconst MSquare = createLucideIcon(\"MSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16V8l4 4 4-4v8\",\n            key: \"141u4e\"\n        }\n    ]\n]);\nconst Magnet = createLucideIcon(\"Magnet\", [\n    [\n        \"path\",\n        {\n            d: \"m6 15-4-4 6.75-6.77a7.79 7.79 0 0 1 11 11L13 22l-4-4 6.39-6.36a2.14 2.14 0 0 0-3-3L6 15\",\n            key: \"1i3lhw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 8 4 4\",\n            key: \"j6kj7e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 15 4 4\",\n            key: \"lnac28\"\n        }\n    ]\n]);\nconst MailCheck = createLucideIcon(\"MailCheck\", [\n    [\n        \"path\",\n        {\n            d: \"M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8\",\n            key: \"12jkf8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\",\n            key: \"1ocrg3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 19 2 2 4-4\",\n            key: \"1b14m6\"\n        }\n    ]\n]);\nconst MailMinus = createLucideIcon(\"MailMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M22 15V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8\",\n            key: \"fuxbkv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\",\n            key: \"1ocrg3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 19h6\",\n            key: \"xwg31i\"\n        }\n    ]\n]);\nconst MailOpen = createLucideIcon(\"MailOpen\", [\n    [\n        \"path\",\n        {\n            d: \"M21.2 8.4c.5.38.8.97.8 1.6v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V10a2 2 0 0 1 .8-1.6l8-6a2 2 0 0 1 2.4 0l8 6Z\",\n            key: \"1jhwl8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 10-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 10\",\n            key: \"1qfld7\"\n        }\n    ]\n]);\nconst MailPlus = createLucideIcon(\"MailPlus\", [\n    [\n        \"path\",\n        {\n            d: \"M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8\",\n            key: \"12jkf8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\",\n            key: \"1ocrg3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 16v6\",\n            key: \"tddt3s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 19h6\",\n            key: \"xwg31i\"\n        }\n    ]\n]);\nconst MailQuestion = createLucideIcon(\"MailQuestion\", [\n    [\n        \"path\",\n        {\n            d: \"M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5\",\n            key: \"e61zoh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\",\n            key: \"1ocrg3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 15.28c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2\",\n            key: \"7z9rxb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 22v.01\",\n            key: \"12bgn6\"\n        }\n    ]\n]);\nconst MailSearch = createLucideIcon(\"MailSearch\", [\n    [\n        \"path\",\n        {\n            d: \"M22 12.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h7.5\",\n            key: \"w80f2v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\",\n            key: \"1ocrg3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6v0Z\",\n            key: \"mgbru4\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"1xkwt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 22-1.5-1.5\",\n            key: \"1x83k4\"\n        }\n    ]\n]);\nconst MailWarning = createLucideIcon(\"MailWarning\", [\n    [\n        \"path\",\n        {\n            d: \"M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5\",\n            key: \"e61zoh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\",\n            key: \"1ocrg3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 14v4\",\n            key: \"1hm744\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 22v.01\",\n            key: \"12bgn6\"\n        }\n    ]\n]);\nconst MailX = createLucideIcon(\"MailX\", [\n    [\n        \"path\",\n        {\n            d: \"M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h9\",\n            key: \"1j9vog\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\",\n            key: \"1ocrg3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 17 4 4\",\n            key: \"1b3523\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 17-4 4\",\n            key: \"uinynz\"\n        }\n    ]\n]);\nconst Mail = createLucideIcon(\"Mail\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"16\",\n            x: \"2\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"18n3k1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\",\n            key: \"1ocrg3\"\n        }\n    ]\n]);\nconst Mailbox = createLucideIcon(\"Mailbox\", [\n    [\n        \"path\",\n        {\n            d: \"M22 17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.5C2 7 4 5 6.5 5H18c2.2 0 4 1.8 4 4v8Z\",\n            key: \"1lbycx\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"15,9 18,9 18,11\",\n            key: \"1pm9c0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.5 5C9 5 11 7 11 9.5V17a2 2 0 0 1-2 2v0\",\n            key: \"n6nfvi\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"7\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"1e2scm\"\n        }\n    ]\n]);\nconst Mails = createLucideIcon(\"Mails\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"13\",\n            x: \"6\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"1drq3f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 7-7.1 3.78c-.57.3-1.23.3-1.8 0L6 7\",\n            key: \"xn252p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 8v11c0 1.1.9 2 2 2h14\",\n            key: \"n13cji\"\n        }\n    ]\n]);\nconst MapPinOff = createLucideIcon(\"MapPinOff\", [\n    [\n        \"path\",\n        {\n            d: \"M5.43 5.43A8.06 8.06 0 0 0 4 10c0 6 8 12 8 12a29.94 29.94 0 0 0 5-5\",\n            key: \"12a8pk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.18 13.52A8.66 8.66 0 0 0 20 10a8 8 0 0 0-8-8 7.88 7.88 0 0 0-3.52.82\",\n            key: \"1r9f6y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.13 9.13A2.78 2.78 0 0 0 9 10a3 3 0 0 0 3 3 2.78 2.78 0 0 0 .87-.13\",\n            key: \"erynq7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.9 9.25a3 3 0 0 0-2.15-2.16\",\n            key: \"1hwwmx\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst MapPin = createLucideIcon(\"MapPin\", [\n    [\n        \"path\",\n        {\n            d: \"M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z\",\n            key: \"2oe9fu\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"10\",\n            r: \"3\",\n            key: \"ilqhr7\"\n        }\n    ]\n]);\nconst Map = createLucideIcon(\"Map\", [\n    [\n        \"polygon\",\n        {\n            points: \"3 6 9 3 15 6 21 3 21 18 15 21 9 18 3 21\",\n            key: \"ok2ie8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"9\",\n            y1: \"3\",\n            y2: \"18\",\n            key: \"w34qz5\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15\",\n            y1: \"6\",\n            y2: \"21\",\n            key: \"volv9a\"\n        }\n    ]\n]);\nconst Martini = createLucideIcon(\"Martini\", [\n    [\n        \"path\",\n        {\n            d: \"M8 22h8\",\n            key: \"rmew8v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 11v11\",\n            key: \"ur9y6a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 3-7 8-7-8Z\",\n            key: \"1sgpiw\"\n        }\n    ]\n]);\nconst Maximize2 = createLucideIcon(\"Maximize2\", [\n    [\n        \"polyline\",\n        {\n            points: \"15 3 21 3 21 9\",\n            key: \"mznyad\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"9 21 3 21 3 15\",\n            key: \"1avn1i\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"14\",\n            y1: \"3\",\n            y2: \"10\",\n            key: \"ota7mn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"10\",\n            y1: \"21\",\n            y2: \"14\",\n            key: \"1atl0r\"\n        }\n    ]\n]);\nconst Maximize = createLucideIcon(\"Maximize\", [\n    [\n        \"path\",\n        {\n            d: \"M8 3H5a2 2 0 0 0-2 2v3\",\n            key: \"1dcmit\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 8V5a2 2 0 0 0-2-2h-3\",\n            key: \"1e4gt3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 16v3a2 2 0 0 0 2 2h3\",\n            key: \"wsl5sc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 21h3a2 2 0 0 0 2-2v-3\",\n            key: \"18trek\"\n        }\n    ]\n]);\nconst Medal = createLucideIcon(\"Medal\", [\n    [\n        \"path\",\n        {\n            d: \"M7.21 15 2.66 7.14a2 2 0 0 1 .13-2.2L4.4 2.8A2 2 0 0 1 6 2h12a2 2 0 0 1 1.6.8l1.6 2.14a2 2 0 0 1 .14 2.2L16.79 15\",\n            key: \"143lza\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 12 5.12 2.2\",\n            key: \"qhuxz6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 12 5.88-9.8\",\n            key: \"hbye0f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 7h8\",\n            key: \"i86dvs\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"17\",\n            r: \"5\",\n            key: \"qbz8iq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18v-2h-.5\",\n            key: \"fawc4q\"\n        }\n    ]\n]);\nconst MegaphoneOff = createLucideIcon(\"MegaphoneOff\", [\n    [\n        \"path\",\n        {\n            d: \"M9.26 9.26 3 11v3l14.14 3.14\",\n            key: \"3429n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 15.34V6l-7.31 2.03\",\n            key: \"4o1dh8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.6 16.8a3 3 0 1 1-5.8-1.6\",\n            key: \"1yl0tm\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Megaphone = createLucideIcon(\"Megaphone\", [\n    [\n        \"path\",\n        {\n            d: \"m3 11 18-5v12L3 14v-3z\",\n            key: \"n962bs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.6 16.8a3 3 0 1 1-5.8-1.6\",\n            key: \"1yl0tm\"\n        }\n    ]\n]);\nconst Meh = createLucideIcon(\"Meh\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"16\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"1xb1d9\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"9.01\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"yxxnd0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15.01\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1p4y9e\"\n        }\n    ]\n]);\nconst MemoryStick = createLucideIcon(\"MemoryStick\", [\n    [\n        \"path\",\n        {\n            d: \"M6 19v-3\",\n            key: \"1nvgqn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 19v-3\",\n            key: \"iu8nkm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 19v-3\",\n            key: \"kcehxu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 19v-3\",\n            key: \"1vh91z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 11V9\",\n            key: \"63erz4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 11V9\",\n            key: \"fru6f3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 11V9\",\n            key: \"ha00sb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 15h20\",\n            key: \"16ne18\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 7a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1.1a2 2 0 0 0 0 3.837V17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-5.1a2 2 0 0 0 0-3.837Z\",\n            key: \"lhddv3\"\n        }\n    ]\n]);\nconst MenuSquare = createLucideIcon(\"MenuSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 8h10\",\n            key: \"1jw688\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 12h10\",\n            key: \"b7w52i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 16h10\",\n            key: \"wp8him\"\n        }\n    ]\n]);\nconst Menu = createLucideIcon(\"Menu\", [\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"20\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1e0a9i\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"20\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"1owob3\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"20\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"yk5zj1\"\n        }\n    ]\n]);\nconst Merge = createLucideIcon(\"Merge\", [\n    [\n        \"path\",\n        {\n            d: \"m8 6 4-4 4 4\",\n            key: \"ybng9g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v10.3a4 4 0 0 1-1.172 2.872L4 22\",\n            key: \"1hyw0i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20 22-5-5\",\n            key: \"1m27yz\"\n        }\n    ]\n]);\nconst MessageCircle = createLucideIcon(\"MessageCircle\", [\n    [\n        \"path\",\n        {\n            d: \"m3 21 1.9-5.7a8.5 8.5 0 1 1 3.8 3.8z\",\n            key: \"v2veuj\"\n        }\n    ]\n]);\nconst MessageSquareDashed = createLucideIcon(\"MessageSquareDashed\", [\n    [\n        \"path\",\n        {\n            d: \"M3 6V5c0-1.1.9-2 2-2h2\",\n            key: \"9usibi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 3h3\",\n            key: \"1c3ji7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 3h1c1.1 0 2 .9 2 2\",\n            key: \"19esxn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 9v2\",\n            key: \"p14lih\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 15c0 1.1-.9 2-2 2h-1\",\n            key: \"1fo1j8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 17h-3\",\n            key: \"1w4p2m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 17-4 4v-5\",\n            key: \"ph9x1h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12v-2\",\n            key: \"856n1q\"\n        }\n    ]\n]);\nconst MessageSquarePlus = createLucideIcon(\"MessageSquarePlus\", [\n    [\n        \"path\",\n        {\n            d: \"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\",\n            key: \"1lielz\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"15\",\n            y1: \"10\",\n            y2: \"10\",\n            key: \"1lj1wd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"7\",\n            y2: \"13\",\n            key: \"1cppfj\"\n        }\n    ]\n]);\nconst MessageSquare = createLucideIcon(\"MessageSquare\", [\n    [\n        \"path\",\n        {\n            d: \"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\",\n            key: \"1lielz\"\n        }\n    ]\n]);\nconst MessagesSquare = createLucideIcon(\"MessagesSquare\", [\n    [\n        \"path\",\n        {\n            d: \"M14 9a2 2 0 0 1-2 2H6l-4 4V4c0-1.1.9-2 2-2h8a2 2 0 0 1 2 2v5Z\",\n            key: \"16vlm8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 9h2a2 2 0 0 1 2 2v11l-4-4h-6a2 2 0 0 1-2-2v-1\",\n            key: \"1cx29u\"\n        }\n    ]\n]);\nconst Mic2 = createLucideIcon(\"Mic2\", [\n    [\n        \"path\",\n        {\n            d: \"m12 8-9.04 9.06a2.82 2.82 0 1 0 3.98 3.98L16 12\",\n            key: \"zoua8r\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17\",\n            cy: \"7\",\n            r: \"5\",\n            key: \"1fomce\"\n        }\n    ]\n]);\nconst MicOff = createLucideIcon(\"MicOff\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.89 13.23A7.12 7.12 0 0 0 19 12v-2\",\n            key: \"80xlxr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 10v2a7 7 0 0 0 12 5\",\n            key: \"p2k8kg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 9.34V5a3 3 0 0 0-5.68-1.33\",\n            key: \"1gzdoj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 9v3a3 3 0 0 0 5.12 2.12\",\n            key: \"r2i35w\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"19\",\n            y2: \"22\",\n            key: \"x3vr5v\"\n        }\n    ]\n]);\nconst Mic = createLucideIcon(\"Mic\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z\",\n            key: \"131961\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 10v2a7 7 0 0 1-14 0v-2\",\n            key: \"1vc78b\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"19\",\n            y2: \"22\",\n            key: \"x3vr5v\"\n        }\n    ]\n]);\nconst Microscope = createLucideIcon(\"Microscope\", [\n    [\n        \"path\",\n        {\n            d: \"M6 18h8\",\n            key: \"1borvv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 22h18\",\n            key: \"8prr45\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 22a7 7 0 1 0 0-14h-1\",\n            key: \"1jwaiy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 14h2\",\n            key: \"197e7h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 12a2 2 0 0 1-2-2V6h6v4a2 2 0 0 1-2 2Z\",\n            key: \"1bmzmy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 6V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3\",\n            key: \"1drr47\"\n        }\n    ]\n]);\nconst Microwave = createLucideIcon(\"Microwave\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"15\",\n            x: \"2\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"2no95f\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"7\",\n            x: \"6\",\n            y: \"8\",\n            rx: \"1\",\n            key: \"zh9wx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 8v7\",\n            key: \"o5zi4n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 19v2\",\n            key: \"1loha6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 19v2\",\n            key: \"1dawf0\"\n        }\n    ]\n]);\nconst Milestone = createLucideIcon(\"Milestone\", [\n    [\n        \"path\",\n        {\n            d: \"M18 6H5a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h13l4-3.5L18 6Z\",\n            key: \"1mp5s7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13v8\",\n            key: \"1l5pq0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 3v3\",\n            key: \"1n5kay\"\n        }\n    ]\n]);\nconst MilkOff = createLucideIcon(\"MilkOff\", [\n    [\n        \"path\",\n        {\n            d: \"M8 2h8\",\n            key: \"1ssgc1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 2v1.343M15 2v2.789a4 4 0 0 0 .672 2.219l.656.984a4 4 0 0 1 .672 2.22v1.131M7.8 7.8l-.128.192A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3\",\n            key: \"y0ejgx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 15a6.47 6.47 0 0 1 5 0 6.472 6.472 0 0 0 3.435.435\",\n            key: \"iaxqsy\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Milk = createLucideIcon(\"Milk\", [\n    [\n        \"path\",\n        {\n            d: \"M8 2h8\",\n            key: \"1ssgc1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 2v2.789a4 4 0 0 1-.672 2.219l-.656.984A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-9.789a4 4 0 0 0-.672-2.219l-.656-.984A4 4 0 0 1 15 4.788V2\",\n            key: \"qtp12x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 15a6.472 6.472 0 0 1 5 0 6.47 6.47 0 0 0 5 0\",\n            key: \"ygeh44\"\n        }\n    ]\n]);\nconst Minimize2 = createLucideIcon(\"Minimize2\", [\n    [\n        \"polyline\",\n        {\n            points: \"4 14 10 14 10 20\",\n            key: \"11kfnr\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"20 10 14 10 14 4\",\n            key: \"rlmsce\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"21\",\n            y1: \"10\",\n            y2: \"3\",\n            key: \"o5lafz\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"10\",\n            y1: \"21\",\n            y2: \"14\",\n            key: \"1atl0r\"\n        }\n    ]\n]);\nconst Minimize = createLucideIcon(\"Minimize\", [\n    [\n        \"path\",\n        {\n            d: \"M8 3v3a2 2 0 0 1-2 2H3\",\n            key: \"hohbtr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 8h-3a2 2 0 0 1-2-2V3\",\n            key: \"5jw1f3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 16h3a2 2 0 0 1 2 2v3\",\n            key: \"198tvr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 21v-3a2 2 0 0 1 2-2h3\",\n            key: \"ph8mxp\"\n        }\n    ]\n]);\nconst MinusCircle = createLucideIcon(\"MinusCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ]\n]);\nconst MinusSquare = createLucideIcon(\"MinusSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ]\n]);\nconst Minus = createLucideIcon(\"Minus\", [\n    [\n        \"path\",\n        {\n            d: \"M5 12h14\",\n            key: \"1ays0h\"\n        }\n    ]\n]);\nconst MonitorCheck = createLucideIcon(\"MonitorCheck\", [\n    [\n        \"path\",\n        {\n            d: \"m9 10 2 2 4-4\",\n            key: \"1gnqz4\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"48i651\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ]\n]);\nconst MonitorDot = createLucideIcon(\"MonitorDot\", [\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"108a5v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12v3a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h9\",\n            key: \"1fet9y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ]\n]);\nconst MonitorDown = createLucideIcon(\"MonitorDown\", [\n    [\n        \"path\",\n        {\n            d: \"M12 13V7\",\n            key: \"h0r20n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 10-3 3-3-3\",\n            key: \"lzhmyn\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"48i651\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ]\n]);\nconst MonitorOff = createLucideIcon(\"MonitorOff\", [\n    [\n        \"path\",\n        {\n            d: \"M17 17H4a2 2 0 0 1-2-2V5c0-1.5 1-2 1-2\",\n            key: \"k0q8oc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 15V5a2 2 0 0 0-2-2H9\",\n            key: \"cp1ac0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ]\n]);\nconst MonitorPause = createLucideIcon(\"MonitorPause\", [\n    [\n        \"path\",\n        {\n            d: \"M10 13V7\",\n            key: \"1u13u9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 13V7\",\n            key: \"1vj9om\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"48i651\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ]\n]);\nconst MonitorPlay = createLucideIcon(\"MonitorPlay\", [\n    [\n        \"path\",\n        {\n            d: \"m10 7 5 3-5 3Z\",\n            key: \"29ljg6\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"48i651\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ]\n]);\nconst MonitorSmartphone = createLucideIcon(\"MonitorSmartphone\", [\n    [\n        \"path\",\n        {\n            d: \"M18 8V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h8\",\n            key: \"10dyio\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 19v-3.96 3.15\",\n            key: \"1irgej\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 19h5\",\n            key: \"qswx4l\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"10\",\n            x: \"16\",\n            y: \"12\",\n            rx: \"2\",\n            key: \"1egngj\"\n        }\n    ]\n]);\nconst MonitorSpeaker = createLucideIcon(\"MonitorSpeaker\", [\n    [\n        \"path\",\n        {\n            d: \"M5.5 20H8\",\n            key: \"1k40s5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 9h.01\",\n            key: \"1j24nn\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"16\",\n            x: \"12\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"ixliua\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4\",\n            key: \"1mp6e1\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17\",\n            cy: \"15\",\n            r: \"1\",\n            key: \"tqvash\"\n        }\n    ]\n]);\nconst MonitorStop = createLucideIcon(\"MonitorStop\", [\n    [\n        \"rect\",\n        {\n            x: \"9\",\n            y: \"7\",\n            width: \"6\",\n            height: \"6\",\n            key: \"4xvc6r\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"48i651\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ]\n]);\nconst MonitorUp = createLucideIcon(\"MonitorUp\", [\n    [\n        \"path\",\n        {\n            d: \"m9 10 3-3 3 3\",\n            key: \"11gsxs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13V7\",\n            key: \"h0r20n\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"48i651\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ]\n]);\nconst MonitorX = createLucideIcon(\"MonitorX\", [\n    [\n        \"path\",\n        {\n            d: \"m14.5 12.5-5-5\",\n            key: \"1jahn5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.5 12.5 5-5\",\n            key: \"1k2t7b\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"48i651\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ]\n]);\nconst Monitor = createLucideIcon(\"Monitor\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"48i651\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"16\",\n            y1: \"21\",\n            y2: \"21\",\n            key: \"1svkeh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"17\",\n            y2: \"21\",\n            key: \"vw1qmm\"\n        }\n    ]\n]);\nconst MoonStar = createLucideIcon(\"MoonStar\", [\n    [\n        \"path\",\n        {\n            d: \"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\",\n            key: \"a7tn18\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 3v4\",\n            key: \"vgv24u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 5h-4\",\n            key: \"1wcg1f\"\n        }\n    ]\n]);\nconst Moon = createLucideIcon(\"Moon\", [\n    [\n        \"path\",\n        {\n            d: \"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\",\n            key: \"a7tn18\"\n        }\n    ]\n]);\nconst MoreHorizontal = createLucideIcon(\"MoreHorizontal\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"41hilf\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"1wjl8i\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"1pcz8c\"\n        }\n    ]\n]);\nconst MoreVertical = createLucideIcon(\"MoreVertical\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"41hilf\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"5\",\n            r: \"1\",\n            key: \"gxeob9\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"19\",\n            r: \"1\",\n            key: \"lyex9k\"\n        }\n    ]\n]);\nconst MountainSnow = createLucideIcon(\"MountainSnow\", [\n    [\n        \"path\",\n        {\n            d: \"m8 3 4 8 5-5 5 15H2L8 3z\",\n            key: \"otkl63\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.14 15.08c2.62-1.57 5.24-1.43 7.86.42 2.74 1.94 5.49 2 8.23.19\",\n            key: \"1pvmmp\"\n        }\n    ]\n]);\nconst Mountain = createLucideIcon(\"Mountain\", [\n    [\n        \"path\",\n        {\n            d: \"m8 3 4 8 5-5 5 15H2L8 3z\",\n            key: \"otkl63\"\n        }\n    ]\n]);\nconst MousePointer2 = createLucideIcon(\"MousePointer2\", [\n    [\n        \"path\",\n        {\n            d: \"m4 4 7.07 17 2.51-7.39L21 11.07z\",\n            key: \"1vqm48\"\n        }\n    ]\n]);\nconst MousePointerClick = createLucideIcon(\"MousePointerClick\", [\n    [\n        \"path\",\n        {\n            d: \"m9 9 5 12 1.774-5.226L21 14 9 9z\",\n            key: \"1qd44z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.071 16.071 4.243 4.243\",\n            key: \"wfhsjb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.188 2.239.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656-2.12 2.122\",\n            key: \"1bk8fz\"\n        }\n    ]\n]);\nconst MousePointerSquareDashed = createLucideIcon(\"MousePointerSquareDashed\", [\n    [\n        \"path\",\n        {\n            d: \"M5 3a2 2 0 0 0-2 2\",\n            key: \"y57alp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 3a2 2 0 0 1 2 2\",\n            key: \"18rm91\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 12 4 10 1.7-4.3L22 16Z\",\n            key: \"64ilsv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 21a2 2 0 0 1-2-2\",\n            key: \"sbafld\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 3h1\",\n            key: \"1yesri\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 21h2\",\n            key: \"1qve2z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 3h1\",\n            key: \"1ec4yj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 9v1\",\n            key: \"1r0deq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 9v2\",\n            key: \"p14lih\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 14v1\",\n            key: \"vnatye\"\n        }\n    ]\n]);\nconst MousePointerSquare = createLucideIcon(\"MousePointerSquare\", [\n    [\n        \"path\",\n        {\n            d: \"M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6\",\n            key: \"14rsvq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 12 4 10 1.7-4.3L22 16Z\",\n            key: \"64ilsv\"\n        }\n    ]\n]);\nconst MousePointer = createLucideIcon(\"MousePointer\", [\n    [\n        \"path\",\n        {\n            d: \"m3 3 7.07 16.97 2.51-7.39 7.39-2.51L3 3z\",\n            key: \"y2ucgo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 13 6 6\",\n            key: \"1nhxnf\"\n        }\n    ]\n]);\nconst Mouse = createLucideIcon(\"Mouse\", [\n    [\n        \"rect\",\n        {\n            x: \"5\",\n            y: \"2\",\n            width: \"14\",\n            height: \"20\",\n            rx: \"7\",\n            key: \"11ol66\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 6v4\",\n            key: \"16clxf\"\n        }\n    ]\n]);\nconst Move3d = createLucideIcon(\"Move3d\", [\n    [\n        \"path\",\n        {\n            d: \"M5 3v16h16\",\n            key: \"1mqmf9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 19 6-6\",\n            key: \"jh6hbb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 6 3-3 3 3\",\n            key: \"tkyvxa\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 16 3 3-3 3\",\n            key: \"1d4glt\"\n        }\n    ]\n]);\nconst MoveDiagonal2 = createLucideIcon(\"MoveDiagonal2\", [\n    [\n        \"polyline\",\n        {\n            points: \"5 11 5 5 11 5\",\n            key: \"ncfzxk\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"19 13 19 19 13 19\",\n            key: \"1mk7hk\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"5\",\n            x2: \"19\",\n            y1: \"5\",\n            y2: \"19\",\n            key: \"mcyte3\"\n        }\n    ]\n]);\nconst MoveDiagonal = createLucideIcon(\"MoveDiagonal\", [\n    [\n        \"polyline\",\n        {\n            points: \"13 5 19 5 19 11\",\n            key: \"11219e\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"11 19 5 19 5 13\",\n            key: \"sfq3wq\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"5\",\n            y1: \"5\",\n            y2: \"19\",\n            key: \"1x9vlm\"\n        }\n    ]\n]);\nconst MoveDownLeft = createLucideIcon(\"MoveDownLeft\", [\n    [\n        \"path\",\n        {\n            d: \"M11 19H5V13\",\n            key: \"1akmht\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 5L5 19\",\n            key: \"72u4yj\"\n        }\n    ]\n]);\nconst MoveDownRight = createLucideIcon(\"MoveDownRight\", [\n    [\n        \"path\",\n        {\n            d: \"M19 13V19H13\",\n            key: \"10vkzq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 5L19 19\",\n            key: \"5zm2fv\"\n        }\n    ]\n]);\nconst MoveDown = createLucideIcon(\"MoveDown\", [\n    [\n        \"path\",\n        {\n            d: \"M8 18L12 22L16 18\",\n            key: \"cskvfv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2V22\",\n            key: \"r89rzk\"\n        }\n    ]\n]);\nconst MoveHorizontal = createLucideIcon(\"MoveHorizontal\", [\n    [\n        \"polyline\",\n        {\n            points: \"18 8 22 12 18 16\",\n            key: \"1hqrds\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"6 8 2 12 6 16\",\n            key: \"f0ernq\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1dnqot\"\n        }\n    ]\n]);\nconst MoveLeft = createLucideIcon(\"MoveLeft\", [\n    [\n        \"path\",\n        {\n            d: \"M6 8L2 12L6 16\",\n            key: \"kyvwex\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12H22\",\n            key: \"1m8cig\"\n        }\n    ]\n]);\nconst MoveRight = createLucideIcon(\"MoveRight\", [\n    [\n        \"path\",\n        {\n            d: \"M18 8L22 12L18 16\",\n            key: \"1r0oui\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12H22\",\n            key: \"1m8cig\"\n        }\n    ]\n]);\nconst MoveUpLeft = createLucideIcon(\"MoveUpLeft\", [\n    [\n        \"path\",\n        {\n            d: \"M5 11V5H11\",\n            key: \"3q78g9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 5L19 19\",\n            key: \"5zm2fv\"\n        }\n    ]\n]);\nconst MoveUpRight = createLucideIcon(\"MoveUpRight\", [\n    [\n        \"path\",\n        {\n            d: \"M13 5H19V11\",\n            key: \"1n1gyv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 5L5 19\",\n            key: \"72u4yj\"\n        }\n    ]\n]);\nconst MoveUp = createLucideIcon(\"MoveUp\", [\n    [\n        \"path\",\n        {\n            d: \"M8 6L12 2L16 6\",\n            key: \"1yvkyx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2V22\",\n            key: \"r89rzk\"\n        }\n    ]\n]);\nconst MoveVertical = createLucideIcon(\"MoveVertical\", [\n    [\n        \"polyline\",\n        {\n            points: \"8 18 12 22 16 18\",\n            key: \"1uutw3\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"8 6 12 2 16 6\",\n            key: \"d60sxy\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"7eqyqh\"\n        }\n    ]\n]);\nconst Move = createLucideIcon(\"Move\", [\n    [\n        \"polyline\",\n        {\n            points: \"5 9 2 12 5 15\",\n            key: \"1r5uj5\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"9 5 12 2 15 5\",\n            key: \"5v383o\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"15 19 12 22 9 19\",\n            key: \"g7qi8m\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"19 9 22 12 19 15\",\n            key: \"tpp73q\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1dnqot\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"7eqyqh\"\n        }\n    ]\n]);\nconst Music2 = createLucideIcon(\"Music2\", [\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"18\",\n            r: \"4\",\n            key: \"1fc0mg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18V2l7 4\",\n            key: \"g04rme\"\n        }\n    ]\n]);\nconst Music3 = createLucideIcon(\"Music3\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"18\",\n            r: \"4\",\n            key: \"m3r9ws\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18V2\",\n            key: \"40x2m5\"\n        }\n    ]\n]);\nconst Music4 = createLucideIcon(\"Music4\", [\n    [\n        \"path\",\n        {\n            d: \"M9 18V5l12-2v13\",\n            key: \"1jmyc2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 9 12-2\",\n            key: \"1e64n2\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"fqmcym\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"16\",\n            r: \"3\",\n            key: \"1hluhg\"\n        }\n    ]\n]);\nconst Music = createLucideIcon(\"Music\", [\n    [\n        \"path\",\n        {\n            d: \"M9 18V5l12-2v13\",\n            key: \"1jmyc2\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"fqmcym\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"16\",\n            r: \"3\",\n            key: \"1hluhg\"\n        }\n    ]\n]);\nconst Navigation2Off = createLucideIcon(\"Navigation2Off\", [\n    [\n        \"path\",\n        {\n            d: \"M9.31 9.31 5 21l7-4 7 4-1.17-3.17\",\n            key: \"qoq2o2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.53 8.88 12 2l-1.17 3.17\",\n            key: \"k3sjzy\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Navigation2 = createLucideIcon(\"Navigation2\", [\n    [\n        \"polygon\",\n        {\n            points: \"12 2 19 21 12 17 5 21 12 2\",\n            key: \"x8c0qg\"\n        }\n    ]\n]);\nconst NavigationOff = createLucideIcon(\"NavigationOff\", [\n    [\n        \"path\",\n        {\n            d: \"M8.43 8.43 3 11l8 2 2 8 2.57-5.43\",\n            key: \"1vdtb7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.39 11.73 22 2l-9.73 4.61\",\n            key: \"tya3r6\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Navigation = createLucideIcon(\"Navigation\", [\n    [\n        \"polygon\",\n        {\n            points: \"3 11 22 2 13 21 11 13 3 11\",\n            key: \"1ltx0t\"\n        }\n    ]\n]);\nconst Network = createLucideIcon(\"Network\", [\n    [\n        \"rect\",\n        {\n            x: \"16\",\n            y: \"16\",\n            width: \"6\",\n            height: \"6\",\n            rx: \"1\",\n            key: \"4q2zg0\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"2\",\n            y: \"16\",\n            width: \"6\",\n            height: \"6\",\n            rx: \"1\",\n            key: \"8cvhb9\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"9\",\n            y: \"2\",\n            width: \"6\",\n            height: \"6\",\n            rx: \"1\",\n            key: \"1egb70\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3\",\n            key: \"1jsf9p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12V8\",\n            key: \"2874zd\"\n        }\n    ]\n]);\nconst Newspaper = createLucideIcon(\"Newspaper\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22h16a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16a2 2 0 0 1-2 2Zm0 0a2 2 0 0 1-2-2v-9c0-1.1.9-2 2-2h2\",\n            key: \"7pis2x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 14h-8\",\n            key: \"sponae\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 18h-5\",\n            key: \"95g1m2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 6h8v4h-8V6Z\",\n            key: \"smlsk5\"\n        }\n    ]\n]);\nconst Nfc = createLucideIcon(\"Nfc\", [\n    [\n        \"path\",\n        {\n            d: \"M6 8.32a7.43 7.43 0 0 1 0 7.36\",\n            key: \"9iaqei\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.46 6.21a11.76 11.76 0 0 1 0 11.58\",\n            key: \"1yha7l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12.91 4.1a15.91 15.91 0 0 1 .01 15.8\",\n            key: \"4iu2gk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.37 2a20.16 20.16 0 0 1 0 20\",\n            key: \"sap9u2\"\n        }\n    ]\n]);\nconst NutOff = createLucideIcon(\"NutOff\", [\n    [\n        \"path\",\n        {\n            d: \"M12 4V2\",\n            key: \"1k5q1u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592a7.01 7.01 0 0 0 4.125-2.939\",\n            key: \"1xcvy9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 10v3.343\",\n            key: \"163tfc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12c-1.349-.573-1.905-1.005-2.5-2-.546.902-1.048 1.353-2.5 2-1.018-.644-1.46-1.08-2-2-1.028.71-1.69.918-3 1 1.081-1.048 1.757-2.03 2-3 .194-.776.84-1.551 1.79-2.21m11.654 5.997c.887-.457 1.28-.891 1.556-1.787 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4-.74 0-1.461.068-2.15.192\",\n            key: \"17914v\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Nut = createLucideIcon(\"Nut\", [\n    [\n        \"path\",\n        {\n            d: \"M12 4V2\",\n            key: \"1k5q1u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592A7.003 7.003 0 0 0 19 14v-4\",\n            key: \"1tgyif\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 4C8 4 4.5 6 4 8c-.243.97-.919 1.952-2 3 1.31-.082 1.972-.29 3-1 .54.92.982 1.356 2 2 1.452-.647 1.954-1.098 2.5-2 .595.995 1.151 1.427 2.5 2 1.31-.621 1.862-1.058 2.5-2 .629.977 1.162 1.423 2.5 2 1.209-.548 1.68-.967 2-2 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4Z\",\n            key: \"tnsqj\"\n        }\n    ]\n]);\nconst Octagon = createLucideIcon(\"Octagon\", [\n    [\n        \"polygon\",\n        {\n            points: \"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\",\n            key: \"h1p8hx\"\n        }\n    ]\n]);\nconst Option = createLucideIcon(\"Option\", [\n    [\n        \"path\",\n        {\n            d: \"M3 3h6l6 18h6\",\n            key: \"ph9rgk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 3h7\",\n            key: \"16f0ms\"\n        }\n    ]\n]);\nconst Orbit = createLucideIcon(\"Orbit\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"5\",\n            r: \"2\",\n            key: \"mhkx31\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"19\",\n            r: \"2\",\n            key: \"v8kfzx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.4 21.9a10 10 0 0 0 9.941-15.416\",\n            key: \"eohfx2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.5 2.1a10 10 0 0 0-9.841 15.416\",\n            key: \"19pvbm\"\n        }\n    ]\n]);\nconst Outdent = createLucideIcon(\"Outdent\", [\n    [\n        \"polyline\",\n        {\n            points: \"7 8 3 12 7 16\",\n            key: \"2j60jr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"11\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1fxxak\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"11\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"asgu94\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"11\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"13dsj7\"\n        }\n    ]\n]);\nconst Package2 = createLucideIcon(\"Package2\", [\n    [\n        \"path\",\n        {\n            d: \"M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z\",\n            key: \"1ront0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9\",\n            key: \"19h2x1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 3v6\",\n            key: \"1holv5\"\n        }\n    ]\n]);\nconst PackageCheck = createLucideIcon(\"PackageCheck\", [\n    [\n        \"path\",\n        {\n            d: \"m16 16 2 2 4-4\",\n            key: \"gfu2re\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14\",\n            key: \"e7tb2h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.5 4.27 9 5.15\",\n            key: \"1c824w\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"3.29 7 12 12 20.71 7\",\n            key: \"ousv84\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22\",\n            y2: \"12\",\n            key: \"a4e8g8\"\n        }\n    ]\n]);\nconst PackageMinus = createLucideIcon(\"PackageMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M16 16h6\",\n            key: \"100bgy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14\",\n            key: \"e7tb2h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.5 4.27 9 5.15\",\n            key: \"1c824w\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"3.29 7 12 12 20.71 7\",\n            key: \"ousv84\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22\",\n            y2: \"12\",\n            key: \"a4e8g8\"\n        }\n    ]\n]);\nconst PackageOpen = createLucideIcon(\"PackageOpen\", [\n    [\n        \"path\",\n        {\n            d: \"M20.91 8.84 8.56 2.23a1.93 1.93 0 0 0-1.81 0L3.1 4.13a2.12 2.12 0 0 0-.05 3.69l12.22 6.93a2 2 0 0 0 1.94 0L21 12.51a2.12 2.12 0 0 0-.09-3.67Z\",\n            key: \"1vy178\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.09 8.84 12.35-6.61a1.93 1.93 0 0 1 1.81 0l3.65 1.9a2.12 2.12 0 0 1 .1 3.69L8.73 14.75a2 2 0 0 1-1.94 0L3 12.51a2.12 2.12 0 0 1 .09-3.67Z\",\n            key: \"s3bv25\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22\",\n            y2: \"13\",\n            key: \"1o4xyi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 13.5v3.37a2.06 2.06 0 0 1-1.11 1.83l-6 3.08a1.93 1.93 0 0 1-1.78 0l-6-3.08A2.06 2.06 0 0 1 4 16.87V13.5\",\n            key: \"1na2nq\"\n        }\n    ]\n]);\nconst PackagePlus = createLucideIcon(\"PackagePlus\", [\n    [\n        \"path\",\n        {\n            d: \"M16 16h6\",\n            key: \"100bgy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 13v6\",\n            key: \"85cyf1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14\",\n            key: \"e7tb2h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.5 4.27 9 5.15\",\n            key: \"1c824w\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"3.29 7 12 12 20.71 7\",\n            key: \"ousv84\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22\",\n            y2: \"12\",\n            key: \"a4e8g8\"\n        }\n    ]\n]);\nconst PackageSearch = createLucideIcon(\"PackageSearch\", [\n    [\n        \"path\",\n        {\n            d: \"M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14\",\n            key: \"e7tb2h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.5 4.27 9 5.15\",\n            key: \"1c824w\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"3.29 7 12 12 20.71 7\",\n            key: \"ousv84\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22\",\n            y2: \"12\",\n            key: \"a4e8g8\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18.5\",\n            cy: \"15.5\",\n            r: \"2.5\",\n            key: \"b5zd12\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.27 17.27 22 19\",\n            key: \"1l4muz\"\n        }\n    ]\n]);\nconst PackageX = createLucideIcon(\"PackageX\", [\n    [\n        \"path\",\n        {\n            d: \"M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14\",\n            key: \"e7tb2h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.5 4.27 9 5.15\",\n            key: \"1c824w\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"3.29 7 12 12 20.71 7\",\n            key: \"ousv84\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"22\",\n            y2: \"12\",\n            key: \"a4e8g8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 13 5 5m-5 0 5-5\",\n            key: \"im3w4b\"\n        }\n    ]\n]);\nconst Package = createLucideIcon(\"Package\", [\n    [\n        \"path\",\n        {\n            d: \"m7.5 4.27 9 5.15\",\n            key: \"1c824w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z\",\n            key: \"hh9hay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.3 7 8.7 5 8.7-5\",\n            key: \"g66t2b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22V12\",\n            key: \"d0xqtd\"\n        }\n    ]\n]);\nconst PaintBucket = createLucideIcon(\"PaintBucket\", [\n    [\n        \"path\",\n        {\n            d: \"m19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z\",\n            key: \"irua1i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 2 5 5\",\n            key: \"1lls2c\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 13h15\",\n            key: \"1hkzvu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z\",\n            key: \"xk76lq\"\n        }\n    ]\n]);\nconst Paintbrush2 = createLucideIcon(\"Paintbrush2\", [\n    [\n        \"path\",\n        {\n            d: \"M14 19.9V16h3a2 2 0 0 0 2-2v-2H5v2c0 1.1.9 2 2 2h3v3.9a2 2 0 1 0 4 0Z\",\n            key: \"1c8kta\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12V2h12v10\",\n            key: \"1esbnf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 2v4\",\n            key: \"qmzblu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 2v2\",\n            key: \"7u0qdc\"\n        }\n    ]\n]);\nconst Paintbrush = createLucideIcon(\"Paintbrush\", [\n    [\n        \"path\",\n        {\n            d: \"M18.37 2.63 14 7l-1.59-1.59a2 2 0 0 0-2.82 0L8 7l9 9 1.59-1.59a2 2 0 0 0 0-2.82L17 10l4.37-4.37a2.12 2.12 0 1 0-3-3Z\",\n            key: \"m6k5sh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 8c-2 3-4 3.5-7 4l8 10c2-1 6-5 6-7\",\n            key: \"arzq70\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.5 17.5 4.5 15\",\n            key: \"s7fvrz\"\n        }\n    ]\n]);\nconst Palette = createLucideIcon(\"Palette\", [\n    [\n        \"circle\",\n        {\n            cx: \"13.5\",\n            cy: \"6.5\",\n            r: \".5\",\n            key: \"1xcu5\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17.5\",\n            cy: \"10.5\",\n            r: \".5\",\n            key: \"736e4u\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8.5\",\n            cy: \"7.5\",\n            r: \".5\",\n            key: \"clrty\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6.5\",\n            cy: \"12.5\",\n            r: \".5\",\n            key: \"1s4xz9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z\",\n            key: \"12rzf8\"\n        }\n    ]\n]);\nconst Palmtree = createLucideIcon(\"Palmtree\", [\n    [\n        \"path\",\n        {\n            d: \"M13 8c0-2.76-2.46-5-5.5-5S2 5.24 2 8h2l1-1 1 1h4\",\n            key: \"foxbe7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 7.14A5.82 5.82 0 0 1 16.5 6c3.04 0 5.5 2.24 5.5 5h-3l-1-1-1 1h-3\",\n            key: \"18arnh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.89 9.71c-2.15 2.15-2.3 5.47-.35 7.43l4.24-4.25.7-.7.71-.71 2.12-2.12c-1.95-1.96-5.27-1.8-7.42.35z\",\n            key: \"epoumf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 15.5c.5 2.5-.17 4.5-1 6.5h4c2-5.5-.5-12-1-14\",\n            key: \"ft0feo\"\n        }\n    ]\n]);\nconst PanelBottomClose = createLucideIcon(\"PanelBottomClose\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"o2sbyz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 8-3 3-3-3\",\n            key: \"1oxy1z\"\n        }\n    ]\n]);\nconst PanelBottomInactive = createLucideIcon(\"PanelBottomInactive\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 15h1\",\n            key: \"171nev\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 15h2\",\n            key: \"1vnucp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 15h2\",\n            key: \"8bym0q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 15h1\",\n            key: \"1tg3ks\"\n        }\n    ]\n]);\nconst PanelBottomOpen = createLucideIcon(\"PanelBottomOpen\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"o2sbyz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 10 3-3 3 3\",\n            key: \"11gsxs\"\n        }\n    ]\n]);\nconst PanelBottom = createLucideIcon(\"PanelBottom\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"o2sbyz\"\n        }\n    ]\n]);\nconst PanelLeftClose = createLucideIcon(\"PanelLeftClose\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 3v18\",\n            key: \"fh3hqa\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 15-3-3 3-3\",\n            key: \"14y99z\"\n        }\n    ]\n]);\nconst PanelLeftInactive = createLucideIcon(\"PanelLeftInactive\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 14v1\",\n            key: \"askpd8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 19v2\",\n            key: \"16tejx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 3v2\",\n            key: \"1noubl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 9v1\",\n            key: \"19ebxg\"\n        }\n    ]\n]);\nconst PanelLeftOpen = createLucideIcon(\"PanelLeftOpen\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 3v18\",\n            key: \"fh3hqa\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 9 3 3-3 3\",\n            key: \"8010ee\"\n        }\n    ]\n]);\nconst PanelLeft = createLucideIcon(\"PanelLeft\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"9\",\n            y1: \"3\",\n            y2: \"21\",\n            key: \"13tij5\"\n        }\n    ]\n]);\nconst PanelRightClose = createLucideIcon(\"PanelRightClose\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15\",\n            y1: \"3\",\n            y2: \"21\",\n            key: \"1hpv9i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 9 3 3-3 3\",\n            key: \"12hl5m\"\n        }\n    ]\n]);\nconst PanelRightInactive = createLucideIcon(\"PanelRightInactive\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 14v1\",\n            key: \"ilsfch\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 19v2\",\n            key: \"1fst2f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 3v2\",\n            key: \"z204g4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 9v1\",\n            key: \"z2a8b1\"\n        }\n    ]\n]);\nconst PanelRightOpen = createLucideIcon(\"PanelRightOpen\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15\",\n            y1: \"3\",\n            y2: \"21\",\n            key: \"1hpv9i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 15-3-3 3-3\",\n            key: \"1pgupc\"\n        }\n    ]\n]);\nconst PanelRight = createLucideIcon(\"PanelRight\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15\",\n            y1: \"3\",\n            y2: \"21\",\n            key: \"1hpv9i\"\n        }\n    ]\n]);\nconst PanelTopClose = createLucideIcon(\"PanelTopClose\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1vqk6q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 16 3-3 3 3\",\n            key: \"1idcnm\"\n        }\n    ]\n]);\nconst PanelTopInactive = createLucideIcon(\"PanelTopInactive\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 9h1\",\n            key: \"l0svgy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 9h2\",\n            key: \"te2zfg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 9h2\",\n            key: \"1h4ldw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 9h1\",\n            key: \"15jzuz\"\n        }\n    ]\n]);\nconst PanelTopOpen = createLucideIcon(\"PanelTopOpen\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1vqk6q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 14-3 3-3-3\",\n            key: \"g215vf\"\n        }\n    ]\n]);\nconst PanelTop = createLucideIcon(\"PanelTop\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1vqk6q\"\n        }\n    ]\n]);\nconst Paperclip = createLucideIcon(\"Paperclip\", [\n    [\n        \"path\",\n        {\n            d: \"m21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l8.57-8.57A4 4 0 1 1 18 8.84l-8.59 8.57a2 2 0 0 1-2.83-2.83l8.49-8.48\",\n            key: \"1u3ebp\"\n        }\n    ]\n]);\nconst Parentheses = createLucideIcon(\"Parentheses\", [\n    [\n        \"path\",\n        {\n            d: \"M8 21s-4-3-4-9 4-9 4-9\",\n            key: \"uto9ud\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 3s4 3 4 9-4 9-4 9\",\n            key: \"4w2vsq\"\n        }\n    ]\n]);\nconst ParkingCircleOff = createLucideIcon(\"ParkingCircleOff\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 5 14 14\",\n            key: \"11anup\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 13a3 3 0 1 0 0-6H9v2\",\n            key: \"uoagbd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 17v-2.34\",\n            key: \"a9qo08\"\n        }\n    ]\n]);\nconst ParkingCircle = createLucideIcon(\"ParkingCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 17V7h4a3 3 0 0 1 0 6H9\",\n            key: \"1dfk2c\"\n        }\n    ]\n]);\nconst ParkingMeter = createLucideIcon(\"ParkingMeter\", [\n    [\n        \"path\",\n        {\n            d: \"M9 9a3 3 0 1 1 6 0\",\n            key: \"jdoeu8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v3\",\n            key: \"158kv8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 15h2\",\n            key: \"199qp6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 9a7 7 0 1 0-13.6 2.3C6.4 14.4 8 19 8 19h8s1.6-4.6 2.6-7.7c.3-.8.4-1.5.4-2.3\",\n            key: \"1l50wn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 19v3\",\n            key: \"npa21l\"\n        }\n    ]\n]);\nconst ParkingSquareOff = createLucideIcon(\"ParkingSquareOff\", [\n    [\n        \"path\",\n        {\n            d: \"M3.6 3.6A2 2 0 0 1 5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-.59 1.41\",\n            key: \"9l1ft6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 8.7V19a2 2 0 0 0 2 2h10.3\",\n            key: \"17knke\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 13a3 3 0 1 0 0-6H9v2\",\n            key: \"uoagbd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 17v-2.3\",\n            key: \"1jxgo2\"\n        }\n    ]\n]);\nconst ParkingSquare = createLucideIcon(\"ParkingSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 17V7h4a3 3 0 0 1 0 6H9\",\n            key: \"1dfk2c\"\n        }\n    ]\n]);\nconst PartyPopper = createLucideIcon(\"PartyPopper\", [\n    [\n        \"path\",\n        {\n            d: \"M5.8 11.3 2 22l10.7-3.79\",\n            key: \"gwxi1d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 3h.01\",\n            key: \"1vcuye\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 8h.01\",\n            key: \"1mrtc2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 2h.01\",\n            key: \"1cjtqr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 20h.01\",\n            key: \"1mrys2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 2-2.24.75a2.9 2.9 0 0 0-1.96 3.12v0c.1.86-.57 1.63-1.45 1.63h-.38c-.86 0-1.6.6-1.76 1.44L14 10\",\n            key: \"bpx1uq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 13-.82-.33c-.86-.34-1.82.2-1.98 1.11v0c-.11.7-.72 1.22-1.43 1.22H17\",\n            key: \"1pd0s7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m11 2 .33.82c.34.86-.2 1.82-1.11 1.98v0C9.52 4.9 9 5.52 9 6.23V7\",\n            key: \"zq5xbz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 13c1.93 1.93 2.83 4.17 2 5-.83.83-3.07-.07-5-2-1.93-1.93-2.83-4.17-2-5 .83-.83 3.07.07 5 2Z\",\n            key: \"4kbmks\"\n        }\n    ]\n]);\nconst PauseCircle = createLucideIcon(\"PauseCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"10\",\n            y1: \"15\",\n            y2: \"9\",\n            key: \"c1nkhi\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"14\",\n            y1: \"15\",\n            y2: \"9\",\n            key: \"h65svq\"\n        }\n    ]\n]);\nconst PauseOctagon = createLucideIcon(\"PauseOctagon\", [\n    [\n        \"path\",\n        {\n            d: \"M10 15V9\",\n            key: \"1lckn7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 15V9\",\n            key: \"1muqhk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.714 2h8.572L22 7.714v8.572L16.286 22H7.714L2 16.286V7.714L7.714 2z\",\n            key: \"1m7qra\"\n        }\n    ]\n]);\nconst Pause = createLucideIcon(\"Pause\", [\n    [\n        \"rect\",\n        {\n            width: \"4\",\n            height: \"16\",\n            x: \"6\",\n            y: \"4\",\n            key: \"iffhe4\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"4\",\n            height: \"16\",\n            x: \"14\",\n            y: \"4\",\n            key: \"sjin7j\"\n        }\n    ]\n]);\nconst PawPrint = createLucideIcon(\"PawPrint\", [\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"4\",\n            r: \"2\",\n            key: \"vol9p0\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"8\",\n            r: \"2\",\n            key: \"17gozi\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"20\",\n            cy: \"16\",\n            r: \"2\",\n            key: \"1v9bxh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-6.84 1.045Q6.52 17.48 4.46 16.84A3.5 3.5 0 0 1 5.5 10Z\",\n            key: \"1ydw1z\"\n        }\n    ]\n]);\nconst PcCase = createLucideIcon(\"PcCase\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"20\",\n            x: \"5\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"1uq1d7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 14h.01\",\n            key: \"1kp3bh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 6h6\",\n            key: \"dgm16u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 10h6\",\n            key: \"9gxzsh\"\n        }\n    ]\n]);\nconst PenLine = createLucideIcon(\"PenLine\", [\n    [\n        \"path\",\n        {\n            d: \"M12 20h9\",\n            key: \"t2du7b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.5 3.5a2.12 2.12 0 0 1 3 3L7 19l-4 1 1-4Z\",\n            key: \"ymcmye\"\n        }\n    ]\n]);\nconst PenSquare = createLucideIcon(\"PenSquare\", [\n    [\n        \"path\",\n        {\n            d: \"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\",\n            key: \"1qinfi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.5 2.5a2.12 2.12 0 0 1 3 3L12 15l-4 1 1-4Z\",\n            key: \"w2jsv5\"\n        }\n    ]\n]);\nconst PenTool = createLucideIcon(\"PenTool\", [\n    [\n        \"path\",\n        {\n            d: \"m12 19 7-7 3 3-7 7-3-3z\",\n            key: \"rklqx2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 13-1.5-7.5L2 2l3.5 14.5L13 18l5-5z\",\n            key: \"1et58u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 7.586 7.586\",\n            key: \"etlp93\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"11\",\n            r: \"2\",\n            key: \"xmgehs\"\n        }\n    ]\n]);\nconst Pen = createLucideIcon(\"Pen\", [\n    [\n        \"path\",\n        {\n            d: \"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\",\n            key: \"5qss01\"\n        }\n    ]\n]);\nconst PencilLine = createLucideIcon(\"PencilLine\", [\n    [\n        \"path\",\n        {\n            d: \"M12 20h9\",\n            key: \"t2du7b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.5 3.5a2.12 2.12 0 0 1 3 3L7 19l-4 1 1-4Z\",\n            key: \"ymcmye\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 5 3 3\",\n            key: \"1w25hb\"\n        }\n    ]\n]);\nconst PencilRuler = createLucideIcon(\"PencilRuler\", [\n    [\n        \"path\",\n        {\n            d: \"m15 5 4 4\",\n            key: \"1mk7zo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 7 8.7 2.7a2.41 2.41 0 0 0-3.4 0L2.7 5.3a2.41 2.41 0 0 0 0 3.4L7 13\",\n            key: \"orapub\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 6 2-2\",\n            key: \"115y1s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 22 5.5-1.5L21.17 6.83a2.82 2.82 0 0 0-4-4L3.5 16.5Z\",\n            key: \"hes763\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 16 2-2\",\n            key: \"ee94s4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 11 4.3 4.3c.94.94.94 2.46 0 3.4l-2.6 2.6c-.94.94-2.46.94-3.4 0L11 17\",\n            key: \"cfq27r\"\n        }\n    ]\n]);\nconst Pencil = createLucideIcon(\"Pencil\", [\n    [\n        \"path\",\n        {\n            d: \"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\",\n            key: \"5qss01\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 5 4 4\",\n            key: \"1mk7zo\"\n        }\n    ]\n]);\nconst PercentCircle = createLucideIcon(\"PercentCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 9-6 6\",\n            key: \"1uzhvr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 9h.01\",\n            key: \"1q5me6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 15h.01\",\n            key: \"lqbp3k\"\n        }\n    ]\n]);\nconst PercentDiamond = createLucideIcon(\"PercentDiamond\", [\n    [\n        \"path\",\n        {\n            d: \"M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0Z\",\n            key: \"1tpxz2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.2 9.2h.01\",\n            key: \"1b7bvt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.5 9.5-5 5\",\n            key: \"17q4r4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.7 14.8h.01\",\n            key: \"17nsh4\"\n        }\n    ]\n]);\nconst PercentSquare = createLucideIcon(\"PercentSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 9-6 6\",\n            key: \"1uzhvr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 9h.01\",\n            key: \"1q5me6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 15h.01\",\n            key: \"lqbp3k\"\n        }\n    ]\n]);\nconst Percent = createLucideIcon(\"Percent\", [\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"5\",\n            y1: \"5\",\n            y2: \"19\",\n            key: \"1x9vlm\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6.5\",\n            cy: \"6.5\",\n            r: \"2.5\",\n            key: \"4mh3h7\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17.5\",\n            cy: \"17.5\",\n            r: \"2.5\",\n            key: \"1mdrzq\"\n        }\n    ]\n]);\nconst PersonStanding = createLucideIcon(\"PersonStanding\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"5\",\n            r: \"1\",\n            key: \"gxeob9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 20 3-6 3 6\",\n            key: \"se2kox\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 8 6 2 6-2\",\n            key: \"4o3us4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10v4\",\n            key: \"1kjpxc\"\n        }\n    ]\n]);\nconst PhoneCall = createLucideIcon(\"PhoneCall\", [\n    [\n        \"path\",\n        {\n            d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\",\n            key: \"foiqr5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.05 2a9 9 0 0 1 8 7.94\",\n            key: \"vmijpz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.05 6A5 5 0 0 1 18 10\",\n            key: \"13nbpp\"\n        }\n    ]\n]);\nconst PhoneForwarded = createLucideIcon(\"PhoneForwarded\", [\n    [\n        \"polyline\",\n        {\n            points: \"18 2 22 6 18 10\",\n            key: \"6vjanh\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"22\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"1jsywh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\",\n            key: \"foiqr5\"\n        }\n    ]\n]);\nconst PhoneIncoming = createLucideIcon(\"PhoneIncoming\", [\n    [\n        \"polyline\",\n        {\n            points: \"16 2 16 8 22 8\",\n            key: \"1ygljm\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"8\",\n            key: \"1xzwqn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\",\n            key: \"foiqr5\"\n        }\n    ]\n]);\nconst PhoneMissed = createLucideIcon(\"PhoneMissed\", [\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"16\",\n            y1: \"2\",\n            y2: \"8\",\n            key: \"1xzwqn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"8\",\n            key: \"13zxdn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\",\n            key: \"foiqr5\"\n        }\n    ]\n]);\nconst PhoneOff = createLucideIcon(\"PhoneOff\", [\n    [\n        \"path\",\n        {\n            d: \"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91\",\n            key: \"z86iuo\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"2\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"11kh81\"\n        }\n    ]\n]);\nconst PhoneOutgoing = createLucideIcon(\"PhoneOutgoing\", [\n    [\n        \"polyline\",\n        {\n            points: \"22 8 22 2 16 2\",\n            key: \"1g204g\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"22\",\n            y1: \"8\",\n            y2: \"2\",\n            key: \"1ggias\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\",\n            key: \"foiqr5\"\n        }\n    ]\n]);\nconst Phone = createLucideIcon(\"Phone\", [\n    [\n        \"path\",\n        {\n            d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\",\n            key: \"foiqr5\"\n        }\n    ]\n]);\nconst PiSquare = createLucideIcon(\"PiSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 7h10\",\n            key: \"udp07y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 7v10\",\n            key: \"i1d9ee\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 17a2 2 0 0 1-2-2V7\",\n            key: \"ftwdc7\"\n        }\n    ]\n]);\nconst Pi = createLucideIcon(\"Pi\", [\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"9\",\n            y1: \"4\",\n            y2: \"20\",\n            key: \"ovs5a5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 7c0-1.7 1.3-3 3-3h13\",\n            key: \"10pag4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 20c-1.7 0-3-1.3-3-3V4\",\n            key: \"1gaosr\"\n        }\n    ]\n]);\nconst PictureInPicture2 = createLucideIcon(\"PictureInPicture2\", [\n    [\n        \"path\",\n        {\n            d: \"M21 9V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10c0 1.1.9 2 2 2h4\",\n            key: \"daa4of\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"7\",\n            x: \"12\",\n            y: \"13\",\n            rx: \"2\",\n            key: \"1nb8gs\"\n        }\n    ]\n]);\nconst PictureInPicture = createLucideIcon(\"PictureInPicture\", [\n    [\n        \"path\",\n        {\n            d: \"M8 4.5v5H3m-1-6 6 6m13 0v-3c0-1.16-.84-2-2-2h-7m-9 9v2c0 1.05.95 2 2 2h3\",\n            key: \"bcd8fb\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"7\",\n            x: \"12\",\n            y: \"13.5\",\n            ry: \"2\",\n            key: \"136fx3\"\n        }\n    ]\n]);\nconst PieChart = createLucideIcon(\"PieChart\", [\n    [\n        \"path\",\n        {\n            d: \"M21.21 15.89A10 10 0 1 1 8 2.83\",\n            key: \"k2fpak\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12A10 10 0 0 0 12 2v10z\",\n            key: \"1rfc4y\"\n        }\n    ]\n]);\nconst PiggyBank = createLucideIcon(\"PiggyBank\", [\n    [\n        \"path\",\n        {\n            d: \"M19 5c-1.5 0-2.8 1.4-3 2-3.5-1.5-11-.3-11 5 0 1.8 0 3 2 4.5V20h4v-2h3v2h4v-4c1-.5 1.7-1 2-2h2v-4h-2c0-1-.5-1.5-1-2h0V5z\",\n            key: \"uf6l00\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 9v1c0 1.1.9 2 2 2h1\",\n            key: \"nm575m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 11h0\",\n            key: \"k2aug8\"\n        }\n    ]\n]);\nconst PilcrowSquare = createLucideIcon(\"PilcrowSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12H9.5a2.5 2.5 0 0 1 0-5H17\",\n            key: \"1l9586\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7v10\",\n            key: \"jspqdw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 7v10\",\n            key: \"lavkr4\"\n        }\n    ]\n]);\nconst Pilcrow = createLucideIcon(\"Pilcrow\", [\n    [\n        \"path\",\n        {\n            d: \"M13 4v16\",\n            key: \"8vvj80\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 4v16\",\n            key: \"7dpous\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 4H9.5a4.5 4.5 0 0 0 0 9H13\",\n            key: \"sh4n9v\"\n        }\n    ]\n]);\nconst Pill = createLucideIcon(\"Pill\", [\n    [\n        \"path\",\n        {\n            d: \"m10.5 20.5 10-10a4.95 4.95 0 1 0-7-7l-10 10a4.95 4.95 0 1 0 7 7Z\",\n            key: \"wa1lgi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8.5 8.5 7 7\",\n            key: \"rvfmvr\"\n        }\n    ]\n]);\nconst PinOff = createLucideIcon(\"PinOff\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"17\",\n            y2: \"22\",\n            key: \"1jrz49\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 9v1.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V17h12\",\n            key: \"13x2n8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 9.34V6h1a2 2 0 0 0 0-4H7.89\",\n            key: \"reo3ki\"\n        }\n    ]\n]);\nconst Pin = createLucideIcon(\"Pin\", [\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"17\",\n            y2: \"22\",\n            key: \"1jrz49\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 17h14v-1.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V6h1a2 2 0 0 0 0-4H8a2 2 0 0 0 0 4h1v4.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24Z\",\n            key: \"13yl11\"\n        }\n    ]\n]);\nconst Pipette = createLucideIcon(\"Pipette\", [\n    [\n        \"path\",\n        {\n            d: \"m2 22 1-1h3l9-9\",\n            key: \"1sre89\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 21v-3l9-9\",\n            key: \"hpe2y6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 6 3.4-3.4a2.1 2.1 0 1 1 3 3L18 9l.4.4a2.1 2.1 0 1 1-3 3l-3.8-3.8a2.1 2.1 0 1 1 3-3l.4.4Z\",\n            key: \"196du1\"\n        }\n    ]\n]);\nconst Pizza = createLucideIcon(\"Pizza\", [\n    [\n        \"path\",\n        {\n            d: \"M15 11h.01\",\n            key: \"rns66s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 15h.01\",\n            key: \"k85uqc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16h.01\",\n            key: \"1f9h7w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 16 20 6-6-20A20 20 0 0 0 2 16\",\n            key: \"e4slt2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5.71 17.11a17.04 17.04 0 0 1 11.4-11.4\",\n            key: \"rerf8f\"\n        }\n    ]\n]);\nconst PlaneLanding = createLucideIcon(\"PlaneLanding\", [\n    [\n        \"path\",\n        {\n            d: \"M2 22h20\",\n            key: \"272qi7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.77 10.77 2 9l2-4.5 1.1.55c.55.28.9.84.9 1.45s.35 1.17.9 1.45L8 8.5l3-6 1.05.53a2 2 0 0 1 1.09 1.52l.72 5.4a2 2 0 0 0 1.09 1.52l4.4 2.2c.42.22.78.55 1.01.96l.6 1.03c.49.88-.06 1.98-1.06 2.1l-1.18.15c-.47.06-.95-.02-1.37-.24L4.29 11.15a2 2 0 0 1-.52-.38Z\",\n            key: \"1ma21e\"\n        }\n    ]\n]);\nconst PlaneTakeoff = createLucideIcon(\"PlaneTakeoff\", [\n    [\n        \"path\",\n        {\n            d: \"M2 22h20\",\n            key: \"272qi7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.36 17.4 4 17l-2-4 1.1-.55a2 2 0 0 1 1.8 0l.17.1a2 2 0 0 0 1.8 0L8 12 5 6l.9-.45a2 2 0 0 1 2.09.2l4.02 3a2 2 0 0 0 2.1.2l4.19-2.06a2.41 2.41 0 0 1 1.73-.17L21 7a1.4 1.4 0 0 1 .87 1.99l-.38.76c-.23.46-.6.84-1.07 1.08L7.58 17.2a2 2 0 0 1-1.22.18Z\",\n            key: \"fkigj9\"\n        }\n    ]\n]);\nconst Plane = createLucideIcon(\"Plane\", [\n    [\n        \"path\",\n        {\n            d: \"M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z\",\n            key: \"1v9wt8\"\n        }\n    ]\n]);\nconst PlayCircle = createLucideIcon(\"PlayCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"polygon\",\n        {\n            points: \"10 8 16 12 10 16 10 8\",\n            key: \"1cimsy\"\n        }\n    ]\n]);\nconst PlaySquare = createLucideIcon(\"PlaySquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 8 6 4-6 4Z\",\n            key: \"f1r3lt\"\n        }\n    ]\n]);\nconst Play = createLucideIcon(\"Play\", [\n    [\n        \"polygon\",\n        {\n            points: \"5 3 19 12 5 21 5 3\",\n            key: \"191637\"\n        }\n    ]\n]);\nconst Plug2 = createLucideIcon(\"Plug2\", [\n    [\n        \"path\",\n        {\n            d: \"M9 2v6\",\n            key: \"17ngun\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 2v6\",\n            key: \"s7yy2p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v5\",\n            key: \"bb1du9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 8h14\",\n            key: \"pcz4l3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 11V8h12v3a6 6 0 1 1-12 0v0Z\",\n            key: \"nd4hoy\"\n        }\n    ]\n]);\nconst PlugZap2 = createLucideIcon(\"PlugZap2\", [\n    [\n        \"path\",\n        {\n            d: \"m13 2-2 2.5h3L12 7\",\n            key: \"1me98u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 14v-3\",\n            key: \"1mllf3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 14v-3\",\n            key: \"1l3fkq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 19c-1.7 0-3-1.3-3-3v-2h8v2c0 1.7-1.3 3-3 3Z\",\n            key: \"jd5pat\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22v-3\",\n            key: \"kmzjlo\"\n        }\n    ]\n]);\nconst PlugZap = createLucideIcon(\"PlugZap\", [\n    [\n        \"path\",\n        {\n            d: \"M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z\",\n            key: \"goz73y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 22 3-3\",\n            key: \"19mgm9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.5 13.5 10 11\",\n            key: \"7xgeeb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.5 16.5 13 14\",\n            key: \"10btkg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 3-4 4h6l-4 4\",\n            key: \"16psg9\"\n        }\n    ]\n]);\nconst Plug = createLucideIcon(\"Plug\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22v-5\",\n            key: \"1ega77\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 8V2\",\n            key: \"14iosj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 8V2\",\n            key: \"18g5xt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 8v5a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4V8Z\",\n            key: \"osxo6l\"\n        }\n    ]\n]);\nconst PlusCircle = createLucideIcon(\"PlusCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v8\",\n            key: \"napkw2\"\n        }\n    ]\n]);\nconst PlusSquare = createLucideIcon(\"PlusSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v8\",\n            key: \"napkw2\"\n        }\n    ]\n]);\nconst Plus = createLucideIcon(\"Plus\", [\n    [\n        \"path\",\n        {\n            d: \"M5 12h14\",\n            key: \"1ays0h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 5v14\",\n            key: \"s699le\"\n        }\n    ]\n]);\nconst PocketKnife = createLucideIcon(\"PocketKnife\", [\n    [\n        \"path\",\n        {\n            d: \"M3 2v1c0 1 2 1 2 2S3 6 3 7s2 1 2 2-2 1-2 2 2 1 2 2\",\n            key: \"19w3oe\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 6h.01\",\n            key: \"1v4wsw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18h.01\",\n            key: \"uhywen\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.83 8.83a4 4 0 0 0-5.66-5.66l-12 12a4 4 0 1 0 5.66 5.66Z\",\n            key: \"6fykxj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 11.66V22a4 4 0 0 0 4-4V6\",\n            key: \"1utzek\"\n        }\n    ]\n]);\nconst Pocket = createLucideIcon(\"Pocket\", [\n    [\n        \"path\",\n        {\n            d: \"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z\",\n            key: \"1mz881\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"8 10 12 14 16 10\",\n            key: \"w4mbv5\"\n        }\n    ]\n]);\nconst Podcast = createLucideIcon(\"Podcast\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"11\",\n            r: \"1\",\n            key: \"1gvufo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 17a1 1 0 0 1 2 0c0 .5-.34 3-.5 4.5a.5.5 0 0 1-1 0c-.16-1.5-.5-4-.5-4.5Z\",\n            key: \"1n5fvv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14a5 5 0 1 1 8 0\",\n            key: \"fc81rn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 18.5a9 9 0 1 0-10 0\",\n            key: \"jqtxkf\"\n        }\n    ]\n]);\nconst Pointer = createLucideIcon(\"Pointer\", [\n    [\n        \"path\",\n        {\n            d: \"M22 14a8 8 0 0 1-8 8\",\n            key: \"56vcr3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 11v-1a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v0\",\n            key: \"1pp0yd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 10V9a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v1\",\n            key: \"u654g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 9.5V4a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v10\",\n            key: \"1e2dtv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15\",\n            key: \"g6ys72\"\n        }\n    ]\n]);\nconst Popcorn = createLucideIcon(\"Popcorn\", [\n    [\n        \"path\",\n        {\n            d: \"M18 8a2 2 0 0 0 0-4 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0 0 4\",\n            key: \"10td1f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 22 9 8\",\n            key: \"yjptiv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 22 1-14\",\n            key: \"8jwc8b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 8c.5 0 .9.4.8 1l-2.6 12c-.1.5-.7 1-1.2 1H7c-.6 0-1.1-.4-1.2-1L3.2 9c-.1-.6.3-1 .8-1Z\",\n            key: \"1qo33t\"\n        }\n    ]\n]);\nconst Popsicle = createLucideIcon(\"Popsicle\", [\n    [\n        \"path\",\n        {\n            d: \"M18.6 14.4c.8-.8.8-2 0-2.8l-8.1-8.1a4.95 4.95 0 1 0-7.1 7.1l8.1 8.1c.9.7 2.1.7 2.9-.1Z\",\n            key: \"1o68ps\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 22-5.5-5.5\",\n            key: \"17o70y\"\n        }\n    ]\n]);\nconst PoundSterling = createLucideIcon(\"PoundSterling\", [\n    [\n        \"path\",\n        {\n            d: \"M18 7c0-5.333-8-5.333-8 0\",\n            key: \"1prm2n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 7v14\",\n            key: \"18tmcs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 21h12\",\n            key: \"4dkmi1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 13h10\",\n            key: \"ybwr4a\"\n        }\n    ]\n]);\nconst PowerOff = createLucideIcon(\"PowerOff\", [\n    [\n        \"path\",\n        {\n            d: \"M18.36 6.64A9 9 0 0 1 20.77 15\",\n            key: \"dxknvb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.16 6.16a9 9 0 1 0 12.68 12.68\",\n            key: \"1x7qb5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v4\",\n            key: \"3427ic\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ]\n]);\nconst Power = createLucideIcon(\"Power\", [\n    [\n        \"path\",\n        {\n            d: \"M18.36 6.64a9 9 0 1 1-12.73 0\",\n            key: \"phirl6\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"12\",\n            key: \"aemgbe\"\n        }\n    ]\n]);\nconst Presentation = createLucideIcon(\"Presentation\", [\n    [\n        \"path\",\n        {\n            d: \"M2 3h20\",\n            key: \"91anmk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 3v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V3\",\n            key: \"2k9sn8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 21 5-5 5 5\",\n            key: \"bip4we\"\n        }\n    ]\n]);\nconst Printer = createLucideIcon(\"Printer\", [\n    [\n        \"polyline\",\n        {\n            points: \"6 9 6 2 18 2 18 9\",\n            key: \"1306q4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\",\n            key: \"143wyd\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"12\",\n            height: \"8\",\n            x: \"6\",\n            y: \"14\",\n            key: \"5ipwut\"\n        }\n    ]\n]);\nconst Projector = createLucideIcon(\"Projector\", [\n    [\n        \"path\",\n        {\n            d: \"M5 7 3 5\",\n            key: \"1yys58\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 6V3\",\n            key: \"1ptz9u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 7 2-2\",\n            key: \"1w3vmq\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"13\",\n            r: \"3\",\n            key: \"1mma13\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.83 12H20a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2.17\",\n            key: \"2frwzc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16h2\",\n            key: \"dnq2od\"\n        }\n    ]\n]);\nconst Puzzle = createLucideIcon(\"Puzzle\", [\n    [\n        \"path\",\n        {\n            d: \"M19.439 7.85c-.049.322.059.648.289.878l1.568 1.568c.47.47.706 1.087.706 1.704s-.235 1.233-.706 1.704l-1.611 1.611a.98.98 0 0 1-.837.276c-.47-.07-.802-.48-.968-.925a2.501 2.501 0 1 0-3.214 3.214c.446.166.855.497.925.968a.979.979 0 0 1-.276.837l-1.61 1.61a2.404 2.404 0 0 1-1.705.707 2.402 2.402 0 0 1-1.704-.706l-1.568-1.568a1.026 1.026 0 0 0-.877-.29c-.493.074-.84.504-1.02.968a2.5 2.5 0 1 1-3.237-3.237c.464-.18.894-.527.967-1.02a1.026 1.026 0 0 0-.289-.877l-1.568-1.568A2.402 2.402 0 0 1 1.998 12c0-.617.236-1.234.706-1.704L4.23 8.77c.24-.24.581-.353.917-.303.515.077.877.528 1.073 1.01a2.5 2.5 0 1 0 3.259-3.259c-.482-.196-.933-.558-1.01-1.073-.05-.336.062-.676.303-.917l1.525-1.525A2.402 2.402 0 0 1 12 1.998c.617 0 1.234.236 1.704.706l1.568 1.568c.23.23.556.338.877.29.493-.074.84-.504 1.02-.968a2.5 2.5 0 1 1 3.237 3.237c-.464.18-.894.527-.967 1.02Z\",\n            key: \"i0oyt7\"\n        }\n    ]\n]);\nconst QrCode = createLucideIcon(\"QrCode\", [\n    [\n        \"rect\",\n        {\n            width: \"5\",\n            height: \"5\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"1tu5fj\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"5\",\n            height: \"5\",\n            x: \"16\",\n            y: \"3\",\n            rx: \"1\",\n            key: \"1v8r4q\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"5\",\n            height: \"5\",\n            x: \"3\",\n            y: \"16\",\n            rx: \"1\",\n            key: \"1x03jg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 16h-3a2 2 0 0 0-2 2v3\",\n            key: \"177gqh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 21v.01\",\n            key: \"ents32\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 7v3a2 2 0 0 1-2 2H7\",\n            key: \"8crl2c\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12h.01\",\n            key: \"nlz23k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 3h.01\",\n            key: \"n36tog\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16v.01\",\n            key: \"133mhm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12h1\",\n            key: \"1slzba\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12v.01\",\n            key: \"1lwtk9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 21v-1\",\n            key: \"1880an\"\n        }\n    ]\n]);\nconst Quote = createLucideIcon(\"Quote\", [\n    [\n        \"path\",\n        {\n            d: \"M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z\",\n            key: \"4rm80e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z\",\n            key: \"10za9r\"\n        }\n    ]\n]);\nconst Rabbit = createLucideIcon(\"Rabbit\", [\n    [\n        \"path\",\n        {\n            d: \"M20 8.54V4a2 2 0 1 0-4 0v3\",\n            key: \"49iql8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 21h-8a4 4 0 0 1-4-4 7 7 0 0 1 7-7h.2L9.6 6.4a1.93 1.93 0 1 1 2.8-2.8L15.8 7h.2c3.3 0 6 2.7 6 6v1a2 2 0 0 1-2 2h-1c-1.7 0-3 1.3-3 3\",\n            key: \"1i2yr3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.61 12.53a3 3 0 1 0-1.6 4.3\",\n            key: \"9ygxkv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 16a3 3 0 0 1 2.24 5\",\n            key: \"1epib5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 12h.01\",\n            key: \"yjnet6\"\n        }\n    ]\n]);\nconst Radar = createLucideIcon(\"Radar\", [\n    [\n        \"path\",\n        {\n            d: \"M19.07 4.93A10 10 0 0 0 6.99 3.34\",\n            key: \"z3du51\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 6h.01\",\n            key: \"oypzma\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2.29 9.62A10 10 0 1 0 21.31 8.35\",\n            key: \"qzzz0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.24 7.76A6 6 0 1 0 8.23 16.67\",\n            key: \"1yjesh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18h.01\",\n            key: \"mhygvu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.99 11.66A6 6 0 0 1 15.77 16.67\",\n            key: \"1u2y91\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"1c9p78\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13.41 10.59 5.66-5.66\",\n            key: \"mhq4k0\"\n        }\n    ]\n]);\nconst Radiation = createLucideIcon(\"Radiation\", [\n    [\n        \"path\",\n        {\n            d: \"M12 12h0\",\n            key: \"1tz7lj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.5 4.2c-.3-.5-.9-.7-1.3-.4C3.9 5.5 2.3 8.1 2 11c-.1.5.4 1 1 1h5c0-1.5.8-2.8 2-3.4-1.1-1.9-2-3.5-2.5-4.4z\",\n            key: \"wy49g3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12c.6 0 1-.4 1-1-.3-2.9-1.8-5.5-4.1-7.1-.4-.3-1.1-.2-1.3.3-.6.9-1.5 2.5-2.6 4.3 1.2.7 2 2 2 3.5h5z\",\n            key: \"vklnvr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.5 19.8c-.3.5-.1 1.1.4 1.3 2.6 1.2 5.6 1.2 8.2 0 .5-.2.7-.8.4-1.3-.5-.9-1.4-2.5-2.5-4.3-1.2.7-2.8.7-4 0-1.1 1.8-2 3.4-2.5 4.3z\",\n            key: \"wkdf1o\"\n        }\n    ]\n]);\nconst RadioReceiver = createLucideIcon(\"RadioReceiver\", [\n    [\n        \"path\",\n        {\n            d: \"M5 16v2\",\n            key: \"g5qcv5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 16v2\",\n            key: \"1gbaio\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"8\",\n            x: \"2\",\n            y: \"8\",\n            rx: \"2\",\n            key: \"vjsjur\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 12h0\",\n            key: \"1ucjzd\"\n        }\n    ]\n]);\nconst RadioTower = createLucideIcon(\"RadioTower\", [\n    [\n        \"path\",\n        {\n            d: \"M4.9 16.1C1 12.2 1 5.8 4.9 1.9\",\n            key: \"s0qx1y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.8 4.7a6.14 6.14 0 0 0-.8 7.5\",\n            key: \"1idnkw\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"9\",\n            r: \"2\",\n            key: \"1092wv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.2 4.8c2 2 2.26 5.11.8 7.47\",\n            key: \"ojru2q\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.1 1.9a9.96 9.96 0 0 1 0 14.1\",\n            key: \"rhi7fg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.5 18h5\",\n            key: \"mfy3pd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 22 4-11 4 11\",\n            key: \"25yftu\"\n        }\n    ]\n]);\nconst Radio = createLucideIcon(\"Radio\", [\n    [\n        \"path\",\n        {\n            d: \"M4.9 19.1C1 15.2 1 8.8 4.9 4.9\",\n            key: \"1vaf9d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.8 16.2c-2.3-2.3-2.3-6.1 0-8.5\",\n            key: \"u1ii0m\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"1c9p78\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.2 7.8c2.3 2.3 2.3 6.1 0 8.5\",\n            key: \"1j5fej\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.1 4.9C23 8.8 23 15.1 19.1 19\",\n            key: \"10b0cb\"\n        }\n    ]\n]);\nconst RailSymbol = createLucideIcon(\"RailSymbol\", [\n    [\n        \"path\",\n        {\n            d: \"M5 15h14\",\n            key: \"m0yey3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 9h14\",\n            key: \"7tsvo6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 20-5-5 6-6-5-5\",\n            key: \"1jo42i\"\n        }\n    ]\n]);\nconst Rainbow = createLucideIcon(\"Rainbow\", [\n    [\n        \"path\",\n        {\n            d: \"M22 17a10 10 0 0 0-20 0\",\n            key: \"ozegv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 17a6 6 0 0 1 12 0\",\n            key: \"5giftw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 17a2 2 0 0 1 4 0\",\n            key: \"gnsikk\"\n        }\n    ]\n]);\nconst Rat = createLucideIcon(\"Rat\", [\n    [\n        \"path\",\n        {\n            d: \"M17 5c0-1.7-1.3-3-3-3s-3 1.3-3 3c0 .8.3 1.5.8 2H11c-3.9 0-7 3.1-7 7v0c0 2.2 1.8 4 4 4\",\n            key: \"16aj0u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.8 3.9c.3-.3.6-.5 1-.7 1.5-.6 3.3.1 3.9 1.6.6 1.5-.1 3.3-1.6 3.9l1.6 2.8c.2.3.2.7.2 1-.2.8-.9 1.2-1.7 1.1 0 0-1.6-.3-2.7-.6H17c-1.7 0-3 1.3-3 3\",\n            key: \"1crdmb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.2 18a3 3 0 0 0-2.2-5\",\n            key: \"1ol3lk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 22H4a2 2 0 0 1 0-4h12\",\n            key: \"bt3f23\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 9h.01\",\n            key: \"1bdo4e\"\n        }\n    ]\n]);\nconst Ratio = createLucideIcon(\"Ratio\", [\n    [\n        \"rect\",\n        {\n            width: \"12\",\n            height: \"20\",\n            x: \"6\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"1oxtiu\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"12\",\n            x: \"2\",\n            y: \"6\",\n            rx: \"2\",\n            key: \"9lu3g6\"\n        }\n    ]\n]);\nconst Receipt = createLucideIcon(\"Receipt\", [\n    [\n        \"path\",\n        {\n            d: \"M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1-2-1Z\",\n            key: \"wqdwcb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8\",\n            key: \"1h4pet\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17V7\",\n            key: \"pyj7ub\"\n        }\n    ]\n]);\nconst RectangleHorizontal = createLucideIcon(\"RectangleHorizontal\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"12\",\n            x: \"2\",\n            y: \"6\",\n            rx: \"2\",\n            key: \"9lu3g6\"\n        }\n    ]\n]);\nconst RectangleVertical = createLucideIcon(\"RectangleVertical\", [\n    [\n        \"rect\",\n        {\n            width: \"12\",\n            height: \"20\",\n            x: \"6\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"1oxtiu\"\n        }\n    ]\n]);\nconst Recycle = createLucideIcon(\"Recycle\", [\n    [\n        \"path\",\n        {\n            d: \"M7 19H4.815a1.83 1.83 0 0 1-1.57-.881 1.785 1.785 0 0 1-.004-1.784L7.196 9.5\",\n            key: \"x6z5xu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 19h8.203a1.83 1.83 0 0 0 1.556-.89 1.784 1.784 0 0 0 0-1.775l-1.226-2.12\",\n            key: \"1x4zh5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 16-3 3 3 3\",\n            key: \"f6jyew\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.293 13.596 7.196 9.5 3.1 10.598\",\n            key: \"wf1obh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.344 5.811 1.093-1.892A1.83 1.83 0 0 1 11.985 3a1.784 1.784 0 0 1 1.546.888l3.943 6.843\",\n            key: \"9tzpgr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13.378 9.633 4.096 1.098 1.097-4.096\",\n            key: \"1oe83g\"\n        }\n    ]\n]);\nconst Redo2 = createLucideIcon(\"Redo2\", [\n    [\n        \"path\",\n        {\n            d: \"m15 14 5-5-5-5\",\n            key: \"12vg1m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 9H9.5A5.5 5.5 0 0 0 4 14.5v0A5.5 5.5 0 0 0 9.5 20H13\",\n            key: \"19mnr4\"\n        }\n    ]\n]);\nconst RedoDot = createLucideIcon(\"RedoDot\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"17\",\n            r: \"1\",\n            key: \"1ixnty\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 7v6h-6\",\n            key: \"3ptur4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7\",\n            key: \"1kgawr\"\n        }\n    ]\n]);\nconst Redo = createLucideIcon(\"Redo\", [\n    [\n        \"path\",\n        {\n            d: \"M21 7v6h-6\",\n            key: \"3ptur4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7\",\n            key: \"1kgawr\"\n        }\n    ]\n]);\nconst RefreshCcwDot = createLucideIcon(\"RefreshCcwDot\", [\n    [\n        \"path\",\n        {\n            d: \"M3 2v6h6\",\n            key: \"18ldww\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12A9 9 0 0 0 6 5.3L3 8\",\n            key: \"1pbrqz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 22v-6h-6\",\n            key: \"usdfbe\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12a9 9 0 0 0 15 6.7l3-2.7\",\n            key: \"1hosoe\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"41hilf\"\n        }\n    ]\n]);\nconst RefreshCcw = createLucideIcon(\"RefreshCcw\", [\n    [\n        \"path\",\n        {\n            d: \"M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\",\n            key: \"14sxne\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 3v5h5\",\n            key: \"1xhq8a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16\",\n            key: \"1hlbsb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16h5v5\",\n            key: \"ccwih5\"\n        }\n    ]\n]);\nconst RefreshCwOff = createLucideIcon(\"RefreshCwOff\", [\n    [\n        \"path\",\n        {\n            d: \"M21 8L18.74 5.74A9.75 9.75 0 0 0 12 3C11 3 10.03 3.16 9.13 3.47\",\n            key: \"1krf6h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16H3v5\",\n            key: \"1cv678\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12C3 9.51 4 7.26 5.64 5.64\",\n            key: \"ruvoct\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 16 2.26 2.26A9.75 9.75 0 0 0 12 21c2.49 0 4.74-1 6.36-2.64\",\n            key: \"19q130\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12c0 1-.16 1.97-.47 2.87\",\n            key: \"4w8emr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 3v5h-5\",\n            key: \"1q7to0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 22 2 2\",\n            key: \"1r8tn9\"\n        }\n    ]\n]);\nconst RefreshCw = createLucideIcon(\"RefreshCw\", [\n    [\n        \"path\",\n        {\n            d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\",\n            key: \"v9h5vc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 3v5h-5\",\n            key: \"1q7to0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\",\n            key: \"3uifl3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16H3v5\",\n            key: \"1cv678\"\n        }\n    ]\n]);\nconst Refrigerator = createLucideIcon(\"Refrigerator\", [\n    [\n        \"path\",\n        {\n            d: \"M5 6a4 4 0 0 1 4-4h6a4 4 0 0 1 4 4v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6Z\",\n            key: \"fpq118\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 10h14\",\n            key: \"elsbfy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 7v6\",\n            key: \"1nx30x\"\n        }\n    ]\n]);\nconst Regex = createLucideIcon(\"Regex\", [\n    [\n        \"path\",\n        {\n            d: \"M17 3v10\",\n            key: \"15fgeh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12.67 5.5 8.66 5\",\n            key: \"1gpheq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12.67 10.5 8.66-5\",\n            key: \"1dkfa6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2z\",\n            key: \"swwfx4\"\n        }\n    ]\n]);\nconst RemoveFormatting = createLucideIcon(\"RemoveFormatting\", [\n    [\n        \"path\",\n        {\n            d: \"M4 7V4h16v3\",\n            key: \"9msm58\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 20h6\",\n            key: \"1h6pxn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 4 8 20\",\n            key: \"kqq6aj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 15 5 5\",\n            key: \"me55sn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20 15-5 5\",\n            key: \"11p7ol\"\n        }\n    ]\n]);\nconst Repeat1 = createLucideIcon(\"Repeat1\", [\n    [\n        \"path\",\n        {\n            d: \"m17 2 4 4-4 4\",\n            key: \"nntrym\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 11v-1a4 4 0 0 1 4-4h14\",\n            key: \"84bu3i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 22-4-4 4-4\",\n            key: \"1wqhfi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 13v1a4 4 0 0 1-4 4H3\",\n            key: \"1rx37r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 10h1v4\",\n            key: \"70cz1p\"\n        }\n    ]\n]);\nconst Repeat2 = createLucideIcon(\"Repeat2\", [\n    [\n        \"path\",\n        {\n            d: \"m2 9 3-3 3 3\",\n            key: \"1ltn5i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 18H7a2 2 0 0 1-2-2V6\",\n            key: \"1r6tfw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 15-3 3-3-3\",\n            key: \"4rnwn2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 6h6a2 2 0 0 1 2 2v10\",\n            key: \"2f72bc\"\n        }\n    ]\n]);\nconst Repeat = createLucideIcon(\"Repeat\", [\n    [\n        \"path\",\n        {\n            d: \"m17 2 4 4-4 4\",\n            key: \"nntrym\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 11v-1a4 4 0 0 1 4-4h14\",\n            key: \"84bu3i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7 22-4-4 4-4\",\n            key: \"1wqhfi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 13v1a4 4 0 0 1-4 4H3\",\n            key: \"1rx37r\"\n        }\n    ]\n]);\nconst ReplaceAll = createLucideIcon(\"ReplaceAll\", [\n    [\n        \"path\",\n        {\n            d: \"M14 4c0-1.1.9-2 2-2\",\n            key: \"1mvvbw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 2c1.1 0 2 .9 2 2\",\n            key: \"1mj6oe\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 8c0 1.1-.9 2-2 2\",\n            key: \"v1wql3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 10c-1.1 0-2-.9-2-2\",\n            key: \"821ux0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 7 3 3 3-3\",\n            key: \"x25e72\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 10V5c0-1.7 1.3-3 3-3h1\",\n            key: \"13af7h\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"8\",\n            x: \"2\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"17ihk4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 14c1.1 0 2 .9 2 2v4c0 1.1-.9 2-2 2\",\n            key: \"1w9p8c\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 14c1.1 0 2 .9 2 2v4c0 1.1-.9 2-2 2\",\n            key: \"m45eaa\"\n        }\n    ]\n]);\nconst Replace = createLucideIcon(\"Replace\", [\n    [\n        \"path\",\n        {\n            d: \"M14 4c0-1.1.9-2 2-2\",\n            key: \"1mvvbw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 2c1.1 0 2 .9 2 2\",\n            key: \"1mj6oe\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 8c0 1.1-.9 2-2 2\",\n            key: \"v1wql3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 10c-1.1 0-2-.9-2-2\",\n            key: \"821ux0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 7 3 3 3-3\",\n            key: \"x25e72\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 10V5c0-1.7 1.3-3 3-3h1\",\n            key: \"13af7h\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"8\",\n            x: \"2\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"17ihk4\"\n        }\n    ]\n]);\nconst ReplyAll = createLucideIcon(\"ReplyAll\", [\n    [\n        \"polyline\",\n        {\n            points: \"7 17 2 12 7 7\",\n            key: \"t83bqg\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 17 7 12 12 7\",\n            key: \"1g4ajm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 18v-2a4 4 0 0 0-4-4H7\",\n            key: \"1fcyog\"\n        }\n    ]\n]);\nconst Reply = createLucideIcon(\"Reply\", [\n    [\n        \"polyline\",\n        {\n            points: \"9 17 4 12 9 7\",\n            key: \"hvgpf2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 18v-2a4 4 0 0 0-4-4H4\",\n            key: \"5vmcpk\"\n        }\n    ]\n]);\nconst Rewind = createLucideIcon(\"Rewind\", [\n    [\n        \"polygon\",\n        {\n            points: \"11 19 2 12 11 5 11 19\",\n            key: \"14yba5\"\n        }\n    ],\n    [\n        \"polygon\",\n        {\n            points: \"22 19 13 12 22 5 22 19\",\n            key: \"1pi1cj\"\n        }\n    ]\n]);\nconst Rocket = createLucideIcon(\"Rocket\", [\n    [\n        \"path\",\n        {\n            d: \"M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z\",\n            key: \"m3kijz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z\",\n            key: \"1fmvmk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0\",\n            key: \"1f8sc4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5\",\n            key: \"qeys4\"\n        }\n    ]\n]);\nconst RockingChair = createLucideIcon(\"RockingChair\", [\n    [\n        \"polyline\",\n        {\n            points: \"3.5 2 6.5 12.5 18 12.5\",\n            key: \"y3iy52\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9.5\",\n            x2: \"5.5\",\n            y1: \"12.5\",\n            y2: \"20\",\n            key: \"19vg5i\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"18.5\",\n            y1: \"12.5\",\n            y2: \"20\",\n            key: \"1inpmv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2.75 18a13 13 0 0 0 18.5 0\",\n            key: \"1nquas\"\n        }\n    ]\n]);\nconst RollerCoaster = createLucideIcon(\"RollerCoaster\", [\n    [\n        \"path\",\n        {\n            d: \"M6 19V5\",\n            key: \"1r845m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 19V6.8\",\n            key: \"9j2tfs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 19v-7.8\",\n            key: \"10s8qv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 5v4\",\n            key: \"1tajlv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 19v-6\",\n            key: \"ielfq3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 19V9\",\n            key: \"158nzp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 19V9a4 4 0 0 1 4-4c2 0 4 1.33 6 4s4 4 6 4a4 4 0 1 0-3-6.65\",\n            key: \"1930oh\"\n        }\n    ]\n]);\nconst Rotate3d = createLucideIcon(\"Rotate3d\", [\n    [\n        \"path\",\n        {\n            d: \"M16.466 7.5C15.643 4.237 13.952 2 12 2 9.239 2 7 6.477 7 12s2.239 10 5 10c.342 0 .677-.069 1-.2\",\n            key: \"10n0gc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15.194 13.707 3.814 1.86-1.86 3.814\",\n            key: \"16shm9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 15.57c-1.804.885-4.274 1.43-7 1.43-5.523 0-10-2.239-10-5s4.477-5 10-5c4.838 0 8.873 1.718 9.8 4\",\n            key: \"1lxi77\"\n        }\n    ]\n]);\nconst RotateCcw = createLucideIcon(\"RotateCcw\", [\n    [\n        \"path\",\n        {\n            d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\",\n            key: \"1357e3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 3v5h5\",\n            key: \"1xhq8a\"\n        }\n    ]\n]);\nconst RotateCw = createLucideIcon(\"RotateCw\", [\n    [\n        \"path\",\n        {\n            d: \"M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8\",\n            key: \"1p45f6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 3v5h-5\",\n            key: \"1q7to0\"\n        }\n    ]\n]);\nconst Router = createLucideIcon(\"Router\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"8\",\n            x: \"2\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"w68u3i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.01 18H6\",\n            key: \"19vcac\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.01 18H10\",\n            key: \"uamcmx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 10v4\",\n            key: \"qjz1xs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.84 7.17a4 4 0 0 0-5.66 0\",\n            key: \"1rif40\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20.66 4.34a8 8 0 0 0-11.31 0\",\n            key: \"6a5xfq\"\n        }\n    ]\n]);\nconst Rows = createLucideIcon(\"Rows\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"10d38w\"\n        }\n    ]\n]);\nconst Rss = createLucideIcon(\"Rss\", [\n    [\n        \"path\",\n        {\n            d: \"M4 11a9 9 0 0 1 9 9\",\n            key: \"pv89mb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 4a16 16 0 0 1 16 16\",\n            key: \"k0647b\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"19\",\n            r: \"1\",\n            key: \"bfqh0e\"\n        }\n    ]\n]);\nconst Ruler = createLucideIcon(\"Ruler\", [\n    [\n        \"path\",\n        {\n            d: \"M21.3 15.3a2.4 2.4 0 0 1 0 3.4l-2.6 2.6a2.4 2.4 0 0 1-3.4 0L2.7 8.7a2.41 2.41 0 0 1 0-3.4l2.6-2.6a2.41 2.41 0 0 1 3.4 0Z\",\n            key: \"icamh8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.5 12.5 2-2\",\n            key: \"inckbg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m11.5 9.5 2-2\",\n            key: \"fmmyf7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8.5 6.5 2-2\",\n            key: \"vc6u1g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17.5 15.5 2-2\",\n            key: \"wo5hmg\"\n        }\n    ]\n]);\nconst RussianRuble = createLucideIcon(\"RussianRuble\", [\n    [\n        \"path\",\n        {\n            d: \"M6 11h8a4 4 0 0 0 0-8H9v18\",\n            key: \"18ai8t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 15h8\",\n            key: \"1y8f6l\"\n        }\n    ]\n]);\nconst Sailboat = createLucideIcon(\"Sailboat\", [\n    [\n        \"path\",\n        {\n            d: \"M22 18H2a4 4 0 0 0 4 4h12a4 4 0 0 0 4-4Z\",\n            key: \"1404fh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 14 10 2 3 14h18Z\",\n            key: \"1nzg7v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 2v16\",\n            key: \"1labyt\"\n        }\n    ]\n]);\nconst Salad = createLucideIcon(\"Salad\", [\n    [\n        \"path\",\n        {\n            d: \"M7 21h10\",\n            key: \"1b0cd5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z\",\n            key: \"4rw317\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.38 12a2.4 2.4 0 0 1-.4-4.77 2.4 2.4 0 0 1 3.2-2.77 2.4 2.4 0 0 1 3.47-.63 2.4 2.4 0 0 1 3.37 3.37 2.4 2.4 0 0 1-1.1 3.7 2.51 2.51 0 0 1 .03 1.1\",\n            key: \"10xrj0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 12 4-4\",\n            key: \"1hckqy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.9 7.25A3.99 3.99 0 0 0 4 10c0 .73.2 1.41.54 2\",\n            key: \"1p4srx\"\n        }\n    ]\n]);\nconst Sandwich = createLucideIcon(\"Sandwich\", [\n    [\n        \"path\",\n        {\n            d: \"M3 11v3a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1v-3\",\n            key: \"34v9d7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 19H4a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-3.83\",\n            key: \"1k5vfb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 11 7.77-6.04a2 2 0 0 1 2.46 0L21 11H3Z\",\n            key: \"1oe7l6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12.97 19.77 7 15h12.5l-3.75 4.5a2 2 0 0 1-2.78.27Z\",\n            key: \"1ts2ri\"\n        }\n    ]\n]);\nconst SatelliteDish = createLucideIcon(\"SatelliteDish\", [\n    [\n        \"path\",\n        {\n            d: \"M4 10a7.31 7.31 0 0 0 10 10Z\",\n            key: \"1fzpp3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 15 3-3\",\n            key: \"88sc13\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 13a6 6 0 0 0-6-6\",\n            key: \"15cc6u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 13A10 10 0 0 0 11 3\",\n            key: \"11nf8s\"\n        }\n    ]\n]);\nconst Satellite = createLucideIcon(\"Satellite\", [\n    [\n        \"path\",\n        {\n            d: \"M13 7 9 3 5 7l4 4\",\n            key: \"vyckw6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 11 4 4-4 4-4-4\",\n            key: \"rchckc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 12 4 4 6-6-4-4Z\",\n            key: \"1sshf7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 8 3-3\",\n            key: \"x428zp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 21a6 6 0 0 0-6-6\",\n            key: \"1iajcf\"\n        }\n    ]\n]);\nconst SaveAll = createLucideIcon(\"SaveAll\", [\n    [\n        \"path\",\n        {\n            d: \"M6 4a2 2 0 0 1 2-2h10l4 4v10.2a2 2 0 0 1-2 1.8H8a2 2 0 0 1-2-2Z\",\n            key: \"1unput\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 2v4h6\",\n            key: \"1p5sg6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 18v-7h-8v7\",\n            key: \"1oniuk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 22H4a2 2 0 0 1-2-2V6\",\n            key: \"pblm9e\"\n        }\n    ]\n]);\nconst Save = createLucideIcon(\"Save\", [\n    [\n        \"path\",\n        {\n            d: \"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\",\n            key: \"1owoqh\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"17 21 17 13 7 13 7 21\",\n            key: \"1md35c\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"7 3 7 8 15 8\",\n            key: \"8nz8an\"\n        }\n    ]\n]);\nconst Scale3d = createLucideIcon(\"Scale3d\", [\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"19\",\n            r: \"2\",\n            key: \"17f5cg\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"5\",\n            r: \"2\",\n            key: \"1gwv83\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 7v12h12\",\n            key: \"vtaa4r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 19 6-6\",\n            key: \"jh6hbb\"\n        }\n    ]\n]);\nconst Scale = createLucideIcon(\"Scale\", [\n    [\n        \"path\",\n        {\n            d: \"m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z\",\n            key: \"7g6ntu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z\",\n            key: \"ijws7r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 21h10\",\n            key: \"1b0cd5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 3v18\",\n            key: \"108xh3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2\",\n            key: \"3gwbw2\"\n        }\n    ]\n]);\nconst Scaling = createLucideIcon(\"Scaling\", [\n    [\n        \"path\",\n        {\n            d: \"M21 3 9 15\",\n            key: \"15kdhq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 3H3v18h18v-9\",\n            key: \"8suug0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 3h5v5\",\n            key: \"1806ms\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 15H9v-5\",\n            key: \"pi4jk9\"\n        }\n    ]\n]);\nconst ScanFace = createLucideIcon(\"ScanFace\", [\n    [\n        \"path\",\n        {\n            d: \"M3 7V5a2 2 0 0 1 2-2h2\",\n            key: \"aa7l1z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 3h2a2 2 0 0 1 2 2v2\",\n            key: \"4qcy5o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 17v2a2 2 0 0 1-2 2h-2\",\n            key: \"6vwrx8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 21H5a2 2 0 0 1-2-2v-2\",\n            key: \"ioqczr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14s1.5 2 4 2 4-2 4-2\",\n            key: \"1y1vjs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 9h.01\",\n            key: \"1q5me6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 9h.01\",\n            key: \"x1ddxp\"\n        }\n    ]\n]);\nconst ScanLine = createLucideIcon(\"ScanLine\", [\n    [\n        \"path\",\n        {\n            d: \"M3 7V5a2 2 0 0 1 2-2h2\",\n            key: \"aa7l1z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 3h2a2 2 0 0 1 2 2v2\",\n            key: \"4qcy5o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 17v2a2 2 0 0 1-2 2h-2\",\n            key: \"6vwrx8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 21H5a2 2 0 0 1-2-2v-2\",\n            key: \"ioqczr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"7\",\n            x2: \"17\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"197423\"\n        }\n    ]\n]);\nconst Scan = createLucideIcon(\"Scan\", [\n    [\n        \"path\",\n        {\n            d: \"M3 7V5a2 2 0 0 1 2-2h2\",\n            key: \"aa7l1z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 3h2a2 2 0 0 1 2 2v2\",\n            key: \"4qcy5o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 17v2a2 2 0 0 1-2 2h-2\",\n            key: \"6vwrx8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 21H5a2 2 0 0 1-2-2v-2\",\n            key: \"ioqczr\"\n        }\n    ]\n]);\nconst ScatterChart = createLucideIcon(\"ScatterChart\", [\n    [\n        \"circle\",\n        {\n            cx: \"7.5\",\n            cy: \"7.5\",\n            r: \".5\",\n            key: \"1x97lo\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18.5\",\n            cy: \"5.5\",\n            r: \".5\",\n            key: \"56iowl\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"11.5\",\n            cy: \"11.5\",\n            r: \".5\",\n            key: \"m9xkw9\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"7.5\",\n            cy: \"16.5\",\n            r: \".5\",\n            key: \"14ln9z\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17.5\",\n            cy: \"14.5\",\n            r: \".5\",\n            key: \"14qxqt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 3v18h18\",\n            key: \"1s2lah\"\n        }\n    ]\n]);\nconst School2 = createLucideIcon(\"School2\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"10\",\n            r: \"1\",\n            key: \"1gnqs8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 20V8h-4l-6-4-6 4H2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2Z\",\n            key: \"8z0lq4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 17v.01\",\n            key: \"roodi6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 13v.01\",\n            key: \"67c122\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 17v.01\",\n            key: \"12ktxm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 13v.01\",\n            key: \"tn1rt1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 22v-5a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v5\",\n            key: \"jfgdp0\"\n        }\n    ]\n]);\nconst School = createLucideIcon(\"School\", [\n    [\n        \"path\",\n        {\n            d: \"m4 6 8-4 8 4\",\n            key: \"1q0ilc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 10 4 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-8l4-2\",\n            key: \"1vwozw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 22v-4a2 2 0 0 0-2-2v0a2 2 0 0 0-2 2v4\",\n            key: \"cpkuc4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 5v17\",\n            key: \"1sw6gf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 5v17\",\n            key: \"1xfsm0\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"9\",\n            r: \"2\",\n            key: \"1092wv\"\n        }\n    ]\n]);\nconst ScissorsLineDashed = createLucideIcon(\"ScissorsLineDashed\", [\n    [\n        \"path\",\n        {\n            d: \"M5.42 9.42 8 12\",\n            key: \"12pkuq\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"4\",\n            cy: \"8\",\n            r: \"2\",\n            key: \"107mxr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 6-8.58 8.58\",\n            key: \"gvzu5l\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"4\",\n            cy: \"16\",\n            r: \"2\",\n            key: \"1ehqvc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.8 14.8 14 18\",\n            key: \"ax7m9r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12h-2\",\n            key: \"10asgb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12h-2\",\n            key: \"14jgyd\"\n        }\n    ]\n]);\nconst ScissorsSquareDashedBottom = createLucideIcon(\"ScissorsSquareDashedBottom\", [\n    [\n        \"path\",\n        {\n            d: \"M4 22a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2\",\n            key: \"1vzg26\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 22H8\",\n            key: \"euku7a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 22h-2\",\n            key: \"18d249\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"8\",\n            r: \"2\",\n            key: \"14cg06\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.414 9.414 12 12\",\n            key: \"qz4lzr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.8 14.8 18 18\",\n            key: \"11flf1\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"16\",\n            r: \"2\",\n            key: \"1acxsx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 6-8.586 8.586\",\n            key: \"11kzk1\"\n        }\n    ]\n]);\nconst ScissorsSquare = createLucideIcon(\"ScissorsSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"20\",\n            x: \"2\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"1btzen\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"8\",\n            r: \"2\",\n            key: \"14cg06\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.414 9.414 12 12\",\n            key: \"qz4lzr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.8 14.8 18 18\",\n            key: \"11flf1\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"16\",\n            r: \"2\",\n            key: \"1acxsx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 6-8.586 8.586\",\n            key: \"11kzk1\"\n        }\n    ]\n]);\nconst Scissors = createLucideIcon(\"Scissors\", [\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"6\",\n            r: \"3\",\n            key: \"1lh9wr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.12 8.12 12 12\",\n            key: \"1alkpv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 4 8.12 15.88\",\n            key: \"xgtan2\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"18\",\n            r: \"3\",\n            key: \"fqmcym\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.8 14.8 20 20\",\n            key: \"ptml3r\"\n        }\n    ]\n]);\nconst ScreenShareOff = createLucideIcon(\"ScreenShareOff\", [\n    [\n        \"path\",\n        {\n            d: \"M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3\",\n            key: \"i8wdob\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 3-5 5\",\n            key: \"12jva0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 3 5 5\",\n            key: \"k36vhe\"\n        }\n    ]\n]);\nconst ScreenShare = createLucideIcon(\"ScreenShare\", [\n    [\n        \"path\",\n        {\n            d: \"M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3\",\n            key: \"i8wdob\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 8 5-5\",\n            key: \"fqif7o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 3h5v5\",\n            key: \"1o3tu8\"\n        }\n    ]\n]);\nconst ScrollText = createLucideIcon(\"ScrollText\", [\n    [\n        \"path\",\n        {\n            d: \"M8 21h12a2 2 0 0 0 2-2v-2H10v2a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v3h4\",\n            key: \"13a6an\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 17V5a2 2 0 0 0-2-2H4\",\n            key: \"zz82l3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 8h-5\",\n            key: \"1khuty\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 12h-5\",\n            key: \"r7krc0\"\n        }\n    ]\n]);\nconst Scroll = createLucideIcon(\"Scroll\", [\n    [\n        \"path\",\n        {\n            d: \"M8 21h12a2 2 0 0 0 2-2v-2H10v2a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v3h4\",\n            key: \"13a6an\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 17V5a2 2 0 0 0-2-2H4\",\n            key: \"zz82l3\"\n        }\n    ]\n]);\nconst SearchCheck = createLucideIcon(\"SearchCheck\", [\n    [\n        \"path\",\n        {\n            d: \"m8 11 2 2 4-4\",\n            key: \"1sed1v\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"11\",\n            r: \"8\",\n            key: \"4ej97u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 21-4.3-4.3\",\n            key: \"1qie3q\"\n        }\n    ]\n]);\nconst SearchCode = createLucideIcon(\"SearchCode\", [\n    [\n        \"path\",\n        {\n            d: \"m9 9-2 2 2 2\",\n            key: \"17gsfh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 13 2-2-2-2\",\n            key: \"186z8k\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"11\",\n            r: \"8\",\n            key: \"4ej97u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 21-4.3-4.3\",\n            key: \"1qie3q\"\n        }\n    ]\n]);\nconst SearchSlash = createLucideIcon(\"SearchSlash\", [\n    [\n        \"path\",\n        {\n            d: \"m13.5 8.5-5 5\",\n            key: \"1cs55j\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"11\",\n            r: \"8\",\n            key: \"4ej97u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 21-4.3-4.3\",\n            key: \"1qie3q\"\n        }\n    ]\n]);\nconst SearchX = createLucideIcon(\"SearchX\", [\n    [\n        \"path\",\n        {\n            d: \"m13.5 8.5-5 5\",\n            key: \"1cs55j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8.5 8.5 5 5\",\n            key: \"a8mexj\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"11\",\n            r: \"8\",\n            key: \"4ej97u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 21-4.3-4.3\",\n            key: \"1qie3q\"\n        }\n    ]\n]);\nconst Search = createLucideIcon(\"Search\", [\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"11\",\n            r: \"8\",\n            key: \"4ej97u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 21-4.3-4.3\",\n            key: \"1qie3q\"\n        }\n    ]\n]);\nconst SendHorizontal = createLucideIcon(\"SendHorizontal\", [\n    [\n        \"path\",\n        {\n            d: \"m3 3 3 9-3 9 19-9Z\",\n            key: \"1aobqy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 12h16\",\n            key: \"s4cdu5\"\n        }\n    ]\n]);\nconst SendToBack = createLucideIcon(\"SendToBack\", [\n    [\n        \"rect\",\n        {\n            x: \"14\",\n            y: \"14\",\n            width: \"8\",\n            height: \"8\",\n            rx: \"2\",\n            key: \"1b0bso\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"2\",\n            y: \"2\",\n            width: \"8\",\n            height: \"8\",\n            rx: \"2\",\n            key: \"1x09vl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 14v1a2 2 0 0 0 2 2h1\",\n            key: \"pao6x6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 7h1a2 2 0 0 1 2 2v1\",\n            key: \"19tdru\"\n        }\n    ]\n]);\nconst Send = createLucideIcon(\"Send\", [\n    [\n        \"path\",\n        {\n            d: \"m22 2-7 20-4-9-9-4Z\",\n            key: \"1q3vgg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 2 11 13\",\n            key: \"nzbqef\"\n        }\n    ]\n]);\nconst SeparatorHorizontal = createLucideIcon(\"SeparatorHorizontal\", [\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"10d38w\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"8 8 12 4 16 8\",\n            key: \"zo8t4w\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"16 16 12 20 8 16\",\n            key: \"1oyrid\"\n        }\n    ]\n]);\nconst SeparatorVertical = createLucideIcon(\"SeparatorVertical\", [\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"3\",\n            y2: \"21\",\n            key: \"1efggb\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"8 8 4 12 8 16\",\n            key: \"bnfmv4\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"16 16 20 12 16 8\",\n            key: \"u90052\"\n        }\n    ]\n]);\nconst ServerCog = createLucideIcon(\"ServerCog\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.5 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-.5\",\n            key: \"tn8das\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.5 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-.5\",\n            key: \"1g2pve\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 6h.01\",\n            key: \"1utrut\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18h.01\",\n            key: \"uhywen\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15.7 13.4-.9-.3\",\n            key: \"1jwmzr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.2 10.9-.9-.3\",\n            key: \"qapnim\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10.6 15.7.3-.9\",\n            key: \"quwk0k\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13.6 15.7-.4-1\",\n            key: \"cb9xp7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10.8 9.3-.4-1\",\n            key: \"1uaiz5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8.3 13.6 1-.4\",\n            key: \"s6srou\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.7 10.8 1-.4\",\n            key: \"4d31cq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13.4 8.3-.3.9\",\n            key: \"1bm987\"\n        }\n    ]\n]);\nconst ServerCrash = createLucideIcon(\"ServerCrash\", [\n    [\n        \"path\",\n        {\n            d: \"M6 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2\",\n            key: \"4b9dqc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-2\",\n            key: \"22nnkd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 6h.01\",\n            key: \"1utrut\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18h.01\",\n            key: \"uhywen\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 6-4 6h6l-4 6\",\n            key: \"14hqih\"\n        }\n    ]\n]);\nconst ServerOff = createLucideIcon(\"ServerOff\", [\n    [\n        \"path\",\n        {\n            d: \"M7 2h13a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-5\",\n            key: \"bt2siv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 10 2.5 2.5C2 2 2 2.5 2 5v3a2 2 0 0 0 2 2h6z\",\n            key: \"1hjrv1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 17v-1a2 2 0 0 0-2-2h-1\",\n            key: \"1iynyr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 14a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16.5l1-.5.5.5-8-8H4z\",\n            key: \"161ggg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18h.01\",\n            key: \"uhywen\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ]\n]);\nconst Server = createLucideIcon(\"Server\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"8\",\n            x: \"2\",\n            y: \"2\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"ngkwjq\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"8\",\n            x: \"2\",\n            y: \"14\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"iecqi9\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6.01\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"16zg32\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6.01\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"nzw8ys\"\n        }\n    ]\n]);\nconst Settings2 = createLucideIcon(\"Settings2\", [\n    [\n        \"path\",\n        {\n            d: \"M20 7h-9\",\n            key: \"3s1dr2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 17H5\",\n            key: \"gfn3mx\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17\",\n            cy: \"17\",\n            r: \"3\",\n            key: \"18b49y\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"7\",\n            cy: \"7\",\n            r: \"3\",\n            key: \"dfmy0x\"\n        }\n    ]\n]);\nconst Settings = createLucideIcon(\"Settings\", [\n    [\n        \"path\",\n        {\n            d: \"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\",\n            key: \"1qme2f\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ]\n]);\nconst Shapes = createLucideIcon(\"Shapes\", [\n    [\n        \"path\",\n        {\n            d: \"M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z\",\n            key: \"1bo67w\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            x: \"3\",\n            y: \"14\",\n            width: \"7\",\n            height: \"7\",\n            rx: \"1\",\n            key: \"1bkyp8\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17.5\",\n            cy: \"17.5\",\n            r: \"3.5\",\n            key: \"w3z12y\"\n        }\n    ]\n]);\nconst Share2 = createLucideIcon(\"Share2\", [\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"5\",\n            r: \"3\",\n            key: \"gq8acd\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"w7nqdw\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"19\",\n            r: \"3\",\n            key: \"1xt0gg\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8.59\",\n            x2: \"15.42\",\n            y1: \"13.51\",\n            y2: \"17.49\",\n            key: \"47mynk\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15.41\",\n            x2: \"8.59\",\n            y1: \"6.51\",\n            y2: \"10.49\",\n            key: \"1n3mei\"\n        }\n    ]\n]);\nconst Share = createLucideIcon(\"Share\", [\n    [\n        \"path\",\n        {\n            d: \"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\",\n            key: \"1b2hhj\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"16 6 12 2 8 6\",\n            key: \"m901s6\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"15\",\n            key: \"1p0rca\"\n        }\n    ]\n]);\nconst Sheet = createLucideIcon(\"Sheet\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1vqk6q\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"15\",\n            y2: \"15\",\n            key: \"o2sbyz\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"9\",\n            y1: \"9\",\n            y2: \"21\",\n            key: \"1ib60c\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15\",\n            y1: \"9\",\n            y2: \"21\",\n            key: \"1n26ft\"\n        }\n    ]\n]);\nconst Shell = createLucideIcon(\"Shell\", [\n    [\n        \"path\",\n        {\n            d: \"M14 11a2 2 0 1 1-4 0 4 4 0 0 1 8 0 6 6 0 0 1-12 0 8 8 0 0 1 16 0 10 10 0 1 1-20 0 11.93 11.93 0 0 1 2.42-7.22 2 2 0 1 1 3.16 2.44\",\n            key: \"1cn552\"\n        }\n    ]\n]);\nconst ShieldAlert = createLucideIcon(\"ShieldAlert\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\",\n            key: \"1irkt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v4\",\n            key: \"1got3b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16h.01\",\n            key: \"1drbdi\"\n        }\n    ]\n]);\nconst ShieldBan = createLucideIcon(\"ShieldBan\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\",\n            key: \"1irkt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4 5 14 12\",\n            key: \"1ta6nf\"\n        }\n    ]\n]);\nconst ShieldCheck = createLucideIcon(\"ShieldCheck\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\",\n            key: \"1irkt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 12 2 2 4-4\",\n            key: \"dzmm74\"\n        }\n    ]\n]);\nconst ShieldEllipsis = createLucideIcon(\"ShieldEllipsis\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\",\n            key: \"1irkt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 11h.01\",\n            key: \"1dfujw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 11h.01\",\n            key: \"z322tv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 11h.01\",\n            key: \"xkw8gn\"\n        }\n    ]\n]);\nconst ShieldHalf = createLucideIcon(\"ShieldHalf\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\",\n            key: \"1irkt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22V2\",\n            key: \"zs6s6o\"\n        }\n    ]\n]);\nconst ShieldMinus = createLucideIcon(\"ShieldMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\",\n            key: \"1irkt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 11h8\",\n            key: \"vwpz6n\"\n        }\n    ]\n]);\nconst ShieldOff = createLucideIcon(\"ShieldOff\", [\n    [\n        \"path\",\n        {\n            d: \"M19.7 14a6.9 6.9 0 0 0 .3-2V5l-8-3-3.2 1.2\",\n            key: \"342pvf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.7 4.7 4 5v7c0 6 8 10 8 10a20.3 20.3 0 0 0 5.62-4.38\",\n            key: \"p0ycf4\"\n        }\n    ]\n]);\nconst ShieldPlus = createLucideIcon(\"ShieldPlus\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\",\n            key: \"1irkt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 11h8\",\n            key: \"vwpz6n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 15V7\",\n            key: \"1ycneb\"\n        }\n    ]\n]);\nconst ShieldQuestion = createLucideIcon(\"ShieldQuestion\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\",\n            key: \"1irkt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3\",\n            key: \"mhlwft\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17h.01\",\n            key: \"p32p05\"\n        }\n    ]\n]);\nconst ShieldX = createLucideIcon(\"ShieldX\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\",\n            key: \"1irkt0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.5 9-5 5\",\n            key: \"1m49dw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9.5 9 5 5\",\n            key: \"wyx7zg\"\n        }\n    ]\n]);\nconst Shield = createLucideIcon(\"Shield\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10\",\n            key: \"1irkt0\"\n        }\n    ]\n]);\nconst ShipWheel = createLucideIcon(\"ShipWheel\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"8\",\n            key: \"46899m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v7.5\",\n            key: \"1e5rl5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 5-5.23 5.23\",\n            key: \"1ezxxf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12h-7.5\",\n            key: \"le1719\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 19-5.23-5.23\",\n            key: \"p3fmgn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 14.5V22\",\n            key: \"dgcmos\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.23 13.77 5 19\",\n            key: \"qwopd4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.5 12H2\",\n            key: \"r7bup8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.23 10.23 5 5\",\n            key: \"k2y7lj\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2.5\",\n            key: \"ix0uyj\"\n        }\n    ]\n]);\nconst Ship = createLucideIcon(\"Ship\", [\n    [\n        \"path\",\n        {\n            d: \"M2 21c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1 .6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\",\n            key: \"iegodh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.38 20A11.6 11.6 0 0 0 21 14l-9-4-9 4c0 2.9.94 5.34 2.81 7.76\",\n            key: \"fp8vka\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 13V7a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v6\",\n            key: \"qpkstq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 10v4\",\n            key: \"1kjpxc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v3\",\n            key: \"qbqxhf\"\n        }\n    ]\n]);\nconst Shirt = createLucideIcon(\"Shirt\", [\n    [\n        \"path\",\n        {\n            d: \"M20.38 3.46 16 2a4 4 0 0 1-8 0L3.62 3.46a2 2 0 0 0-1.34 2.23l.58 3.47a1 1 0 0 0 .99.84H6v10c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V10h2.15a1 1 0 0 0 .99-.84l.58-3.47a2 2 0 0 0-1.34-2.23z\",\n            key: \"1wgbhj\"\n        }\n    ]\n]);\nconst ShoppingBag = createLucideIcon(\"ShoppingBag\", [\n    [\n        \"path\",\n        {\n            d: \"M6 2 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4Z\",\n            key: \"hou9p0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 6h18\",\n            key: \"d0wm0j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 10a4 4 0 0 1-8 0\",\n            key: \"1ltviw\"\n        }\n    ]\n]);\nconst ShoppingBasket = createLucideIcon(\"ShoppingBasket\", [\n    [\n        \"path\",\n        {\n            d: \"m5 11 4-7\",\n            key: \"116ra9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 11-4-7\",\n            key: \"cnml18\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 11h20\",\n            key: \"3eubbj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.5 11 1.6 7.4a2 2 0 0 0 2 1.6h9.8c.9 0 1.8-.7 2-1.6l1.7-7.4\",\n            key: \"1x2lvw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 11 1 9\",\n            key: \"1ojof7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.5 15.5h15\",\n            key: \"13mye1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 11-1 9\",\n            key: \"5wnq3a\"\n        }\n    ]\n]);\nconst ShoppingCart = createLucideIcon(\"ShoppingCart\", [\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"21\",\n            r: \"1\",\n            key: \"jimo8o\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"21\",\n            r: \"1\",\n            key: \"13723u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12\",\n            key: \"9zh506\"\n        }\n    ]\n]);\nconst Shovel = createLucideIcon(\"Shovel\", [\n    [\n        \"path\",\n        {\n            d: \"M2 22v-5l5-5 5 5-5 5z\",\n            key: \"1fh25c\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.5 14.5 16 8\",\n            key: \"1smz5x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 2 5 5-.5.5a3.53 3.53 0 0 1-5 0s0 0 0 0a3.53 3.53 0 0 1 0-5L17 2\",\n            key: \"1q8uv5\"\n        }\n    ]\n]);\nconst ShowerHead = createLucideIcon(\"ShowerHead\", [\n    [\n        \"path\",\n        {\n            d: \"m4 4 2.5 2.5\",\n            key: \"uv2vmf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.5 6.5a4.95 4.95 0 0 0-7 7\",\n            key: \"frdkwv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 5 5 15\",\n            key: \"1ag8rq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 17v.01\",\n            key: \"eokfpp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 16v.01\",\n            key: \"14uyyl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 13v.01\",\n            key: \"1v1k97\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 10v.01\",\n            key: \"5169yg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 20v.01\",\n            key: \"cj92p8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 14v.01\",\n            key: \"11cswd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 11v.01\",\n            key: \"19e0od\"\n        }\n    ]\n]);\nconst Shrink = createLucideIcon(\"Shrink\", [\n    [\n        \"path\",\n        {\n            d: \"m15 15 6 6m-6-6v4.8m0-4.8h4.8\",\n            key: \"17vawe\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 19.8V15m0 0H4.2M9 15l-6 6\",\n            key: \"chjx8e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 4.2V9m0 0h4.8M15 9l6-6\",\n            key: \"lav6yq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 4.2V9m0 0H4.2M9 9 3 3\",\n            key: \"1pxi2q\"\n        }\n    ]\n]);\nconst Shrub = createLucideIcon(\"Shrub\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22v-7l-2-2\",\n            key: \"eqv9mc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 8v.8A6 6 0 0 1 13.8 20v0H10v0A6.5 6.5 0 0 1 7 8h0a5 5 0 0 1 10 0Z\",\n            key: \"12jcau\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 14-2 2\",\n            key: \"847xa2\"\n        }\n    ]\n]);\nconst Shuffle = createLucideIcon(\"Shuffle\", [\n    [\n        \"path\",\n        {\n            d: \"M2 18h1.4c1.3 0 2.5-.6 3.3-1.7l6.1-8.6c.7-1.1 2-1.7 3.3-1.7H22\",\n            key: \"1wmou1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 2 4 4-4 4\",\n            key: \"pucp1d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 6h1.9c1.5 0 2.9.9 3.6 2.2\",\n            key: \"10bdb2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 18h-5.9c-1.3 0-2.6-.7-3.3-1.8l-.5-.8\",\n            key: \"vgxac0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 14 4 4-4 4\",\n            key: \"10pe0f\"\n        }\n    ]\n]);\nconst SigmaSquare = createLucideIcon(\"SigmaSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8.9V7H8l4 5-4 5h8v-1.9\",\n            key: \"9nih0i\"\n        }\n    ]\n]);\nconst Sigma = createLucideIcon(\"Sigma\", [\n    [\n        \"path\",\n        {\n            d: \"M18 7V4H6l6 8-6 8h12v-3\",\n            key: \"zis8ev\"\n        }\n    ]\n]);\nconst SignalHigh = createLucideIcon(\"SignalHigh\", [\n    [\n        \"path\",\n        {\n            d: \"M2 20h.01\",\n            key: \"4haj6o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20v-4\",\n            key: \"j294jx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v-8\",\n            key: \"i3yub9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 20V8\",\n            key: \"1tkaf5\"\n        }\n    ]\n]);\nconst SignalLow = createLucideIcon(\"SignalLow\", [\n    [\n        \"path\",\n        {\n            d: \"M2 20h.01\",\n            key: \"4haj6o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20v-4\",\n            key: \"j294jx\"\n        }\n    ]\n]);\nconst SignalMedium = createLucideIcon(\"SignalMedium\", [\n    [\n        \"path\",\n        {\n            d: \"M2 20h.01\",\n            key: \"4haj6o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20v-4\",\n            key: \"j294jx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v-8\",\n            key: \"i3yub9\"\n        }\n    ]\n]);\nconst SignalZero = createLucideIcon(\"SignalZero\", [\n    [\n        \"path\",\n        {\n            d: \"M2 20h.01\",\n            key: \"4haj6o\"\n        }\n    ]\n]);\nconst Signal = createLucideIcon(\"Signal\", [\n    [\n        \"path\",\n        {\n            d: \"M2 20h.01\",\n            key: \"4haj6o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20v-4\",\n            key: \"j294jx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v-8\",\n            key: \"i3yub9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 20V8\",\n            key: \"1tkaf5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 4v16\",\n            key: \"sih9yq\"\n        }\n    ]\n]);\nconst Siren = createLucideIcon(\"Siren\", [\n    [\n        \"path\",\n        {\n            d: \"M7 12a5 5 0 0 1 5-5v0a5 5 0 0 1 5 5v6H7v-6Z\",\n            key: \"rmc51c\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 20a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v2H5v-2Z\",\n            key: \"yyvmjy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12h1\",\n            key: \"jtio3y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.5 4.5 18 5\",\n            key: \"g5sp9y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12h1\",\n            key: \"1uaihz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v1\",\n            key: \"11qlp1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.929 4.929.707.707\",\n            key: \"1i51kw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v6\",\n            key: \"3ahymv\"\n        }\n    ]\n]);\nconst SkipBack = createLucideIcon(\"SkipBack\", [\n    [\n        \"polygon\",\n        {\n            points: \"19 20 9 12 19 4 19 20\",\n            key: \"o2sva\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"5\",\n            x2: \"5\",\n            y1: \"19\",\n            y2: \"5\",\n            key: \"1ocqjk\"\n        }\n    ]\n]);\nconst SkipForward = createLucideIcon(\"SkipForward\", [\n    [\n        \"polygon\",\n        {\n            points: \"5 4 15 12 5 20 5 4\",\n            key: \"16p6eg\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"19\",\n            y1: \"5\",\n            y2: \"19\",\n            key: \"futhcm\"\n        }\n    ]\n]);\nconst Skull = createLucideIcon(\"Skull\", [\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"1vctgf\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"15\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"1tmaij\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 20v2h8v-2\",\n            key: \"ded4og\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12.5 17-.5-1-.5 1h1z\",\n            key: \"3me087\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 20a2 2 0 0 0 1.56-3.25 8 8 0 1 0-11.12 0A2 2 0 0 0 8 20\",\n            key: \"xq9p5u\"\n        }\n    ]\n]);\nconst Slack = createLucideIcon(\"Slack\", [\n    [\n        \"rect\",\n        {\n            width: \"3\",\n            height: \"8\",\n            x: \"13\",\n            y: \"2\",\n            rx: \"1.5\",\n            key: \"diqz80\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 8.5V10h1.5A1.5 1.5 0 1 0 19 8.5\",\n            key: \"183iwg\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"3\",\n            height: \"8\",\n            x: \"8\",\n            y: \"14\",\n            rx: \"1.5\",\n            key: \"hqg7r1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 15.5V14H3.5A1.5 1.5 0 1 0 5 15.5\",\n            key: \"76g71w\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"3\",\n            x: \"14\",\n            y: \"13\",\n            rx: \"1.5\",\n            key: \"1kmz0a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.5 19H14v1.5a1.5 1.5 0 1 0 1.5-1.5\",\n            key: \"jc4sz0\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"3\",\n            x: \"2\",\n            y: \"8\",\n            rx: \"1.5\",\n            key: \"1omvl4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.5 5H10V3.5A1.5 1.5 0 1 0 8.5 5\",\n            key: \"16f3cl\"\n        }\n    ]\n]);\nconst Slash = createLucideIcon(\"Slash\", [\n    [\n        \"path\",\n        {\n            d: \"M22 2 2 22\",\n            key: \"y4kqgn\"\n        }\n    ]\n]);\nconst Slice = createLucideIcon(\"Slice\", [\n    [\n        \"path\",\n        {\n            d: \"m8 14-6 6h9v-3\",\n            key: \"zo3j9a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.37 3.63 8 14l3 3L21.37 6.63a2.12 2.12 0 1 0-3-3Z\",\n            key: \"1dzx0j\"\n        }\n    ]\n]);\nconst SlidersHorizontal = createLucideIcon(\"SlidersHorizontal\", [\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"14\",\n            y1: \"4\",\n            y2: \"4\",\n            key: \"obuewd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"3\",\n            y1: \"4\",\n            y2: \"4\",\n            key: \"1q6298\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"12\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1iu8h1\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"3\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"ntss68\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"16\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"14d8ph\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"3\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"m0wm8r\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"14\",\n            y1: \"2\",\n            y2: \"6\",\n            key: \"14e1ph\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"10\",\n            y2: \"14\",\n            key: \"1i6ji0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"18\",\n            y2: \"22\",\n            key: \"1lctlv\"\n        }\n    ]\n]);\nconst Sliders = createLucideIcon(\"Sliders\", [\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"4\",\n            y1: \"21\",\n            y2: \"14\",\n            key: \"1p332r\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"4\",\n            y1: \"10\",\n            y2: \"3\",\n            key: \"gb41h5\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"21\",\n            y2: \"12\",\n            key: \"hf2csr\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"8\",\n            y2: \"3\",\n            key: \"1kfi7u\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"20\",\n            x2: \"20\",\n            y1: \"21\",\n            y2: \"16\",\n            key: \"1lhrwl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"20\",\n            x2: \"20\",\n            y1: \"12\",\n            y2: \"3\",\n            key: \"16vvfq\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"6\",\n            y1: \"14\",\n            y2: \"14\",\n            key: \"1uebub\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"14\",\n            y1: \"8\",\n            y2: \"8\",\n            key: \"1yglbp\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"22\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"1jxqpz\"\n        }\n    ]\n]);\nconst SmartphoneCharging = createLucideIcon(\"SmartphoneCharging\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"20\",\n            x: \"5\",\n            y: \"2\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1yt0o3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12.667 8 10 12h4l-2.667 4\",\n            key: \"h9lk2d\"\n        }\n    ]\n]);\nconst SmartphoneNfc = createLucideIcon(\"SmartphoneNfc\", [\n    [\n        \"rect\",\n        {\n            width: \"7\",\n            height: \"12\",\n            x: \"2\",\n            y: \"6\",\n            rx: \"1\",\n            key: \"5nje8w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 8.32a7.43 7.43 0 0 1 0 7.36\",\n            key: \"1g306n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.46 6.21a11.76 11.76 0 0 1 0 11.58\",\n            key: \"uqvjvo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.91 4.1a15.91 15.91 0 0 1 .01 15.8\",\n            key: \"ujntz3\"\n        }\n    ]\n]);\nconst Smartphone = createLucideIcon(\"Smartphone\", [\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"20\",\n            x: \"5\",\n            y: \"2\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1yt0o3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18h.01\",\n            key: \"mhygvu\"\n        }\n    ]\n]);\nconst SmilePlus = createLucideIcon(\"SmilePlus\", [\n    [\n        \"path\",\n        {\n            d: \"M22 11v1a10 10 0 1 1-9-10\",\n            key: \"ew0xw9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14s1.5 2 4 2 4-2 4-2\",\n            key: \"1y1vjs\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"9.01\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"yxxnd0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15.01\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1p4y9e\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 5h6\",\n            key: \"1vod17\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 2v6\",\n            key: \"4bpg5p\"\n        }\n    ]\n]);\nconst Smile = createLucideIcon(\"Smile\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 14s1.5 2 4 2 4-2 4-2\",\n            key: \"1y1vjs\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"9.01\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"yxxnd0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"15.01\",\n            y1: \"9\",\n            y2: \"9\",\n            key: \"1p4y9e\"\n        }\n    ]\n]);\nconst Snail = createLucideIcon(\"Snail\", [\n    [\n        \"path\",\n        {\n            d: \"M2 13a6 6 0 1 0 12 0 4 4 0 1 0-8 0 2 2 0 0 0 4 0\",\n            key: \"hneq2s\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"10\",\n            cy: \"13\",\n            r: \"8\",\n            key: \"194lz3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 21h12c4.4 0 8-3.6 8-8V7a2 2 0 1 0-4 0v6\",\n            key: \"ixqyt7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 3 19.1 5.2\",\n            key: \"9tjm43\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 3 20.9 5.2\",\n            key: \"j3odrs\"\n        }\n    ]\n]);\nconst Snowflake = createLucideIcon(\"Snowflake\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1dnqot\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"7eqyqh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20 16-4-4 4-4\",\n            key: \"rquw4f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4 8 4 4-4 4\",\n            key: \"12s3z9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 4-4 4-4-4\",\n            key: \"1tumq1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 20 4-4 4 4\",\n            key: \"9p200w\"\n        }\n    ]\n]);\nconst Sofa = createLucideIcon(\"Sofa\", [\n    [\n        \"path\",\n        {\n            d: \"M20 9V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v3\",\n            key: \"1dgpiv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 11v5a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v2H6v-2a2 2 0 0 0-4 0Z\",\n            key: \"u5qfb7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 18v2\",\n            key: \"jwo5n2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 18v2\",\n            key: \"1ar1qi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 4v9\",\n            key: \"oqhhn3\"\n        }\n    ]\n]);\nconst Soup = createLucideIcon(\"Soup\", [\n    [\n        \"path\",\n        {\n            d: \"M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z\",\n            key: \"4rw317\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 21h10\",\n            key: \"1b0cd5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.5 12 22 6\",\n            key: \"shfsr5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.73 1.62\",\n            key: \"rpc6vp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.25 3c.27.1.8.53.74 1.36-.05.83-.93 1.2-.98 2.02-.06.78.33 1.24.72 1.62\",\n            key: \"1lf63m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.74 1.62\",\n            key: \"97tijn\"\n        }\n    ]\n]);\nconst Space = createLucideIcon(\"Space\", [\n    [\n        \"path\",\n        {\n            d: \"M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1\",\n            key: \"lt2kga\"\n        }\n    ]\n]);\nconst Spade = createLucideIcon(\"Spade\", [\n    [\n        \"path\",\n        {\n            d: \"M5 9c-1.5 1.5-3 3.2-3 5.5A5.5 5.5 0 0 0 7.5 20c1.8 0 3-.5 4.5-2 1.5 1.5 2.7 2 4.5 2a5.5 5.5 0 0 0 5.5-5.5c0-2.3-1.5-4-3-5.5l-7-7-7 7Z\",\n            key: \"40bo9n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 18v4\",\n            key: \"jadmvz\"\n        }\n    ]\n]);\nconst Sparkle = createLucideIcon(\"Sparkle\", [\n    [\n        \"path\",\n        {\n            d: \"m12 3-1.9 5.8a2 2 0 0 1-1.287 1.288L3 12l5.8 1.9a2 2 0 0 1 1.288 1.287L12 21l1.9-5.8a2 2 0 0 1 1.287-1.288L21 12l-5.8-1.9a2 2 0 0 1-1.288-1.287Z\",\n            key: \"nraa5p\"\n        }\n    ]\n]);\nconst Sparkles = createLucideIcon(\"Sparkles\", [\n    [\n        \"path\",\n        {\n            d: \"m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z\",\n            key: \"17u4zn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 3v4\",\n            key: \"bklmnn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 17v4\",\n            key: \"iiml17\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 5h4\",\n            key: \"nem4j1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 19h4\",\n            key: \"lbex7p\"\n        }\n    ]\n]);\nconst Speaker = createLucideIcon(\"Speaker\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"20\",\n            x: \"4\",\n            y: \"2\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"76otgf\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"14\",\n            r: \"4\",\n            key: \"1jruaj\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"16cbga\"\n        }\n    ]\n]);\nconst SpellCheck2 = createLucideIcon(\"SpellCheck2\", [\n    [\n        \"path\",\n        {\n            d: \"m6 16 6-12 6 12\",\n            key: \"1b4byz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 21c1.1 0 1.1-1 2.3-1s1.1 1 2.3 1c1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1\",\n            key: \"8mdmtu\"\n        }\n    ]\n]);\nconst SpellCheck = createLucideIcon(\"SpellCheck\", [\n    [\n        \"path\",\n        {\n            d: \"m6 16 6-12 6 12\",\n            key: \"1b4byz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 20 2 2 4-4\",\n            key: \"13tcca\"\n        }\n    ]\n]);\nconst Spline = createLucideIcon(\"Spline\", [\n    [\n        \"circle\",\n        {\n            cx: \"19\",\n            cy: \"5\",\n            r: \"2\",\n            key: \"mhkx31\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"5\",\n            cy: \"19\",\n            r: \"2\",\n            key: \"v8kfzx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 17A12 12 0 0 1 17 5\",\n            key: \"1okkup\"\n        }\n    ]\n]);\nconst SplitSquareHorizontal = createLucideIcon(\"SplitSquareHorizontal\", [\n    [\n        \"path\",\n        {\n            d: \"M8 19H5c-1 0-2-1-2-2V7c0-1 1-2 2-2h3\",\n            key: \"lubmu8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 5h3c1 0 2 1 2 2v10c0 1-1 2-2 2h-3\",\n            key: \"1ag34g\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"4\",\n            y2: \"20\",\n            key: \"1tx1rr\"\n        }\n    ]\n]);\nconst SplitSquareVertical = createLucideIcon(\"SplitSquareVertical\", [\n    [\n        \"path\",\n        {\n            d: \"M5 8V5c0-1 1-2 2-2h10c1 0 2 1 2 2v3\",\n            key: \"1pi83i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 16v3c0 1-1 2-2 2H7c-1 0-2-1-2-2v-3\",\n            key: \"ido5k7\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"20\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1e0a9i\"\n        }\n    ]\n]);\nconst Split = createLucideIcon(\"Split\", [\n    [\n        \"path\",\n        {\n            d: \"M16 3h5v5\",\n            key: \"1806ms\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 3H3v5\",\n            key: \"15dfkv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22v-8.3a4 4 0 0 0-1.172-2.872L3 3\",\n            key: \"1qrqzj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 9 6-6\",\n            key: \"ko1vev\"\n        }\n    ]\n]);\nconst SprayCan = createLucideIcon(\"SprayCan\", [\n    [\n        \"path\",\n        {\n            d: \"M3 3h.01\",\n            key: \"159qn6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 5h.01\",\n            key: \"1hq22a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 7h.01\",\n            key: \"1osv80\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 7h.01\",\n            key: \"1xzrh3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 9h.01\",\n            key: \"19b3jx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 11h.01\",\n            key: \"1eifu7\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"4\",\n            height: \"4\",\n            x: \"15\",\n            y: \"5\",\n            key: \"mri9e4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 9 2 2v10c0 .6-.4 1-1 1h-6c-.6 0-1-.4-1-1V11l2-2\",\n            key: \"aib6hk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 14 8-2\",\n            key: \"1d7bmk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m13 19 8-2\",\n            key: \"1y2vml\"\n        }\n    ]\n]);\nconst Sprout = createLucideIcon(\"Sprout\", [\n    [\n        \"path\",\n        {\n            d: \"M7 20h10\",\n            key: \"e6iznv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 20c5.5-2.5.8-6.4 3-10\",\n            key: \"161w41\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.5 9.4c1.1.8 1.8 2.2 2.3 3.7-2 .4-3.5.4-4.8-.3-1.2-.6-2.3-1.9-3-4.2 2.8-.5 4.4 0 5.5.8z\",\n            key: \"9gtqwd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.1 6a7 7 0 0 0-1.1 4c1.9-.1 3.3-.6 4.3-1.4 1-1 1.6-2.3 1.7-4.6-2.7.1-4 1-4.9 2z\",\n            key: \"bkxnd2\"\n        }\n    ]\n]);\nconst SquareAsterisk = createLucideIcon(\"SquareAsterisk\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v8\",\n            key: \"napkw2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8.5 14 7-4\",\n            key: \"12hpby\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8.5 10 7 4\",\n            key: \"wwy2dy\"\n        }\n    ]\n]);\nconst SquareCode = createLucideIcon(\"SquareCode\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 10-2 2 2 2\",\n            key: \"p6et6i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 14 2-2-2-2\",\n            key: \"m075q2\"\n        }\n    ]\n]);\nconst SquareDashedBottomCode = createLucideIcon(\"SquareDashedBottomCode\", [\n    [\n        \"path\",\n        {\n            d: \"m10 10-2 2 2 2\",\n            key: \"p6et6i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 14 2-2-2-2\",\n            key: \"m075q2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2\",\n            key: \"as5y1o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 21h1\",\n            key: \"15o7lz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 21h1\",\n            key: \"v9vybs\"\n        }\n    ]\n]);\nconst SquareDashedBottom = createLucideIcon(\"SquareDashedBottom\", [\n    [\n        \"path\",\n        {\n            d: \"M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2\",\n            key: \"as5y1o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 21h1\",\n            key: \"15o7lz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 21h1\",\n            key: \"v9vybs\"\n        }\n    ]\n]);\nconst SquareDot = createLucideIcon(\"SquareDot\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"1\",\n            key: \"41hilf\"\n        }\n    ]\n]);\nconst SquareEqual = createLucideIcon(\"SquareEqual\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 10h10\",\n            key: \"1101jm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 14h10\",\n            key: \"1mhdw3\"\n        }\n    ]\n]);\nconst SquareSlash = createLucideIcon(\"SquareSlash\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"15\",\n            y1: \"15\",\n            y2: \"9\",\n            key: \"1dfufj\"\n        }\n    ]\n]);\nconst SquareStack = createLucideIcon(\"SquareStack\", [\n    [\n        \"path\",\n        {\n            d: \"M4 10c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2\",\n            key: \"4i38lg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 16c-1.1 0-2-.9-2-2v-4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2\",\n            key: \"mlte4a\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"8\",\n            x: \"14\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"1fa9i4\"\n        }\n    ]\n]);\nconst Square = createLucideIcon(\"Square\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ]\n]);\nconst Squirrel = createLucideIcon(\"Squirrel\", [\n    [\n        \"path\",\n        {\n            d: \"M18 6a4 4 0 0 0-4 4 7 7 0 0 0-7 7c0-5 4-5 4-10.5a4.5 4.5 0 1 0-9 0 2.5 2.5 0 0 0 5 0C7 10 3 11 3 17c0 2.8 2.2 5 5 5h10\",\n            key: \"980v8a\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 20c0-1.7 1.3-3 3-3h1a2 2 0 0 0 2-2v-2a4 4 0 0 0-4-4V4\",\n            key: \"19wibc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.2 22a3 3 0 0 0-2.2-5\",\n            key: \"13bpac\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 13h.01\",\n            key: \"9veqaj\"\n        }\n    ]\n]);\nconst Stamp = createLucideIcon(\"Stamp\", [\n    [\n        \"path\",\n        {\n            d: \"M5 22h14\",\n            key: \"ehvnwv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.27 13.73A2.5 2.5 0 0 0 17.5 13h-11A2.5 2.5 0 0 0 4 15.5V17a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1v-1.5c0-.66-.26-1.3-.73-1.77Z\",\n            key: \"1sy9ra\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 13V8.5C14 7 15 7 15 5a3 3 0 0 0-3-3c-1.66 0-3 1-3 3s1 2 1 3.5V13\",\n            key: \"cnxgux\"\n        }\n    ]\n]);\nconst StarHalf = createLucideIcon(\"StarHalf\", [\n    [\n        \"path\",\n        {\n            d: \"M12 17.8 5.8 21 7 14.1 2 9.3l7-1L12 2\",\n            key: \"nare05\"\n        }\n    ]\n]);\nconst StarOff = createLucideIcon(\"StarOff\", [\n    [\n        \"path\",\n        {\n            d: \"M8.34 8.34 2 9.27l5 4.87L5.82 21 12 17.77 18.18 21l-.59-3.43\",\n            key: \"16m0ql\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.42 12.76 22 9.27l-6.91-1L12 2l-1.44 2.91\",\n            key: \"1vt8nq\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Star = createLucideIcon(\"Star\", [\n    [\n        \"polygon\",\n        {\n            points: \"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\",\n            key: \"8f66p6\"\n        }\n    ]\n]);\nconst StepBack = createLucideIcon(\"StepBack\", [\n    [\n        \"line\",\n        {\n            x1: \"18\",\n            x2: \"18\",\n            y1: \"20\",\n            y2: \"4\",\n            key: \"cun8e5\"\n        }\n    ],\n    [\n        \"polygon\",\n        {\n            points: \"14,20 4,12 14,4\",\n            key: \"ypakod\"\n        }\n    ]\n]);\nconst StepForward = createLucideIcon(\"StepForward\", [\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"6\",\n            y1: \"4\",\n            y2: \"20\",\n            key: \"fy8qot\"\n        }\n    ],\n    [\n        \"polygon\",\n        {\n            points: \"10,4 20,12 10,20\",\n            key: \"1mc1pf\"\n        }\n    ]\n]);\nconst Stethoscope = createLucideIcon(\"Stethoscope\", [\n    [\n        \"path\",\n        {\n            d: \"M4.8 2.3A.3.3 0 1 0 5 2H4a2 2 0 0 0-2 2v5a6 6 0 0 0 6 6v0a6 6 0 0 0 6-6V4a2 2 0 0 0-2-2h-1a.2.2 0 1 0 .3.3\",\n            key: \"1jd90r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 15v1a6 6 0 0 0 6 6v0a6 6 0 0 0 6-6v-4\",\n            key: \"126ukv\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"20\",\n            cy: \"10\",\n            r: \"2\",\n            key: \"ts1r5v\"\n        }\n    ]\n]);\nconst Sticker = createLucideIcon(\"Sticker\", [\n    [\n        \"path\",\n        {\n            d: \"M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z\",\n            key: \"1wis1t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 3v6h6\",\n            key: \"edgan2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 16s.8 1 2 1c1.3 0 2-1 2-1\",\n            key: \"1vvgv3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 13h0\",\n            key: \"jdup5h\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 13h0\",\n            key: \"l4i2ga\"\n        }\n    ]\n]);\nconst StickyNote = createLucideIcon(\"StickyNote\", [\n    [\n        \"path\",\n        {\n            d: \"M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z\",\n            key: \"1wis1t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 3v6h6\",\n            key: \"edgan2\"\n        }\n    ]\n]);\nconst StopCircle = createLucideIcon(\"StopCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"6\",\n            x: \"9\",\n            y: \"9\",\n            key: \"1wrtvo\"\n        }\n    ]\n]);\nconst Store = createLucideIcon(\"Store\", [\n    [\n        \"path\",\n        {\n            d: \"m2 7 4.41-4.41A2 2 0 0 1 7.83 2h8.34a2 2 0 0 1 1.42.59L22 7\",\n            key: \"ztvudi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\",\n            key: \"1b2hhj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 22v-4a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4\",\n            key: \"2ebpfo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 7h20\",\n            key: \"1fcdvo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 7v3a2 2 0 0 1-2 2v0a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 16 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 12 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 8 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 4 12v0a2 2 0 0 1-2-2V7\",\n            key: \"jon5kx\"\n        }\n    ]\n]);\nconst StretchHorizontal = createLucideIcon(\"StretchHorizontal\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"6\",\n            x: \"2\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"qdearl\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"6\",\n            x: \"2\",\n            y: \"14\",\n            rx: \"2\",\n            key: \"1xrn6j\"\n        }\n    ]\n]);\nconst StretchVertical = createLucideIcon(\"StretchVertical\", [\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"20\",\n            x: \"4\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"19qu7m\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"6\",\n            height: \"20\",\n            x: \"14\",\n            y: \"2\",\n            rx: \"2\",\n            key: \"24v0nk\"\n        }\n    ]\n]);\nconst Strikethrough = createLucideIcon(\"Strikethrough\", [\n    [\n        \"path\",\n        {\n            d: \"M16 4H9a3 3 0 0 0-2.83 4\",\n            key: \"43sutm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 12a4 4 0 0 1 0 8H6\",\n            key: \"nlfj13\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"20\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"1e0a9i\"\n        }\n    ]\n]);\nconst Subscript = createLucideIcon(\"Subscript\", [\n    [\n        \"path\",\n        {\n            d: \"m4 5 8 8\",\n            key: \"1eunvl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 5-8 8\",\n            key: \"1ah0jp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 19h-4c0-1.5.44-2 1.5-2.5S20 15.33 20 14c0-.47-.17-.93-.48-1.29a2.11 2.11 0 0 0-2.62-.44c-.42.24-.74.62-.9 1.07\",\n            key: \"e8ta8j\"\n        }\n    ]\n]);\nconst Subtitles = createLucideIcon(\"Subtitles\", [\n    [\n        \"path\",\n        {\n            d: \"M7 13h4\",\n            key: \"1m1xj0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 13h2\",\n            key: \"vgjay3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 9h2\",\n            key: \"1q072n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 9h4\",\n            key: \"o7fxw0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10Z\",\n            key: \"12yqn6\"\n        }\n    ]\n]);\nconst SunDim = createLucideIcon(\"SunDim\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"4\",\n            key: \"4exip2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 4h.01\",\n            key: \"1ujb9j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 12h.01\",\n            key: \"1ykeid\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20h.01\",\n            key: \"zekei9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 12h.01\",\n            key: \"158zrr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.657 6.343h.01\",\n            key: \"31pqzk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.657 17.657h.01\",\n            key: \"jehnf4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.343 17.657h.01\",\n            key: \"gdk6ow\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.343 6.343h.01\",\n            key: \"1uurf0\"\n        }\n    ]\n]);\nconst SunMedium = createLucideIcon(\"SunMedium\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"4\",\n            key: \"4exip2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 3v1\",\n            key: \"1asbbs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v1\",\n            key: \"1wcdkc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12h1\",\n            key: \"lp3yf2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 12h1\",\n            key: \"1vloll\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18.364 5.636-.707.707\",\n            key: \"1hakh0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6.343 17.657-.707.707\",\n            key: \"18m9nf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5.636 5.636.707.707\",\n            key: \"1xv1c5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17.657 17.657.707.707\",\n            key: \"vl76zb\"\n        }\n    ]\n]);\nconst SunMoon = createLucideIcon(\"SunMoon\", [\n    [\n        \"path\",\n        {\n            d: \"M12 8a2.83 2.83 0 0 0 4 4 4 4 0 1 1-4-4\",\n            key: \"1fu5g2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v2\",\n            key: \"tus03m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v2\",\n            key: \"1lh1kg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.9 4.9 1.4 1.4\",\n            key: \"b9915j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17.7 17.7 1.4 1.4\",\n            key: \"qc3ed3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12h2\",\n            key: \"1t8f8n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 12h2\",\n            key: \"1q8mjw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6.3 17.7-1.4 1.4\",\n            key: \"5gca6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.1 4.9-1.4 1.4\",\n            key: \"wpu9u6\"\n        }\n    ]\n]);\nconst SunSnow = createLucideIcon(\"SunSnow\", [\n    [\n        \"path\",\n        {\n            d: \"M10 9a3 3 0 1 0 0 6\",\n            key: \"6zmtdl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12h1\",\n            key: \"1uaihz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 21V3\",\n            key: \"1llu3z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 4V3\",\n            key: \"pkzwkn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 21v-1\",\n            key: \"1u8rkd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.64 18.36.7-.7\",\n            key: \"105rm9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.34 6.34-.7-.7\",\n            key: \"d3unjp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 12h8\",\n            key: \"4f43i9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 4-3 3\",\n            key: \"15jcng\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 17 3 3\",\n            key: \"6tlq38\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 15-3-3 3-3\",\n            key: \"1nlnje\"\n        }\n    ]\n]);\nconst Sun = createLucideIcon(\"Sun\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"4\",\n            key: \"4exip2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v2\",\n            key: \"tus03m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v2\",\n            key: \"1lh1kg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.93 4.93 1.41 1.41\",\n            key: \"149t6j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17.66 17.66 1.41 1.41\",\n            key: \"ptbguv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12h2\",\n            key: \"1t8f8n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 12h2\",\n            key: \"1q8mjw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6.34 17.66-1.41 1.41\",\n            key: \"1m8zz5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.07 4.93-1.41 1.41\",\n            key: \"1shlcs\"\n        }\n    ]\n]);\nconst Sunrise = createLucideIcon(\"Sunrise\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2v8\",\n            key: \"1q4o3n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.93 10.93 1.41 1.41\",\n            key: \"2a7f42\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 18h2\",\n            key: \"j10viu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 18h2\",\n            key: \"wocana\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.07 10.93-1.41 1.41\",\n            key: \"15zs5n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 22H2\",\n            key: \"19qnx5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 6 4-4 4 4\",\n            key: \"ybng9g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18a4 4 0 0 0-8 0\",\n            key: \"1lzouq\"\n        }\n    ]\n]);\nconst Sunset = createLucideIcon(\"Sunset\", [\n    [\n        \"path\",\n        {\n            d: \"M12 10V2\",\n            key: \"16sf7g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.93 10.93 1.41 1.41\",\n            key: \"2a7f42\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 18h2\",\n            key: \"j10viu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 18h2\",\n            key: \"wocana\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.07 10.93-1.41 1.41\",\n            key: \"15zs5n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 22H2\",\n            key: \"19qnx5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 6-4 4-4-4\",\n            key: \"6wukr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18a4 4 0 0 0-8 0\",\n            key: \"1lzouq\"\n        }\n    ]\n]);\nconst Superscript = createLucideIcon(\"Superscript\", [\n    [\n        \"path\",\n        {\n            d: \"m4 19 8-8\",\n            key: \"hr47gm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 19-8-8\",\n            key: \"1dhhmo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 12h-4c0-1.5.442-2 1.5-2.5S20 8.334 20 7.002c0-.472-.17-.93-.484-1.29a2.105 2.105 0 0 0-2.617-.436c-.42.239-.738.614-.899 1.06\",\n            key: \"1dfcux\"\n        }\n    ]\n]);\nconst SwissFranc = createLucideIcon(\"SwissFranc\", [\n    [\n        \"path\",\n        {\n            d: \"M10 21V3h8\",\n            key: \"br2l0g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 16h9\",\n            key: \"2py0wn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 9.5h7\",\n            key: \"13dmhz\"\n        }\n    ]\n]);\nconst SwitchCamera = createLucideIcon(\"SwitchCamera\", [\n    [\n        \"path\",\n        {\n            d: \"M11 19H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h5\",\n            key: \"mtk2lu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 5h7a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-5\",\n            key: \"120jsl\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"1v7zrd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 22-3-3 3-3\",\n            key: \"kgdoj7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 2 3 3-3 3\",\n            key: \"1fnbkv\"\n        }\n    ]\n]);\nconst Sword = createLucideIcon(\"Sword\", [\n    [\n        \"polyline\",\n        {\n            points: \"14.5 17.5 3 6 3 3 6 3 17.5 14.5\",\n            key: \"1hfsw2\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"13\",\n            x2: \"19\",\n            y1: \"19\",\n            y2: \"13\",\n            key: \"1vrmhu\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"20\",\n            y1: \"16\",\n            y2: \"20\",\n            key: \"1bron3\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"21\",\n            y1: \"21\",\n            y2: \"19\",\n            key: \"13pww6\"\n        }\n    ]\n]);\nconst Swords = createLucideIcon(\"Swords\", [\n    [\n        \"polyline\",\n        {\n            points: \"14.5 17.5 3 6 3 3 6 3 17.5 14.5\",\n            key: \"1hfsw2\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"13\",\n            x2: \"19\",\n            y1: \"19\",\n            y2: \"13\",\n            key: \"1vrmhu\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"20\",\n            y1: \"16\",\n            y2: \"20\",\n            key: \"1bron3\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"21\",\n            y1: \"21\",\n            y2: \"19\",\n            key: \"13pww6\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"14.5 6.5 18 3 21 3 21 6 17.5 9.5\",\n            key: \"hbey2j\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"5\",\n            x2: \"9\",\n            y1: \"14\",\n            y2: \"18\",\n            key: \"1hf58s\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"7\",\n            x2: \"4\",\n            y1: \"17\",\n            y2: \"20\",\n            key: \"pidxm4\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"5\",\n            y1: \"19\",\n            y2: \"21\",\n            key: \"1pehsh\"\n        }\n    ]\n]);\nconst Syringe = createLucideIcon(\"Syringe\", [\n    [\n        \"path\",\n        {\n            d: \"m18 2 4 4\",\n            key: \"22kx64\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17 7 3-3\",\n            key: \"1w1zoj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 9 8.7 19.3c-1 1-2.5 1-3.4 0l-.6-.6c-1-1-1-2.5 0-3.4L15 5\",\n            key: \"1exhtz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 11 4 4\",\n            key: \"rovt3i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 19-3 3\",\n            key: \"59f2uf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 4 6 6\",\n            key: \"yqp9t2\"\n        }\n    ]\n]);\nconst Table2 = createLucideIcon(\"Table2\", [\n    [\n        \"path\",\n        {\n            d: \"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\",\n            key: \"gugj83\"\n        }\n    ]\n]);\nconst TableProperties = createLucideIcon(\"TableProperties\", [\n    [\n        \"path\",\n        {\n            d: \"M15 3v18\",\n            key: \"14nvp0\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 9H3\",\n            key: \"1338ky\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 15H3\",\n            key: \"9uk58r\"\n        }\n    ]\n]);\nconst Table = createLucideIcon(\"Table\", [\n    [\n        \"path\",\n        {\n            d: \"M12 3v18\",\n            key: \"108xh3\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 9h18\",\n            key: \"1pudct\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 15h18\",\n            key: \"5xshup\"\n        }\n    ]\n]);\nconst TabletSmartphone = createLucideIcon(\"TabletSmartphone\", [\n    [\n        \"rect\",\n        {\n            width: \"10\",\n            height: \"14\",\n            x: \"3\",\n            y: \"8\",\n            rx: \"2\",\n            key: \"1vrsiq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4\",\n            key: \"1j4zmg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 18h.01\",\n            key: \"lrp35t\"\n        }\n    ]\n]);\nconst Tablet = createLucideIcon(\"Tablet\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"20\",\n            x: \"4\",\n            y: \"2\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"76otgf\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"1dp563\"\n        }\n    ]\n]);\nconst Tablets = createLucideIcon(\"Tablets\", [\n    [\n        \"circle\",\n        {\n            cx: \"7\",\n            cy: \"7\",\n            r: \"5\",\n            key: \"x29byf\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17\",\n            cy: \"17\",\n            r: \"5\",\n            key: \"1op1d2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17h10\",\n            key: \"ls21zv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3.46 10.54 7.08-7.08\",\n            key: \"1rehiu\"\n        }\n    ]\n]);\nconst Tag = createLucideIcon(\"Tag\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z\",\n            key: \"14b2ls\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 7h.01\",\n            key: \"7u93v4\"\n        }\n    ]\n]);\nconst Tags = createLucideIcon(\"Tags\", [\n    [\n        \"path\",\n        {\n            d: \"M9 5H2v7l6.29 6.29c.94.94 2.48.94 3.42 0l3.58-3.58c.94-.94.94-2.48 0-3.42L9 5Z\",\n            key: \"gt587u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 9.01V9\",\n            key: \"1flxpt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 5 6.3 6.3a2.4 2.4 0 0 1 0 3.4L17 19\",\n            key: \"1cbfv1\"\n        }\n    ]\n]);\nconst Tally1 = createLucideIcon(\"Tally1\", [\n    [\n        \"path\",\n        {\n            d: \"M4 4v16\",\n            key: \"6qkkli\"\n        }\n    ]\n]);\nconst Tally2 = createLucideIcon(\"Tally2\", [\n    [\n        \"path\",\n        {\n            d: \"M4 4v16\",\n            key: \"6qkkli\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 4v16\",\n            key: \"81ygyz\"\n        }\n    ]\n]);\nconst Tally3 = createLucideIcon(\"Tally3\", [\n    [\n        \"path\",\n        {\n            d: \"M4 4v16\",\n            key: \"6qkkli\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 4v16\",\n            key: \"81ygyz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 4v16\",\n            key: \"12vmem\"\n        }\n    ]\n]);\nconst Tally4 = createLucideIcon(\"Tally4\", [\n    [\n        \"path\",\n        {\n            d: \"M4 4v16\",\n            key: \"6qkkli\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 4v16\",\n            key: \"81ygyz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 4v16\",\n            key: \"12vmem\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 4v16\",\n            key: \"8ij5ei\"\n        }\n    ]\n]);\nconst Tally5 = createLucideIcon(\"Tally5\", [\n    [\n        \"path\",\n        {\n            d: \"M4 4v16\",\n            key: \"6qkkli\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 4v16\",\n            key: \"81ygyz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 4v16\",\n            key: \"12vmem\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 4v16\",\n            key: \"8ij5ei\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 6 2 18\",\n            key: \"h9moai\"\n        }\n    ]\n]);\nconst Target = createLucideIcon(\"Target\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"6\",\n            key: \"1vlfrh\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"1c9p78\"\n        }\n    ]\n]);\nconst Tent = createLucideIcon(\"Tent\", [\n    [\n        \"path\",\n        {\n            d: \"M19 20 10 4\",\n            key: \"1ak541\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 20 9-16\",\n            key: \"11dtj9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 20h18\",\n            key: \"1l19wn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 15-3 5\",\n            key: \"1c5kej\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 15 3 5\",\n            key: \"odkmhi\"\n        }\n    ]\n]);\nconst TerminalSquare = createLucideIcon(\"TerminalSquare\", [\n    [\n        \"path\",\n        {\n            d: \"m7 11 2-2-2-2\",\n            key: \"1lz0vl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 13h4\",\n            key: \"1p7l4v\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ]\n]);\nconst Terminal = createLucideIcon(\"Terminal\", [\n    [\n        \"polyline\",\n        {\n            points: \"4 17 10 11 4 5\",\n            key: \"akl6gq\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"20\",\n            y1: \"19\",\n            y2: \"19\",\n            key: \"q2wloq\"\n        }\n    ]\n]);\nconst TestTube2 = createLucideIcon(\"TestTube2\", [\n    [\n        \"path\",\n        {\n            d: \"M21 7 6.82 21.18a2.83 2.83 0 0 1-3.99-.01v0a2.83 2.83 0 0 1 0-4L17 3\",\n            key: \"dg8b2p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 2 6 6\",\n            key: \"1gw87d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 16H4\",\n            key: \"1cjfip\"\n        }\n    ]\n]);\nconst TestTube = createLucideIcon(\"TestTube\", [\n    [\n        \"path\",\n        {\n            d: \"M14.5 2v17.5c0 1.4-1.1 2.5-2.5 2.5h0c-1.4 0-2.5-1.1-2.5-2.5V2\",\n            key: \"187lwq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.5 2h7\",\n            key: \"csnxdl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14.5 16h-5\",\n            key: \"1ox875\"\n        }\n    ]\n]);\nconst TestTubes = createLucideIcon(\"TestTubes\", [\n    [\n        \"path\",\n        {\n            d: \"M9 2v17.5A2.5 2.5 0 0 1 6.5 22v0A2.5 2.5 0 0 1 4 19.5V2\",\n            key: \"12z67u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 2v17.5a2.5 2.5 0 0 1-2.5 2.5v0a2.5 2.5 0 0 1-2.5-2.5V2\",\n            key: \"1q2nfy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 2h7\",\n            key: \"7s29d5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 2h7\",\n            key: \"7sicin\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 16H4\",\n            key: \"1bfye3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 16h-5\",\n            key: \"ddnjpe\"\n        }\n    ]\n]);\nconst TextCursorInput = createLucideIcon(\"TextCursorInput\", [\n    [\n        \"path\",\n        {\n            d: \"M5 4h1a3 3 0 0 1 3 3 3 3 0 0 1 3-3h1\",\n            key: \"18xjzo\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 20h-1a3 3 0 0 1-3-3 3 3 0 0 1-3 3H5\",\n            key: \"fj48gi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 16H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h1\",\n            key: \"1n9rhb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 8h7a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-7\",\n            key: \"13ksps\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 7v10\",\n            key: \"1vc8ob\"\n        }\n    ]\n]);\nconst TextCursor = createLucideIcon(\"TextCursor\", [\n    [\n        \"path\",\n        {\n            d: \"M17 22h-1a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h1\",\n            key: \"uvaxm9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 22h1a4 4 0 0 0 4-4v-1\",\n            key: \"11xy8d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 2h1a4 4 0 0 1 4 4v1\",\n            key: \"1uw06m\"\n        }\n    ]\n]);\nconst TextQuote = createLucideIcon(\"TextQuote\", [\n    [\n        \"path\",\n        {\n            d: \"M17 6H3\",\n            key: \"16j9eg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12H8\",\n            key: \"scolzb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 18H8\",\n            key: \"1wfozv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12v6\",\n            key: \"fv4c87\"\n        }\n    ]\n]);\nconst TextSelect = createLucideIcon(\"TextSelect\", [\n    [\n        \"path\",\n        {\n            d: \"M5 3a2 2 0 0 0-2 2\",\n            key: \"y57alp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 3a2 2 0 0 1 2 2\",\n            key: \"18rm91\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 19a2 2 0 0 1-2 2\",\n            key: \"1j7049\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 21a2 2 0 0 1-2-2\",\n            key: \"sbafld\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 3h1\",\n            key: \"1yesri\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 21h1\",\n            key: \"15o7lz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 3h1\",\n            key: \"1ec4yj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 21h1\",\n            key: \"v9vybs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 9v1\",\n            key: \"1r0deq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 9v1\",\n            key: \"mxsmne\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 14v1\",\n            key: \"vnatye\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 14v1\",\n            key: \"169vum\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"7\",\n            x2: \"15\",\n            y1: \"8\",\n            y2: \"8\",\n            key: \"1758g8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"7\",\n            x2: \"17\",\n            y1: \"12\",\n            y2: \"12\",\n            key: \"197423\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"7\",\n            x2: \"13\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"37cgm6\"\n        }\n    ]\n]);\nconst Text = createLucideIcon(\"Text\", [\n    [\n        \"path\",\n        {\n            d: \"M17 6.1H3\",\n            key: \"wptmhv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12.1H3\",\n            key: \"1j38uz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.1 18H3\",\n            key: \"1nb16a\"\n        }\n    ]\n]);\nconst ThermometerSnowflake = createLucideIcon(\"ThermometerSnowflake\", [\n    [\n        \"path\",\n        {\n            d: \"M2 12h10\",\n            key: \"19562f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 4v16\",\n            key: \"81ygyz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 9 3 3-3 3\",\n            key: \"1sas0l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 6 9 9 6 6\",\n            key: \"pfrgxu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 18 3-3 1.5 1.5\",\n            key: \"1e277p\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z\",\n            key: \"iof6y5\"\n        }\n    ]\n]);\nconst ThermometerSun = createLucideIcon(\"ThermometerSun\", [\n    [\n        \"path\",\n        {\n            d: \"M12 9a4 4 0 0 0-2 7.5\",\n            key: \"1jvsq6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 3v2\",\n            key: \"1w22ol\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6.6 18.4-1.4 1.4\",\n            key: \"w2yidj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z\",\n            key: \"iof6y5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 13H2\",\n            key: \"118le4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.34 7.34 4.93 5.93\",\n            key: \"1brd51\"\n        }\n    ]\n]);\nconst Thermometer = createLucideIcon(\"Thermometer\", [\n    [\n        \"path\",\n        {\n            d: \"M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z\",\n            key: \"17jzev\"\n        }\n    ]\n]);\nconst ThumbsDown = createLucideIcon(\"ThumbsDown\", [\n    [\n        \"path\",\n        {\n            d: \"M17 14V2\",\n            key: \"8ymqnk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22h0a3.13 3.13 0 0 1-3-3.88Z\",\n            key: \"s6e0r\"\n        }\n    ]\n]);\nconst ThumbsUp = createLucideIcon(\"ThumbsUp\", [\n    [\n        \"path\",\n        {\n            d: \"M7 10v12\",\n            key: \"1qc93n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2h0a3.13 3.13 0 0 1 3 3.88Z\",\n            key: \"y3tblf\"\n        }\n    ]\n]);\nconst Ticket = createLucideIcon(\"Ticket\", [\n    [\n        \"path\",\n        {\n            d: \"M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z\",\n            key: \"qn84l0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 5v2\",\n            key: \"dyzc3o\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 17v2\",\n            key: \"1ont0d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 11v2\",\n            key: \"1wjjxi\"\n        }\n    ]\n]);\nconst TimerOff = createLucideIcon(\"TimerOff\", [\n    [\n        \"path\",\n        {\n            d: \"M10 2h4\",\n            key: \"n1abiw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.6 11a8 8 0 0 0 1.7 8.7 8 8 0 0 0 8.7 1.7\",\n            key: \"10he05\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.4 7.4a8 8 0 0 1 10.3 1 8 8 0 0 1 .9 10.2\",\n            key: \"15f7sh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v-2\",\n            key: \"fwoke6\"\n        }\n    ]\n]);\nconst TimerReset = createLucideIcon(\"TimerReset\", [\n    [\n        \"path\",\n        {\n            d: \"M10 2h4\",\n            key: \"n1abiw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 14v-4\",\n            key: \"1evpnu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 13a8 8 0 0 1 8-7 8 8 0 1 1-5.3 14L4 17.6\",\n            key: \"1ts96g\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 17H4v5\",\n            key: \"8t5av\"\n        }\n    ]\n]);\nconst Timer = createLucideIcon(\"Timer\", [\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"14\",\n            y1: \"2\",\n            y2: \"2\",\n            key: \"14vaq8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"15\",\n            y1: \"14\",\n            y2: \"11\",\n            key: \"17fdiu\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"14\",\n            r: \"8\",\n            key: \"1e1u0o\"\n        }\n    ]\n]);\nconst ToggleLeft = createLucideIcon(\"ToggleLeft\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"12\",\n            x: \"2\",\n            y: \"6\",\n            rx: \"6\",\n            ry: \"6\",\n            key: \"f2vt7d\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"1nvbw3\"\n        }\n    ]\n]);\nconst ToggleRight = createLucideIcon(\"ToggleRight\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"12\",\n            x: \"2\",\n            y: \"6\",\n            rx: \"6\",\n            ry: \"6\",\n            key: \"f2vt7d\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16\",\n            cy: \"12\",\n            r: \"2\",\n            key: \"4ma0v8\"\n        }\n    ]\n]);\nconst Tornado = createLucideIcon(\"Tornado\", [\n    [\n        \"path\",\n        {\n            d: \"M21 4H3\",\n            key: \"1hwok0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 8H6\",\n            key: \"41n648\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 12H9\",\n            key: \"1g4lpz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16h-6\",\n            key: \"1j5d54\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 20H9\",\n            key: \"39obr8\"\n        }\n    ]\n]);\nconst TouchpadOff = createLucideIcon(\"TouchpadOff\", [\n    [\n        \"path\",\n        {\n            d: \"M4 4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16\",\n            key: \"lnt0bk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 14h12\",\n            key: \"d8icqz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 14h-2\",\n            key: \"jrx26d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v-6\",\n            key: \"1rm09r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 2 20 20\",\n            key: \"1ooewy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 16V6a2 2 0 0 0-2-2H10\",\n            key: \"11y8e4\"\n        }\n    ]\n]);\nconst Touchpad = createLucideIcon(\"Touchpad\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"16\",\n            x: \"2\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"18n3k1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 14h20\",\n            key: \"myj16y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v-6\",\n            key: \"1rm09r\"\n        }\n    ]\n]);\nconst TowerControl = createLucideIcon(\"TowerControl\", [\n    [\n        \"path\",\n        {\n            d: \"M18.2 12.27 20 6H4l1.8 6.27a1 1 0 0 0 .95.73h10.5a1 1 0 0 0 .96-.73Z\",\n            key: \"1pledb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 13v9\",\n            key: \"hmv0ci\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 22v-9\",\n            key: \"ylnf1u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 6 1 7\",\n            key: \"dpdgam\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 6-1 7\",\n            key: \"ls7zgu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 6V2\",\n            key: \"1pj48d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 2h-2\",\n            key: \"mj6ths\"\n        }\n    ]\n]);\nconst ToyBrick = createLucideIcon(\"ToyBrick\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"12\",\n            x: \"3\",\n            y: \"8\",\n            rx: \"1\",\n            key: \"158fvp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 8V5c0-.6-.4-1-1-1H6a1 1 0 0 0-1 1v3\",\n            key: \"s0042v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 8V5c0-.6-.4-1-1-1h-3a1 1 0 0 0-1 1v3\",\n            key: \"9wmeh2\"\n        }\n    ]\n]);\nconst Tractor = createLucideIcon(\"Tractor\", [\n    [\n        \"path\",\n        {\n            d: \"M3 4h9l1 7\",\n            key: \"1ftpo8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 11V4\",\n            key: \"9ft8pt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 10V4\",\n            key: \"1y5f7n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 5c-.6 0-1 .4-1 1v5.6\",\n            key: \"10zbvr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 11 11 .9c.6 0 .9.5.8 1.1l-.8 5h-1\",\n            key: \"2w242w\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"7\",\n            cy: \"15\",\n            r: \".5\",\n            key: \"fbsjqy\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"7\",\n            cy: \"15\",\n            r: \"5\",\n            key: \"ddtuc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 18h-5\",\n            key: \"bq60fd\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"18\",\n            r: \"2\",\n            key: \"1emm8v\"\n        }\n    ]\n]);\nconst TrafficCone = createLucideIcon(\"TrafficCone\", [\n    [\n        \"path\",\n        {\n            d: \"M9.3 6.2a4.55 4.55 0 0 0 5.4 0\",\n            key: \"flyxqv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.9 10.7c.9.8 2.4 1.3 4.1 1.3s3.2-.5 4.1-1.3\",\n            key: \"1nlxxg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13.9 3.5a1.93 1.93 0 0 0-3.8-.1l-3 10c-.1.2-.1.4-.1.6 0 1.7 2.2 3 5 3s5-1.3 5-3c0-.2 0-.4-.1-.5Z\",\n            key: \"vz7x1l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.5 12.2-4.7 2.7c-.5.3-.8.7-.8 1.1s.3.8.8 1.1l7.6 4.5c.9.5 2.1.5 3 0l7.6-4.5c.7-.3 1-.7 1-1.1s-.3-.8-.8-1.1l-4.7-2.8\",\n            key: \"1xfzlw\"\n        }\n    ]\n]);\nconst TrainFrontTunnel = createLucideIcon(\"TrainFrontTunnel\", [\n    [\n        \"path\",\n        {\n            d: \"M2 22V12a10 10 0 1 1 20 0v10\",\n            key: \"o0fyp0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 6.8v1.4a3 2.8 0 1 1-6 0V6.8\",\n            key: \"m8q3n9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 15h.01\",\n            key: \"44in9x\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 15h.01\",\n            key: \"5mohn5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 19a4 4 0 0 1-4-4v-3a6 6 0 1 1 12 0v3a4 4 0 0 1-4 4Z\",\n            key: \"hckbmu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 19-2 3\",\n            key: \"iij7hm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 19 2 3\",\n            key: \"npx8sa\"\n        }\n    ]\n]);\nconst TrainFront = createLucideIcon(\"TrainFront\", [\n    [\n        \"path\",\n        {\n            d: \"M8 3.1V7a4 4 0 0 0 8 0V3.1\",\n            key: \"1v71zp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 15-1-1\",\n            key: \"1yrq24\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 15 1-1\",\n            key: \"1t0d6s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9 19c-2.8 0-5-2.2-5-5v-4a8 8 0 0 1 16 0v4c0 2.8-2.2 5-5 5Z\",\n            key: \"1p0hjs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 19-2 3\",\n            key: \"13i0xs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 19 2 3\",\n            key: \"xo31yx\"\n        }\n    ]\n]);\nconst TrainTrack = createLucideIcon(\"TrainTrack\", [\n    [\n        \"path\",\n        {\n            d: \"M2 17 17 2\",\n            key: \"18b09t\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 14 8 8\",\n            key: \"1gv9hu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 11 8 8\",\n            key: \"189pqp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 8 8 8\",\n            key: \"1imecy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m11 5 8 8\",\n            key: \"ummqn6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 2 8 8\",\n            key: \"1vk7dn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 22 22 7\",\n            key: \"15mb1i\"\n        }\n    ]\n]);\nconst TramFront = createLucideIcon(\"TramFront\", [\n    [\n        \"rect\",\n        {\n            width: \"16\",\n            height: \"16\",\n            x: \"4\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"1wxw4b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 11h16\",\n            key: \"mpoxn0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 3v8\",\n            key: \"1h2ygw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 19-2 3\",\n            key: \"13i0xs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 22-2-3\",\n            key: \"1p0ohu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 15h0\",\n            key: \"q9eq1f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 15h0\",\n            key: \"pzrbjg\"\n        }\n    ]\n]);\nconst Trash2 = createLucideIcon(\"Trash2\", [\n    [\n        \"path\",\n        {\n            d: \"M3 6h18\",\n            key: \"d0wm0j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\",\n            key: \"4alrt4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\",\n            key: \"v07s0e\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"10\",\n            y1: \"11\",\n            y2: \"17\",\n            key: \"1uufr5\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"14\",\n            y1: \"11\",\n            y2: \"17\",\n            key: \"xtxkd\"\n        }\n    ]\n]);\nconst Trash = createLucideIcon(\"Trash\", [\n    [\n        \"path\",\n        {\n            d: \"M3 6h18\",\n            key: \"d0wm0j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\",\n            key: \"4alrt4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\",\n            key: \"v07s0e\"\n        }\n    ]\n]);\nconst TreeDeciduous = createLucideIcon(\"TreeDeciduous\", [\n    [\n        \"path\",\n        {\n            d: \"M8 19h8a4 4 0 0 0 3.8-2.8 4 4 0 0 0-1.6-4.5c1-1.1 1-2.7.4-4-.7-1.2-2.2-2-3.6-1.7a3 3 0 0 0-3-3 3 3 0 0 0-3 3c-1.4-.2-2.9.5-3.6 1.7-.7 1.3-.5 2.9.4 4a4 4 0 0 0-1.6 4.5A4 4 0 0 0 8 19Z\",\n            key: \"12ivfl\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 19v3\",\n            key: \"npa21l\"\n        }\n    ]\n]);\nconst TreePine = createLucideIcon(\"TreePine\", [\n    [\n        \"path\",\n        {\n            d: \"m17 14 3 3.3a1 1 0 0 1-.7 1.7H4.7a1 1 0 0 1-.7-1.7L7 14h-.3a1 1 0 0 1-.7-1.7L9 9h-.2A1 1 0 0 1 8 7.3L12 3l4 4.3a1 1 0 0 1-.8 1.7H15l3 3.3a1 1 0 0 1-.7 1.7H17Z\",\n            key: \"cpyugq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22v-3\",\n            key: \"kmzjlo\"\n        }\n    ]\n]);\nconst Trees = createLucideIcon(\"Trees\", [\n    [\n        \"path\",\n        {\n            d: \"M10 10v.2A3 3 0 0 1 8.9 16v0H5v0h0a3 3 0 0 1-1-5.8V10a3 3 0 0 1 6 0Z\",\n            key: \"yh07w9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 16v6\",\n            key: \"1a82de\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M13 19v3\",\n            key: \"13sx9i\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 19h8.3a1 1 0 0 0 .7-1.7L18 14h.3a1 1 0 0 0 .7-1.7L16 9h.2a1 1 0 0 0 .8-1.7L13 3l-1.4 1.5\",\n            key: \"1sj9kv\"\n        }\n    ]\n]);\nconst Trello = createLucideIcon(\"Trello\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"3\",\n            height: \"9\",\n            x: \"7\",\n            y: \"7\",\n            key: \"14n3xi\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"3\",\n            height: \"5\",\n            x: \"14\",\n            y: \"7\",\n            key: \"s4azjd\"\n        }\n    ]\n]);\nconst TrendingDown = createLucideIcon(\"TrendingDown\", [\n    [\n        \"polyline\",\n        {\n            points: \"22 17 13.5 8.5 8.5 13.5 2 7\",\n            key: \"1r2t7k\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"16 17 22 17 22 11\",\n            key: \"11uiuu\"\n        }\n    ]\n]);\nconst TrendingUp = createLucideIcon(\"TrendingUp\", [\n    [\n        \"polyline\",\n        {\n            points: \"22 7 13.5 15.5 8.5 10.5 2 17\",\n            key: \"126l90\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"16 7 22 7 22 13\",\n            key: \"kwv8wd\"\n        }\n    ]\n]);\nconst TriangleRight = createLucideIcon(\"TriangleRight\", [\n    [\n        \"path\",\n        {\n            d: \"M22 18a2 2 0 0 1-2 2H3c-1.1 0-1.3-.6-.4-1.3L20.4 4.3c.9-.7 1.6-.4 1.6.7Z\",\n            key: \"183wce\"\n        }\n    ]\n]);\nconst Triangle = createLucideIcon(\"Triangle\", [\n    [\n        \"path\",\n        {\n            d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\",\n            key: \"c3ski4\"\n        }\n    ]\n]);\nconst Trophy = createLucideIcon(\"Trophy\", [\n    [\n        \"path\",\n        {\n            d: \"M6 9H4.5a2.5 2.5 0 0 1 0-5H6\",\n            key: \"17hqa7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 9h1.5a2.5 2.5 0 0 0 0-5H18\",\n            key: \"lmptdp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 22h16\",\n            key: \"57wxv0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22\",\n            key: \"1nw9bq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22\",\n            key: \"1np0yb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 2H6v7a6 6 0 0 0 12 0V2Z\",\n            key: \"u46fv3\"\n        }\n    ]\n]);\nconst Truck = createLucideIcon(\"Truck\", [\n    [\n        \"path\",\n        {\n            d: \"M5 18H3c-.6 0-1-.4-1-1V7c0-.6.4-1 1-1h10c.6 0 1 .4 1 1v11\",\n            key: \"hs4xqm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 9h4l4 4v4c0 .6-.4 1-1 1h-2\",\n            key: \"11fp61\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"7\",\n            cy: \"18\",\n            r: \"2\",\n            key: \"19iecd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 18H9\",\n            key: \"1lyqi6\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17\",\n            cy: \"18\",\n            r: \"2\",\n            key: \"332jqn\"\n        }\n    ]\n]);\nconst Turtle = createLucideIcon(\"Turtle\", [\n    [\n        \"path\",\n        {\n            d: \"m12 10 2 4v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3a8 8 0 1 0-16 0v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3l2-4h4Z\",\n            key: \"1lbbv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.82 7.9 8 10\",\n            key: \"m9wose\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.18 7.9 12 10\",\n            key: \"p8dp2u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.93 10H20a2 2 0 0 1 0 4H2\",\n            key: \"12nsm7\"\n        }\n    ]\n]);\nconst Tv2 = createLucideIcon(\"Tv2\", [\n    [\n        \"path\",\n        {\n            d: \"M7 21h10\",\n            key: \"1b0cd5\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"14\",\n            x: \"2\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"48i651\"\n        }\n    ]\n]);\nconst Tv = createLucideIcon(\"Tv\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"15\",\n            x: \"2\",\n            y: \"7\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"10ag99\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"17 2 12 7 7 2\",\n            key: \"11pgbg\"\n        }\n    ]\n]);\nconst Twitch = createLucideIcon(\"Twitch\", [\n    [\n        \"path\",\n        {\n            d: \"M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7\",\n            key: \"c0yzno\"\n        }\n    ]\n]);\nconst Twitter = createLucideIcon(\"Twitter\", [\n    [\n        \"path\",\n        {\n            d: \"M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z\",\n            key: \"pff0z6\"\n        }\n    ]\n]);\nconst Type = createLucideIcon(\"Type\", [\n    [\n        \"polyline\",\n        {\n            points: \"4 7 4 4 20 4 20 7\",\n            key: \"1nosan\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"15\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"swin9y\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"4\",\n            y2: \"20\",\n            key: \"1tx1rr\"\n        }\n    ]\n]);\nconst Umbrella = createLucideIcon(\"Umbrella\", [\n    [\n        \"path\",\n        {\n            d: \"M22 12a10.06 10.06 1 0 0-20 0Z\",\n            key: \"1teyop\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v8a2 2 0 0 0 4 0\",\n            key: \"ulpmoc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v1\",\n            key: \"11qlp1\"\n        }\n    ]\n]);\nconst Underline = createLucideIcon(\"Underline\", [\n    [\n        \"path\",\n        {\n            d: \"M6 4v6a6 6 0 0 0 12 0V4\",\n            key: \"9kb039\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"4\",\n            x2: \"20\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"nun2al\"\n        }\n    ]\n]);\nconst Undo2 = createLucideIcon(\"Undo2\", [\n    [\n        \"path\",\n        {\n            d: \"M9 14 4 9l5-5\",\n            key: \"102s5s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5v0a5.5 5.5 0 0 1-5.5 5.5H11\",\n            key: \"llx8ln\"\n        }\n    ]\n]);\nconst UndoDot = createLucideIcon(\"UndoDot\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"17\",\n            r: \"1\",\n            key: \"1ixnty\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 7v6h6\",\n            key: \"1v2h90\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13\",\n            key: \"1r6uu6\"\n        }\n    ]\n]);\nconst Undo = createLucideIcon(\"Undo\", [\n    [\n        \"path\",\n        {\n            d: \"M3 7v6h6\",\n            key: \"1v2h90\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13\",\n            key: \"1r6uu6\"\n        }\n    ]\n]);\nconst UnfoldHorizontal = createLucideIcon(\"UnfoldHorizontal\", [\n    [\n        \"path\",\n        {\n            d: \"M16 12h6\",\n            key: \"15xry1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12H2\",\n            key: \"1jqql6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v2\",\n            key: \"tus03m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8v2\",\n            key: \"1woqiv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 14v2\",\n            key: \"8jcxud\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v2\",\n            key: \"1lh1kg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 15 3-3-3-3\",\n            key: \"wjy7rq\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5 9-3 3 3 3\",\n            key: \"j64kie\"\n        }\n    ]\n]);\nconst UnfoldVertical = createLucideIcon(\"UnfoldVertical\", [\n    [\n        \"path\",\n        {\n            d: \"M12 22v-6\",\n            key: \"6o8u61\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 8V2\",\n            key: \"1wkif3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4 12H2\",\n            key: \"rhcxmi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 12H8\",\n            key: \"s88cx1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 12h-2\",\n            key: \"10asgb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 12h-2\",\n            key: \"14jgyd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 19-3 3-3-3\",\n            key: \"11eu04\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 5-3-3-3 3\",\n            key: \"itvq4r\"\n        }\n    ]\n]);\nconst Ungroup = createLucideIcon(\"Ungroup\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"6\",\n            x: \"5\",\n            y: \"4\",\n            rx: \"1\",\n            key: \"nzclkv\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"6\",\n            x: \"11\",\n            y: \"14\",\n            rx: \"1\",\n            key: \"4tytwb\"\n        }\n    ]\n]);\nconst Unlink2 = createLucideIcon(\"Unlink2\", [\n    [\n        \"path\",\n        {\n            d: \"M15 7h2a5 5 0 0 1 0 10h-2m-6 0H7A5 5 0 0 1 7 7h2\",\n            key: \"1re2ne\"\n        }\n    ]\n]);\nconst Unlink = createLucideIcon(\"Unlink\", [\n    [\n        \"path\",\n        {\n            d: \"m18.84 12.25 1.72-1.71h-.02a5.004 5.004 0 0 0-.12-7.07 5.006 5.006 0 0 0-6.95 0l-1.72 1.71\",\n            key: \"yqzxt4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m5.17 11.75-1.71 1.71a5.004 5.004 0 0 0 .12 7.07 5.006 5.006 0 0 0 6.95 0l1.71-1.71\",\n            key: \"4qinb0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"8\",\n            y1: \"2\",\n            y2: \"5\",\n            key: \"1041cp\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"5\",\n            y1: \"8\",\n            y2: \"8\",\n            key: \"14m1p5\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"16\",\n            y1: \"19\",\n            y2: \"22\",\n            key: \"rzdirn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"22\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"ox905f\"\n        }\n    ]\n]);\nconst Unlock = createLucideIcon(\"Unlock\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"11\",\n            x: \"3\",\n            y: \"11\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1w4ew1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 11V7a5 5 0 0 1 9.9-1\",\n            key: \"1mm8w8\"\n        }\n    ]\n]);\nconst Unplug = createLucideIcon(\"Unplug\", [\n    [\n        \"path\",\n        {\n            d: \"m19 5 3-3\",\n            key: \"yk6iyv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2 22 3-3\",\n            key: \"19mgm9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z\",\n            key: \"goz73y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.5 13.5 10 11\",\n            key: \"7xgeeb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.5 16.5 13 14\",\n            key: \"10btkg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 6 6 6 2.3-2.3a2.4 2.4 0 0 0 0-3.4l-2.6-2.6a2.4 2.4 0 0 0-3.4 0Z\",\n            key: \"1snsnr\"\n        }\n    ]\n]);\nconst UploadCloud = createLucideIcon(\"UploadCloud\", [\n    [\n        \"path\",\n        {\n            d: \"M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242\",\n            key: \"1pljnt\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 12v9\",\n            key: \"192myk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 16-4-4-4 4\",\n            key: \"119tzi\"\n        }\n    ]\n]);\nconst Upload = createLucideIcon(\"Upload\", [\n    [\n        \"path\",\n        {\n            d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\",\n            key: \"ih7n3h\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"17 8 12 3 7 8\",\n            key: \"t8dd8p\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12\",\n            y1: \"3\",\n            y2: \"15\",\n            key: \"widbto\"\n        }\n    ]\n]);\nconst Usb = createLucideIcon(\"Usb\", [\n    [\n        \"circle\",\n        {\n            cx: \"10\",\n            cy: \"7\",\n            r: \"1\",\n            key: \"dypaad\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"4\",\n            cy: \"20\",\n            r: \"1\",\n            key: \"22iqad\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M4.7 19.3 19 5\",\n            key: \"1enqfc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21 3-3 1 2 2Z\",\n            key: \"d3ov82\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.26 7.68 5 12l2 5\",\n            key: \"1esawj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 14 5 2 3.5-3.5\",\n            key: \"v8oal5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m18 12 1-1 1 1-1 1Z\",\n            key: \"1bh22v\"\n        }\n    ]\n]);\nconst User2 = createLucideIcon(\"User2\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"8\",\n            r: \"5\",\n            key: \"1hypcn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 21a8 8 0 1 0-16 0\",\n            key: \"199sx2\"\n        }\n    ]\n]);\nconst UserCheck2 = createLucideIcon(\"UserCheck2\", [\n    [\n        \"path\",\n        {\n            d: \"M14 19a6 6 0 0 0-12 0\",\n            key: \"vej9p1\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"9\",\n            r: \"4\",\n            key: \"143rtg\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"16 11 18 13 22 9\",\n            key: \"1pwet4\"\n        }\n    ]\n]);\nconst UserCheck = createLucideIcon(\"UserCheck\", [\n    [\n        \"path\",\n        {\n            d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\",\n            key: \"1yyitq\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"7\",\n            r: \"4\",\n            key: \"nufk8\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"16 11 18 13 22 9\",\n            key: \"1pwet4\"\n        }\n    ]\n]);\nconst UserCircle2 = createLucideIcon(\"UserCircle2\", [\n    [\n        \"path\",\n        {\n            d: \"M18 20a6 6 0 0 0-12 0\",\n            key: \"1qehca\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"10\",\n            r: \"4\",\n            key: \"1h16sb\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ]\n]);\nconst UserCircle = createLucideIcon(\"UserCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"10\",\n            r: \"3\",\n            key: \"ilqhr7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662\",\n            key: \"154egf\"\n        }\n    ]\n]);\nconst UserCog2 = createLucideIcon(\"UserCog2\", [\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"15\",\n            r: \"3\",\n            key: \"gjjjvw\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"9\",\n            r: \"4\",\n            key: \"143rtg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.5 13.5A6 6 0 0 0 2 19\",\n            key: \"ih5ja7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21.7 16.4-.9-.3\",\n            key: \"12j9ji\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15.2 13.9-.9-.3\",\n            key: \"1fdjdi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.6 18.7.3-.9\",\n            key: \"heedtr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.1 12.2.3-.9\",\n            key: \"1af3ki\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.6 18.7-.4-1\",\n            key: \"1x9vze\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.8 12.3-.4-1\",\n            key: \"vqeiwj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.3 16.6 1-.4\",\n            key: \"1qlj63\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20.7 13.8 1-.4\",\n            key: \"1v5t8k\"\n        }\n    ]\n]);\nconst UserCog = createLucideIcon(\"UserCog\", [\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"15\",\n            r: \"3\",\n            key: \"gjjjvw\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"7\",\n            r: \"4\",\n            key: \"nufk8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 15H6a4 4 0 0 0-4 4v2\",\n            key: \"1nfge6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m21.7 16.4-.9-.3\",\n            key: \"12j9ji\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15.2 13.9-.9-.3\",\n            key: \"1fdjdi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.6 18.7.3-.9\",\n            key: \"heedtr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.1 12.2.3-.9\",\n            key: \"1af3ki\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.6 18.7-.4-1\",\n            key: \"1x9vze\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.8 12.3-.4-1\",\n            key: \"vqeiwj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14.3 16.6 1-.4\",\n            key: \"1qlj63\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m20.7 13.8 1-.4\",\n            key: \"1v5t8k\"\n        }\n    ]\n]);\nconst UserMinus2 = createLucideIcon(\"UserMinus2\", [\n    [\n        \"path\",\n        {\n            d: \"M14 19a6 6 0 0 0-12 0\",\n            key: \"vej9p1\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"9\",\n            r: \"4\",\n            key: \"143rtg\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"16\",\n            y1: \"11\",\n            y2: \"11\",\n            key: \"1shjgl\"\n        }\n    ]\n]);\nconst UserMinus = createLucideIcon(\"UserMinus\", [\n    [\n        \"path\",\n        {\n            d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\",\n            key: \"1yyitq\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"7\",\n            r: \"4\",\n            key: \"nufk8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"16\",\n            y1: \"11\",\n            y2: \"11\",\n            key: \"1shjgl\"\n        }\n    ]\n]);\nconst UserPlus2 = createLucideIcon(\"UserPlus2\", [\n    [\n        \"path\",\n        {\n            d: \"M14 19a6 6 0 0 0-12 0\",\n            key: \"vej9p1\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"9\",\n            r: \"4\",\n            key: \"143rtg\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"19\",\n            y1: \"8\",\n            y2: \"14\",\n            key: \"1bvyxn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"16\",\n            y1: \"11\",\n            y2: \"11\",\n            key: \"1shjgl\"\n        }\n    ]\n]);\nconst UserPlus = createLucideIcon(\"UserPlus\", [\n    [\n        \"path\",\n        {\n            d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\",\n            key: \"1yyitq\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"7\",\n            r: \"4\",\n            key: \"nufk8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"19\",\n            x2: \"19\",\n            y1: \"8\",\n            y2: \"14\",\n            key: \"1bvyxn\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"16\",\n            y1: \"11\",\n            y2: \"11\",\n            key: \"1shjgl\"\n        }\n    ]\n]);\nconst UserSquare2 = createLucideIcon(\"UserSquare2\", [\n    [\n        \"path\",\n        {\n            d: \"M18 21a6 6 0 0 0-12 0\",\n            key: \"kaz2du\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"11\",\n            r: \"4\",\n            key: \"1gt34v\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ]\n]);\nconst UserSquare = createLucideIcon(\"UserSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"10\",\n            r: \"3\",\n            key: \"ilqhr7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 21v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2\",\n            key: \"1m6ac2\"\n        }\n    ]\n]);\nconst UserX2 = createLucideIcon(\"UserX2\", [\n    [\n        \"path\",\n        {\n            d: \"M14 19a6 6 0 0 0-12 0\",\n            key: \"vej9p1\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"9\",\n            r: \"4\",\n            key: \"143rtg\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"17\",\n            x2: \"22\",\n            y1: \"8\",\n            y2: \"13\",\n            key: \"3nzzx3\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"17\",\n            y1: \"8\",\n            y2: \"13\",\n            key: \"1swrse\"\n        }\n    ]\n]);\nconst UserX = createLucideIcon(\"UserX\", [\n    [\n        \"path\",\n        {\n            d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\",\n            key: \"1yyitq\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"7\",\n            r: \"4\",\n            key: \"nufk8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"17\",\n            x2: \"22\",\n            y1: \"8\",\n            y2: \"13\",\n            key: \"3nzzx3\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"17\",\n            y1: \"8\",\n            y2: \"13\",\n            key: \"1swrse\"\n        }\n    ]\n]);\nconst User = createLucideIcon(\"User\", [\n    [\n        \"path\",\n        {\n            d: \"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\",\n            key: \"975kel\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"7\",\n            r: \"4\",\n            key: \"17ys0d\"\n        }\n    ]\n]);\nconst Users2 = createLucideIcon(\"Users2\", [\n    [\n        \"path\",\n        {\n            d: \"M14 19a6 6 0 0 0-12 0\",\n            key: \"vej9p1\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"9\",\n            r: \"4\",\n            key: \"143rtg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 19a6 6 0 0 0-6-6 4 4 0 1 0 0-8\",\n            key: \"hqbn22\"\n        }\n    ]\n]);\nconst Users = createLucideIcon(\"Users\", [\n    [\n        \"path\",\n        {\n            d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\",\n            key: \"1yyitq\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"9\",\n            cy: \"7\",\n            r: \"4\",\n            key: \"nufk8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 21v-2a4 4 0 0 0-3-3.87\",\n            key: \"kshegd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 3.13a4 4 0 0 1 0 7.75\",\n            key: \"1da9ce\"\n        }\n    ]\n]);\nconst UtensilsCrossed = createLucideIcon(\"UtensilsCrossed\", [\n    [\n        \"path\",\n        {\n            d: \"m16 2-2.3 2.3a3 3 0 0 0 0 4.2l1.8 1.8a3 3 0 0 0 4.2 0L22 8\",\n            key: \"n7qcjb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 15 3.3 3.3a4.2 4.2 0 0 0 0 6l7.3 7.3c.7.7 2 .7 2.8 0L15 15Zm0 0 7 7\",\n            key: \"d0u48b\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m2.1 21.8 6.4-6.3\",\n            key: \"yn04lh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 5-7 7\",\n            key: \"194lzd\"\n        }\n    ]\n]);\nconst Utensils = createLucideIcon(\"Utensils\", [\n    [\n        \"path\",\n        {\n            d: \"M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2\",\n            key: \"cjf0a3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 2v20\",\n            key: \"1473qp\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 15V2v0a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7\",\n            key: \"1ogz0v\"\n        }\n    ]\n]);\nconst UtilityPole = createLucideIcon(\"UtilityPole\", [\n    [\n        \"path\",\n        {\n            d: \"M12 2v20\",\n            key: \"t6zp3m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 5h20\",\n            key: \"1fs1ex\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 3v2\",\n            key: \"9imdir\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 3v2\",\n            key: \"n0os7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17 3v2\",\n            key: \"1l2re6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 3v2\",\n            key: \"1duuac\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19 5-7 7-7-7\",\n            key: \"133zxf\"\n        }\n    ]\n]);\nconst Variable = createLucideIcon(\"Variable\", [\n    [\n        \"path\",\n        {\n            d: \"M8 21s-4-3-4-9 4-9 4-9\",\n            key: \"uto9ud\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 3s4 3 4 9-4 9-4 9\",\n            key: \"4w2vsq\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"15\",\n            x2: \"9\",\n            y1: \"9\",\n            y2: \"15\",\n            key: \"f7djnv\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"9\",\n            x2: \"15\",\n            y1: \"9\",\n            y2: \"15\",\n            key: \"1shsy8\"\n        }\n    ]\n]);\nconst Vegan = createLucideIcon(\"Vegan\", [\n    [\n        \"path\",\n        {\n            d: \"M2 2a26.6 26.6 0 0 1 10 20c.9-6.82 1.5-9.5 4-14\",\n            key: \"qiv7li\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 8c4 0 6-2 6-6-4 0-6 2-6 6\",\n            key: \"n7eohy\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.41 3.6a10 10 0 1 0 3 3\",\n            key: \"1dion0\"\n        }\n    ]\n]);\nconst VenetianMask = createLucideIcon(\"VenetianMask\", [\n    [\n        \"path\",\n        {\n            d: \"M2 12a5 5 0 0 0 5 5 8 8 0 0 1 5 2 8 8 0 0 1 5-2 5 5 0 0 0 5-5V7h-5a8 8 0 0 0-5 2 8 8 0 0 0-5-2H2Z\",\n            key: \"1g6z3j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 11c1.5 0 3 .5 3 2-2 0-3 0-3-2Z\",\n            key: \"c2lwnf\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 11c-1.5 0-3 .5-3 2 2 0 3 0 3-2Z\",\n            key: \"njd9zo\"\n        }\n    ]\n]);\nconst VibrateOff = createLucideIcon(\"VibrateOff\", [\n    [\n        \"path\",\n        {\n            d: \"m2 8 2 2-2 2 2 2-2 2\",\n            key: \"sv1b1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 8-2 2 2 2-2 2 2 2\",\n            key: \"101i4y\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 8v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2\",\n            key: \"1hbad5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 10.34V6c0-.55-.45-1-1-1h-4.34\",\n            key: \"1x5tf0\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Vibrate = createLucideIcon(\"Vibrate\", [\n    [\n        \"path\",\n        {\n            d: \"m2 8 2 2-2 2 2 2-2 2\",\n            key: \"sv1b1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m22 8-2 2 2 2-2 2 2 2\",\n            key: \"101i4y\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"14\",\n            x: \"8\",\n            y: \"5\",\n            rx: \"1\",\n            key: \"1oyrl4\"\n        }\n    ]\n]);\nconst VideoOff = createLucideIcon(\"VideoOff\", [\n    [\n        \"path\",\n        {\n            d: \"M10.66 6H14a2 2 0 0 1 2 2v2.34l1 1L22 8v8\",\n            key: \"ubwiq0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16 16a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2l10 10Z\",\n            key: \"1l10zd\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Video = createLucideIcon(\"Video\", [\n    [\n        \"path\",\n        {\n            d: \"m22 8-6 4 6 4V8Z\",\n            key: \"50v9me\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"14\",\n            height: \"12\",\n            x: \"2\",\n            y: \"6\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1rqjg6\"\n        }\n    ]\n]);\nconst Videotape = createLucideIcon(\"Videotape\", [\n    [\n        \"rect\",\n        {\n            width: \"20\",\n            height: \"16\",\n            x: \"2\",\n            y: \"4\",\n            rx: \"2\",\n            key: \"18n3k1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 8h20\",\n            key: \"d11cs7\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"14\",\n            r: \"2\",\n            key: \"1k2qr5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 12h8\",\n            key: \"1wcyev\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"16\",\n            cy: \"14\",\n            r: \"2\",\n            key: \"14k7lr\"\n        }\n    ]\n]);\nconst View = createLucideIcon(\"View\", [\n    [\n        \"path\",\n        {\n            d: \"M5 12s2.545-5 7-5c4.454 0 7 5 7 5s-2.546 5-7 5c-4.455 0-7-5-7-5z\",\n            key: \"vptub8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\",\n            key: \"10lhjs\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2\",\n            key: \"mrq65r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 7V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2\",\n            key: \"be3xqs\"\n        }\n    ]\n]);\nconst Voicemail = createLucideIcon(\"Voicemail\", [\n    [\n        \"circle\",\n        {\n            cx: \"6\",\n            cy: \"12\",\n            r: \"4\",\n            key: \"1ehtga\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"18\",\n            cy: \"12\",\n            r: \"4\",\n            key: \"4vafl8\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"6\",\n            x2: \"18\",\n            y1: \"16\",\n            y2: \"16\",\n            key: \"pmt8us\"\n        }\n    ]\n]);\nconst Volume1 = createLucideIcon(\"Volume1\", [\n    [\n        \"polygon\",\n        {\n            points: \"11 5 6 9 2 9 2 15 6 15 11 19 11 5\",\n            key: \"16drj5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.54 8.46a5 5 0 0 1 0 7.07\",\n            key: \"ltjumu\"\n        }\n    ]\n]);\nconst Volume2 = createLucideIcon(\"Volume2\", [\n    [\n        \"polygon\",\n        {\n            points: \"11 5 6 9 2 9 2 15 6 15 11 19 11 5\",\n            key: \"16drj5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.54 8.46a5 5 0 0 1 0 7.07\",\n            key: \"ltjumu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.07 4.93a10 10 0 0 1 0 14.14\",\n            key: \"1kegas\"\n        }\n    ]\n]);\nconst VolumeX = createLucideIcon(\"VolumeX\", [\n    [\n        \"polygon\",\n        {\n            points: \"11 5 6 9 2 9 2 15 6 15 11 19 11 5\",\n            key: \"16drj5\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"22\",\n            x2: \"16\",\n            y1: \"9\",\n            y2: \"15\",\n            key: \"1ewh16\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"16\",\n            x2: \"22\",\n            y1: \"9\",\n            y2: \"15\",\n            key: \"5ykzw1\"\n        }\n    ]\n]);\nconst Volume = createLucideIcon(\"Volume\", [\n    [\n        \"polygon\",\n        {\n            points: \"11 5 6 9 2 9 2 15 6 15 11 19 11 5\",\n            key: \"16drj5\"\n        }\n    ]\n]);\nconst Vote = createLucideIcon(\"Vote\", [\n    [\n        \"path\",\n        {\n            d: \"m9 12 2 2 4-4\",\n            key: \"dzmm74\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 7c0-1.1.9-2 2-2h10a2 2 0 0 1 2 2v12H5V7Z\",\n            key: \"1ezoue\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 19H2\",\n            key: \"nuriw5\"\n        }\n    ]\n]);\nconst Wallet2 = createLucideIcon(\"Wallet2\", [\n    [\n        \"path\",\n        {\n            d: \"M17 14h.01\",\n            key: \"7oqj8z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 7h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14\",\n            key: \"u1rqew\"\n        }\n    ]\n]);\nconst WalletCards = createLucideIcon(\"WalletCards\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"afitv7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 9a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2\",\n            key: \"4125el\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 11h3c.8 0 1.6.3 2.1.9l1.1.9c1.6 1.6 4.1 1.6 5.7 0l1.1-.9c.5-.5 1.3-.9 2.1-.9H21\",\n            key: \"1dpki6\"\n        }\n    ]\n]);\nconst Wallet = createLucideIcon(\"Wallet\", [\n    [\n        \"path\",\n        {\n            d: \"M21 12V7H5a2 2 0 0 1 0-4h14v4\",\n            key: \"195gfw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 5v14a2 2 0 0 0 2 2h16v-5\",\n            key: \"195n9w\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18 12a2 2 0 0 0 0 4h4v-4Z\",\n            key: \"vllfpd\"\n        }\n    ]\n]);\nconst Wallpaper = createLucideIcon(\"Wallpaper\", [\n    [\n        \"circle\",\n        {\n            cx: \"8\",\n            cy: \"9\",\n            r: \"2\",\n            key: \"gjzl9d\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 17 6.1-6.1a2 2 0 0 1 2.81.01L22 15V5a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2\",\n            key: \"69xh40\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 21h8\",\n            key: \"1ev6f3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17v4\",\n            key: \"1riwvh\"\n        }\n    ]\n]);\nconst Wand2 = createLucideIcon(\"Wand2\", [\n    [\n        \"path\",\n        {\n            d: \"m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72Z\",\n            key: \"1bcowg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m14 7 3 3\",\n            key: \"1r5n42\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 6v4\",\n            key: \"ilb8ba\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 14v4\",\n            key: \"blhpug\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 2v2\",\n            key: \"7u0qdc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 8H3\",\n            key: \"zfb6yr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 16h-4\",\n            key: \"1cnmox\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11 3H9\",\n            key: \"1obp7u\"\n        }\n    ]\n]);\nconst Wand = createLucideIcon(\"Wand\", [\n    [\n        \"path\",\n        {\n            d: \"M15 4V2\",\n            key: \"z1p9b7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 16v-2\",\n            key: \"px0unx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 9h2\",\n            key: \"1g203m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 9h2\",\n            key: \"19tzq7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.8 11.8 19 13\",\n            key: \"yihg8r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15 9h0\",\n            key: \"kg5t1u\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M17.8 6.2 19 5\",\n            key: \"fd4us0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m3 21 9-9\",\n            key: \"1jfql5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12.2 6.2 11 5\",\n            key: \"i3da3b\"\n        }\n    ]\n]);\nconst Warehouse = createLucideIcon(\"Warehouse\", [\n    [\n        \"path\",\n        {\n            d: \"M22 8.35V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8.35A2 2 0 0 1 3.26 6.5l8-3.2a2 2 0 0 1 1.48 0l8 3.2A2 2 0 0 1 22 8.35Z\",\n            key: \"gksnxg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 18h12\",\n            key: \"9pbo8z\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M6 14h12\",\n            key: \"4cwo0f\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"12\",\n            height: \"12\",\n            x: \"6\",\n            y: \"10\",\n            key: \"apd30q\"\n        }\n    ]\n]);\nconst Watch = createLucideIcon(\"Watch\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"6\",\n            key: \"1vlfrh\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"12 10 12 12 13 13\",\n            key: \"19dquz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16.13 7.66-.81-4.05a2 2 0 0 0-2-1.61h-2.68a2 2 0 0 0-2 1.61l-.78 4.05\",\n            key: \"18k57s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m7.88 16.36.8 4a2 2 0 0 0 2 1.61h2.72a2 2 0 0 0 2-1.61l.81-4.05\",\n            key: \"16ny36\"\n        }\n    ]\n]);\nconst Waves = createLucideIcon(\"Waves\", [\n    [\n        \"path\",\n        {\n            d: \"M2 6c.6.5 1.2 1 2.5 1C7 7 7 5 9.5 5c2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\",\n            key: \"knzxuh\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\",\n            key: \"2jd2cc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1\",\n            key: \"rd2r6e\"\n        }\n    ]\n]);\nconst Webcam = createLucideIcon(\"Webcam\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"10\",\n            r: \"8\",\n            key: \"1gshiw\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"10\",\n            r: \"3\",\n            key: \"ilqhr7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 22h10\",\n            key: \"10w4w3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 22v-4\",\n            key: \"1utk9m\"\n        }\n    ]\n]);\nconst Webhook = createLucideIcon(\"Webhook\", [\n    [\n        \"path\",\n        {\n            d: \"M18 16.98h-5.99c-1.1 0-1.95.94-2.48 1.9A4 4 0 0 1 2 17c.01-.7.2-1.4.57-2\",\n            key: \"q3hayz\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 17 3.13-5.78c.53-.97.1-2.18-.5-3.1a4 4 0 1 1 6.89-4.06\",\n            key: \"1go1hn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m12 6 3.13 5.73C15.66 12.7 16.9 13 18 13a4 4 0 0 1 0 8\",\n            key: \"qlwsc0\"\n        }\n    ]\n]);\nconst WheatOff = createLucideIcon(\"WheatOff\", [\n    [\n        \"path\",\n        {\n            d: \"m2 22 10-10\",\n            key: \"28ilpk\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 8-1.17 1.17\",\n            key: \"1qqm82\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z\",\n            key: \"1rdhi6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m8 8-.53.53a3.5 3.5 0 0 0 0 4.94L9 15l1.53-1.53c.55-.55.88-1.25.98-1.97\",\n            key: \"4wz8re\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.91 5.26c.15-.26.34-.51.56-.73L13 3l1.53 1.53a3.5 3.5 0 0 1 .28 4.62\",\n            key: \"rves66\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z\",\n            key: \"19rau1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z\",\n            key: \"tc8ph9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m16 16-.53.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.49 3.49 0 0 1 1.97-.98\",\n            key: \"ak46r\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M18.74 13.09c.26-.15.51-.34.73-.56L21 11l-1.53-1.53a3.5 3.5 0 0 0-4.62-.28\",\n            key: \"1tw520\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Wheat = createLucideIcon(\"Wheat\", [\n    [\n        \"path\",\n        {\n            d: \"M2 22 16 8\",\n            key: \"60hf96\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z\",\n            key: \"1rdhi6\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.47 8.53 9 7l1.53 1.53a3.5 3.5 0 0 1 0 4.94L9 15l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z\",\n            key: \"1sdzmb\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.47 4.53 13 3l1.53 1.53a3.5 3.5 0 0 1 0 4.94L13 11l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z\",\n            key: \"eoatbi\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z\",\n            key: \"19rau1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z\",\n            key: \"tc8ph9\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M15.47 13.47 17 15l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z\",\n            key: \"2m8kc5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19.47 9.47 21 11l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L13 11l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z\",\n            key: \"vex3ng\"\n        }\n    ]\n]);\nconst WholeWord = createLucideIcon(\"WholeWord\", [\n    [\n        \"circle\",\n        {\n            cx: \"7\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"12clwm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10 9v6\",\n            key: \"17i7lo\"\n        }\n    ],\n    [\n        \"circle\",\n        {\n            cx: \"17\",\n            cy: \"12\",\n            r: \"3\",\n            key: \"gl7c2s\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M14 7v8\",\n            key: \"dl84cr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1\",\n            key: \"lt2kga\"\n        }\n    ]\n]);\nconst WifiOff = createLucideIcon(\"WifiOff\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.5 16.5a5 5 0 0 1 7 0\",\n            key: \"sej527\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 8.82a15 15 0 0 1 4.17-2.65\",\n            key: \"11utq1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.66 5c4.01-.36 8.14.9 11.34 3.76\",\n            key: \"hxefdu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.85 11.25a10 10 0 0 1 2.22 1.68\",\n            key: \"q734kn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 13a10 10 0 0 1 5.24-2.76\",\n            key: \"piq4yl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"of4bc4\"\n        }\n    ]\n]);\nconst Wifi = createLucideIcon(\"Wifi\", [\n    [\n        \"path\",\n        {\n            d: \"M5 13a10 10 0 0 1 14 0\",\n            key: \"6v8j51\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.5 16.5a5 5 0 0 1 7 0\",\n            key: \"sej527\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 8.82a15 15 0 0 1 20 0\",\n            key: \"dnpr2z\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"of4bc4\"\n        }\n    ]\n]);\nconst Wind = createLucideIcon(\"Wind\", [\n    [\n        \"path\",\n        {\n            d: \"M17.7 7.7a2.5 2.5 0 1 1 1.8 4.3H2\",\n            key: \"1k4u03\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M9.6 4.6A2 2 0 1 1 11 8H2\",\n            key: \"b7d0fd\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12.6 19.4A2 2 0 1 0 14 16H2\",\n            key: \"1p5cb3\"\n        }\n    ]\n]);\nconst WineOff = createLucideIcon(\"WineOff\", [\n    [\n        \"path\",\n        {\n            d: \"M8 22h8\",\n            key: \"rmew8v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 10h3m7 0h-1.343\",\n            key: \"v48bem\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 15v7\",\n            key: \"t2xh3l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7.307 7.307A12.33 12.33 0 0 0 7 10a5 5 0 0 0 7.391 4.391M8.638 2.981C8.75 2.668 8.872 2.34 9 2h6c1.5 4 2 6 2 8 0 .407-.05.809-.145 1.198\",\n            key: \"1ymjlu\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Wine = createLucideIcon(\"Wine\", [\n    [\n        \"path\",\n        {\n            d: \"M8 22h8\",\n            key: \"rmew8v\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 10h10\",\n            key: \"1101jm\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 15v7\",\n            key: \"t2xh3l\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 15a5 5 0 0 0 5-5c0-2-.5-4-2-8H9c-1.5 4-2 6-2 8a5 5 0 0 0 5 5Z\",\n            key: \"10ffi3\"\n        }\n    ]\n]);\nconst Workflow = createLucideIcon(\"Workflow\", [\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"8\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            key: \"by2w9f\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M7 11v4a2 2 0 0 0 2 2h4\",\n            key: \"xkn7yn\"\n        }\n    ],\n    [\n        \"rect\",\n        {\n            width: \"8\",\n            height: \"8\",\n            x: \"13\",\n            y: \"13\",\n            rx: \"2\",\n            key: \"1cgmvn\"\n        }\n    ]\n]);\nconst WrapText = createLucideIcon(\"WrapText\", [\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"21\",\n            y1: \"6\",\n            y2: \"6\",\n            key: \"4m8b97\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M3 12h15a3 3 0 1 1 0 6h-4\",\n            key: \"1cl7v7\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"16 16 14 18 16 20\",\n            key: \"1jznyi\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"3\",\n            x2: \"10\",\n            y1: \"18\",\n            y2: \"18\",\n            key: \"1h33wv\"\n        }\n    ]\n]);\nconst Wrench = createLucideIcon(\"Wrench\", [\n    [\n        \"path\",\n        {\n            d: \"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\",\n            key: \"cbrjhi\"\n        }\n    ]\n]);\nconst XCircle = createLucideIcon(\"XCircle\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            key: \"1mglay\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 9-6 6\",\n            key: \"1uzhvr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 9 6 6\",\n            key: \"z0biqf\"\n        }\n    ]\n]);\nconst XOctagon = createLucideIcon(\"XOctagon\", [\n    [\n        \"polygon\",\n        {\n            points: \"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\",\n            key: \"h1p8hx\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 9-6 6\",\n            key: \"1uzhvr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 9 6 6\",\n            key: \"z0biqf\"\n        }\n    ]\n]);\nconst XSquare = createLucideIcon(\"XSquare\", [\n    [\n        \"rect\",\n        {\n            width: \"18\",\n            height: \"18\",\n            x: \"3\",\n            y: \"3\",\n            rx: \"2\",\n            ry: \"2\",\n            key: \"1m3agn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 9-6 6\",\n            key: \"1uzhvr\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m9 9 6 6\",\n            key: \"z0biqf\"\n        }\n    ]\n]);\nconst X = createLucideIcon(\"X\", [\n    [\n        \"path\",\n        {\n            d: \"M18 6 6 18\",\n            key: \"1bl5f8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 6 12 12\",\n            key: \"d8bk6v\"\n        }\n    ]\n]);\nconst Youtube = createLucideIcon(\"Youtube\", [\n    [\n        \"path\",\n        {\n            d: \"M2.5 17a24.12 24.12 0 0 1 0-10 2 2 0 0 1 1.4-1.4 49.56 49.56 0 0 1 16.2 0A2 2 0 0 1 21.5 7a24.12 24.12 0 0 1 0 10 2 2 0 0 1-1.4 1.4 49.55 49.55 0 0 1-16.2 0A2 2 0 0 1 2.5 17\",\n            key: \"1q2vi4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m10 15 5-3-5-3z\",\n            key: \"1jp15x\"\n        }\n    ]\n]);\nconst ZapOff = createLucideIcon(\"ZapOff\", [\n    [\n        \"polyline\",\n        {\n            points: \"12.41 6.75 13 2 10.57 4.92\",\n            key: \"122m05\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"18.57 12.91 21 10 15.66 10\",\n            key: \"16r43o\"\n        }\n    ],\n    [\n        \"polyline\",\n        {\n            points: \"8 8 3 14 12 14 11 22 16 16\",\n            key: \"tmh4bc\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ]\n]);\nconst Zap = createLucideIcon(\"Zap\", [\n    [\n        \"polygon\",\n        {\n            points: \"13 2 3 14 12 14 11 22 21 10 12 10 13 2\",\n            key: \"45s27k\"\n        }\n    ]\n]);\nconst ZoomIn = createLucideIcon(\"ZoomIn\", [\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"11\",\n            r: \"8\",\n            key: \"4ej97u\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"16.65\",\n            y1: \"21\",\n            y2: \"16.65\",\n            key: \"13gj7c\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"11\",\n            x2: \"11\",\n            y1: \"8\",\n            y2: \"14\",\n            key: \"1vmskp\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"14\",\n            y1: \"11\",\n            y2: \"11\",\n            key: \"durymu\"\n        }\n    ]\n]);\nconst ZoomOut = createLucideIcon(\"ZoomOut\", [\n    [\n        \"circle\",\n        {\n            cx: \"11\",\n            cy: \"11\",\n            r: \"8\",\n            key: \"4ej97u\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"21\",\n            x2: \"16.65\",\n            y1: \"21\",\n            y2: \"16.65\",\n            key: \"13gj7c\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"8\",\n            x2: \"14\",\n            y1: \"11\",\n            y2: \"11\",\n            key: \"durymu\"\n        }\n    ]\n]);\nvar index = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Accessibility: Accessibility,\n    Activity: Activity,\n    ActivitySquare: ActivitySquare,\n    AirVent: AirVent,\n    Airplay: Airplay,\n    AlarmCheck: AlarmCheck,\n    AlarmClock: AlarmClock,\n    AlarmClockOff: AlarmClockOff,\n    AlarmMinus: AlarmMinus,\n    AlarmPlus: AlarmPlus,\n    Album: Album,\n    AlertCircle: AlertCircle,\n    AlertOctagon: AlertOctagon,\n    AlertTriangle: AlertTriangle,\n    AlignCenter: AlignCenter,\n    AlignCenterHorizontal: AlignCenterHorizontal,\n    AlignCenterVertical: AlignCenterVertical,\n    AlignEndHorizontal: AlignEndHorizontal,\n    AlignEndVertical: AlignEndVertical,\n    AlignHorizontalDistributeCenter: AlignHorizontalDistributeCenter,\n    AlignHorizontalDistributeEnd: AlignHorizontalDistributeEnd,\n    AlignHorizontalDistributeStart: AlignHorizontalDistributeStart,\n    AlignHorizontalJustifyCenter: AlignHorizontalJustifyCenter,\n    AlignHorizontalJustifyEnd: AlignHorizontalJustifyEnd,\n    AlignHorizontalJustifyStart: AlignHorizontalJustifyStart,\n    AlignHorizontalSpaceAround: AlignHorizontalSpaceAround,\n    AlignHorizontalSpaceBetween: AlignHorizontalSpaceBetween,\n    AlignJustify: AlignJustify,\n    AlignLeft: AlignLeft,\n    AlignRight: AlignRight,\n    AlignStartHorizontal: AlignStartHorizontal,\n    AlignStartVertical: AlignStartVertical,\n    AlignVerticalDistributeCenter: AlignVerticalDistributeCenter,\n    AlignVerticalDistributeEnd: AlignVerticalDistributeEnd,\n    AlignVerticalDistributeStart: AlignVerticalDistributeStart,\n    AlignVerticalJustifyCenter: AlignVerticalJustifyCenter,\n    AlignVerticalJustifyEnd: AlignVerticalJustifyEnd,\n    AlignVerticalJustifyStart: AlignVerticalJustifyStart,\n    AlignVerticalSpaceAround: AlignVerticalSpaceAround,\n    AlignVerticalSpaceBetween: AlignVerticalSpaceBetween,\n    Ampersand: Ampersand,\n    Ampersands: Ampersands,\n    Anchor: Anchor,\n    Angry: Angry,\n    Annoyed: Annoyed,\n    Antenna: Antenna,\n    Aperture: Aperture,\n    AppWindow: AppWindow,\n    Apple: Apple,\n    Archive: Archive,\n    ArchiveRestore: ArchiveRestore,\n    ArchiveX: ArchiveX,\n    AreaChart: AreaChart,\n    Armchair: Armchair,\n    ArrowBigDown: ArrowBigDown,\n    ArrowBigDownDash: ArrowBigDownDash,\n    ArrowBigLeft: ArrowBigLeft,\n    ArrowBigLeftDash: ArrowBigLeftDash,\n    ArrowBigRight: ArrowBigRight,\n    ArrowBigRightDash: ArrowBigRightDash,\n    ArrowBigUp: ArrowBigUp,\n    ArrowBigUpDash: ArrowBigUpDash,\n    ArrowDown: ArrowDown,\n    ArrowDown01: ArrowDown01,\n    ArrowDown10: ArrowDown10,\n    ArrowDownAZ: ArrowDownAZ,\n    ArrowDownCircle: ArrowDownCircle,\n    ArrowDownFromLine: ArrowDownFromLine,\n    ArrowDownLeft: ArrowDownLeft,\n    ArrowDownLeftFromCircle: ArrowDownLeftFromCircle,\n    ArrowDownLeftSquare: ArrowDownLeftSquare,\n    ArrowDownNarrowWide: ArrowDownNarrowWide,\n    ArrowDownRight: ArrowDownRight,\n    ArrowDownRightFromCircle: ArrowDownRightFromCircle,\n    ArrowDownRightSquare: ArrowDownRightSquare,\n    ArrowDownSquare: ArrowDownSquare,\n    ArrowDownToDot: ArrowDownToDot,\n    ArrowDownToLine: ArrowDownToLine,\n    ArrowDownUp: ArrowDownUp,\n    ArrowDownWideNarrow: ArrowDownWideNarrow,\n    ArrowDownZA: ArrowDownZA,\n    ArrowLeft: ArrowLeft,\n    ArrowLeftCircle: ArrowLeftCircle,\n    ArrowLeftFromLine: ArrowLeftFromLine,\n    ArrowLeftRight: ArrowLeftRight,\n    ArrowLeftSquare: ArrowLeftSquare,\n    ArrowLeftToLine: ArrowLeftToLine,\n    ArrowRight: ArrowRight,\n    ArrowRightCircle: ArrowRightCircle,\n    ArrowRightFromLine: ArrowRightFromLine,\n    ArrowRightLeft: ArrowRightLeft,\n    ArrowRightSquare: ArrowRightSquare,\n    ArrowRightToLine: ArrowRightToLine,\n    ArrowUp: ArrowUp,\n    ArrowUp01: ArrowUp01,\n    ArrowUp10: ArrowUp10,\n    ArrowUpAZ: ArrowUpAZ,\n    ArrowUpCircle: ArrowUpCircle,\n    ArrowUpDown: ArrowUpDown,\n    ArrowUpFromDot: ArrowUpFromDot,\n    ArrowUpFromLine: ArrowUpFromLine,\n    ArrowUpLeft: ArrowUpLeft,\n    ArrowUpLeftFromCircle: ArrowUpLeftFromCircle,\n    ArrowUpLeftSquare: ArrowUpLeftSquare,\n    ArrowUpNarrowWide: ArrowUpNarrowWide,\n    ArrowUpRight: ArrowUpRight,\n    ArrowUpRightFromCircle: ArrowUpRightFromCircle,\n    ArrowUpRightSquare: ArrowUpRightSquare,\n    ArrowUpSquare: ArrowUpSquare,\n    ArrowUpToLine: ArrowUpToLine,\n    ArrowUpWideNarrow: ArrowUpWideNarrow,\n    ArrowUpZA: ArrowUpZA,\n    ArrowsUpFromLine: ArrowsUpFromLine,\n    Asterisk: Asterisk,\n    AtSign: AtSign,\n    Atom: Atom,\n    Award: Award,\n    Axe: Axe,\n    Axis3d: Axis3d,\n    Baby: Baby,\n    Backpack: Backpack,\n    Badge: Badge,\n    BadgeAlert: BadgeAlert,\n    BadgeCent: BadgeCent,\n    BadgeCheck: BadgeCheck,\n    BadgeDollarSign: BadgeDollarSign,\n    BadgeEuro: BadgeEuro,\n    BadgeHelp: BadgeHelp,\n    BadgeIndianRupee: BadgeIndianRupee,\n    BadgeInfo: BadgeInfo,\n    BadgeJapaneseYen: BadgeJapaneseYen,\n    BadgeMinus: BadgeMinus,\n    BadgePercent: BadgePercent,\n    BadgePlus: BadgePlus,\n    BadgePoundSterling: BadgePoundSterling,\n    BadgeRussianRuble: BadgeRussianRuble,\n    BadgeSwissFranc: BadgeSwissFranc,\n    BadgeX: BadgeX,\n    BaggageClaim: BaggageClaim,\n    Ban: Ban,\n    Banana: Banana,\n    Banknote: Banknote,\n    BarChart: BarChart,\n    BarChart2: BarChart2,\n    BarChart3: BarChart3,\n    BarChart4: BarChart4,\n    BarChartBig: BarChartBig,\n    BarChartHorizontal: BarChartHorizontal,\n    BarChartHorizontalBig: BarChartHorizontalBig,\n    Baseline: Baseline,\n    Bath: Bath,\n    Battery: Battery,\n    BatteryCharging: BatteryCharging,\n    BatteryFull: BatteryFull,\n    BatteryLow: BatteryLow,\n    BatteryMedium: BatteryMedium,\n    BatteryWarning: BatteryWarning,\n    Beaker: Beaker,\n    Bean: Bean,\n    BeanOff: BeanOff,\n    Bed: Bed,\n    BedDouble: BedDouble,\n    BedSingle: BedSingle,\n    Beef: Beef,\n    Beer: Beer,\n    Bell: Bell,\n    BellDot: BellDot,\n    BellMinus: BellMinus,\n    BellOff: BellOff,\n    BellPlus: BellPlus,\n    BellRing: BellRing,\n    Bike: Bike,\n    Binary: Binary,\n    Biohazard: Biohazard,\n    Bird: Bird,\n    Bitcoin: Bitcoin,\n    Blinds: Blinds,\n    Blocks: Blocks,\n    Bluetooth: Bluetooth,\n    BluetoothConnected: BluetoothConnected,\n    BluetoothOff: BluetoothOff,\n    BluetoothSearching: BluetoothSearching,\n    Bold: Bold,\n    Bomb: Bomb,\n    Bone: Bone,\n    Book: Book,\n    BookCopy: BookCopy,\n    BookDown: BookDown,\n    BookKey: BookKey,\n    BookLock: BookLock,\n    BookMarked: BookMarked,\n    BookMinus: BookMinus,\n    BookOpen: BookOpen,\n    BookOpenCheck: BookOpenCheck,\n    BookPlus: BookPlus,\n    BookTemplate: BookTemplate,\n    BookUp: BookUp,\n    BookUp2: BookUp2,\n    BookX: BookX,\n    Bookmark: Bookmark,\n    BookmarkMinus: BookmarkMinus,\n    BookmarkPlus: BookmarkPlus,\n    BoomBox: BoomBox,\n    Bot: Bot,\n    Box: Box,\n    BoxSelect: BoxSelect,\n    Boxes: Boxes,\n    Braces: Braces,\n    Brackets: Brackets,\n    Brain: Brain,\n    BrainCircuit: BrainCircuit,\n    BrainCog: BrainCog,\n    Briefcase: Briefcase,\n    BringToFront: BringToFront,\n    Brush: Brush,\n    Bug: Bug,\n    BugOff: BugOff,\n    BugPlay: BugPlay,\n    Building: Building,\n    Building2: Building2,\n    Bus: Bus,\n    BusFront: BusFront,\n    Cable: Cable,\n    CableCar: CableCar,\n    Cake: Cake,\n    CakeSlice: CakeSlice,\n    Calculator: Calculator,\n    Calendar: Calendar,\n    CalendarCheck: CalendarCheck,\n    CalendarCheck2: CalendarCheck2,\n    CalendarClock: CalendarClock,\n    CalendarDays: CalendarDays,\n    CalendarHeart: CalendarHeart,\n    CalendarMinus: CalendarMinus,\n    CalendarOff: CalendarOff,\n    CalendarPlus: CalendarPlus,\n    CalendarRange: CalendarRange,\n    CalendarSearch: CalendarSearch,\n    CalendarX: CalendarX,\n    CalendarX2: CalendarX2,\n    Camera: Camera,\n    CameraOff: CameraOff,\n    CandlestickChart: CandlestickChart,\n    Candy: Candy,\n    CandyCane: CandyCane,\n    CandyOff: CandyOff,\n    Car: Car,\n    CarFront: CarFront,\n    CarTaxiFront: CarTaxiFront,\n    Carrot: Carrot,\n    CaseLower: CaseLower,\n    CaseSensitive: CaseSensitive,\n    CaseUpper: CaseUpper,\n    CassetteTape: CassetteTape,\n    Cast: Cast,\n    Castle: Castle,\n    Cat: Cat,\n    Check: Check,\n    CheckCheck: CheckCheck,\n    CheckCircle: CheckCircle,\n    CheckCircle2: CheckCircle2,\n    CheckSquare: CheckSquare,\n    ChefHat: ChefHat,\n    Cherry: Cherry,\n    ChevronDown: ChevronDown,\n    ChevronDownCircle: ChevronDownCircle,\n    ChevronDownSquare: ChevronDownSquare,\n    ChevronFirst: ChevronFirst,\n    ChevronLast: ChevronLast,\n    ChevronLeft: ChevronLeft,\n    ChevronLeftCircle: ChevronLeftCircle,\n    ChevronLeftSquare: ChevronLeftSquare,\n    ChevronRight: ChevronRight,\n    ChevronRightCircle: ChevronRightCircle,\n    ChevronRightSquare: ChevronRightSquare,\n    ChevronUp: ChevronUp,\n    ChevronUpCircle: ChevronUpCircle,\n    ChevronUpSquare: ChevronUpSquare,\n    ChevronsDown: ChevronsDown,\n    ChevronsDownUp: ChevronsDownUp,\n    ChevronsLeft: ChevronsLeft,\n    ChevronsLeftRight: ChevronsLeftRight,\n    ChevronsRight: ChevronsRight,\n    ChevronsRightLeft: ChevronsRightLeft,\n    ChevronsUp: ChevronsUp,\n    ChevronsUpDown: ChevronsUpDown,\n    Chrome: Chrome,\n    Church: Church,\n    Cigarette: Cigarette,\n    CigaretteOff: CigaretteOff,\n    Circle: Circle,\n    CircleDashed: CircleDashed,\n    CircleDollarSign: CircleDollarSign,\n    CircleDot: CircleDot,\n    CircleDotDashed: CircleDotDashed,\n    CircleEllipsis: CircleEllipsis,\n    CircleEqual: CircleEqual,\n    CircleOff: CircleOff,\n    CircleSlash: CircleSlash,\n    CircleSlash2: CircleSlash2,\n    CircuitBoard: CircuitBoard,\n    Citrus: Citrus,\n    Clapperboard: Clapperboard,\n    Clipboard: Clipboard,\n    ClipboardCheck: ClipboardCheck,\n    ClipboardCopy: ClipboardCopy,\n    ClipboardEdit: ClipboardEdit,\n    ClipboardList: ClipboardList,\n    ClipboardPaste: ClipboardPaste,\n    ClipboardSignature: ClipboardSignature,\n    ClipboardType: ClipboardType,\n    ClipboardX: ClipboardX,\n    Clock: Clock,\n    Clock1: Clock1,\n    Clock10: Clock10,\n    Clock11: Clock11,\n    Clock12: Clock12,\n    Clock2: Clock2,\n    Clock3: Clock3,\n    Clock4: Clock4,\n    Clock5: Clock5,\n    Clock6: Clock6,\n    Clock7: Clock7,\n    Clock8: Clock8,\n    Clock9: Clock9,\n    Cloud: Cloud,\n    CloudCog: CloudCog,\n    CloudDrizzle: CloudDrizzle,\n    CloudFog: CloudFog,\n    CloudHail: CloudHail,\n    CloudLightning: CloudLightning,\n    CloudMoon: CloudMoon,\n    CloudMoonRain: CloudMoonRain,\n    CloudOff: CloudOff,\n    CloudRain: CloudRain,\n    CloudRainWind: CloudRainWind,\n    CloudSnow: CloudSnow,\n    CloudSun: CloudSun,\n    CloudSunRain: CloudSunRain,\n    Cloudy: Cloudy,\n    Clover: Clover,\n    Club: Club,\n    Code: Code,\n    Code2: Code2,\n    Codepen: Codepen,\n    Codesandbox: Codesandbox,\n    Coffee: Coffee,\n    Cog: Cog,\n    Coins: Coins,\n    Columns: Columns,\n    Combine: Combine,\n    Command: Command,\n    Compass: Compass,\n    Component: Component,\n    Computer: Computer,\n    ConciergeBell: ConciergeBell,\n    Construction: Construction,\n    Contact: Contact,\n    Contact2: Contact2,\n    Container: Container,\n    Contrast: Contrast,\n    Cookie: Cookie,\n    Copy: Copy,\n    CopyCheck: CopyCheck,\n    CopyMinus: CopyMinus,\n    CopyPlus: CopyPlus,\n    CopySlash: CopySlash,\n    CopyX: CopyX,\n    Copyleft: Copyleft,\n    Copyright: Copyright,\n    CornerDownLeft: CornerDownLeft,\n    CornerDownRight: CornerDownRight,\n    CornerLeftDown: CornerLeftDown,\n    CornerLeftUp: CornerLeftUp,\n    CornerRightDown: CornerRightDown,\n    CornerRightUp: CornerRightUp,\n    CornerUpLeft: CornerUpLeft,\n    CornerUpRight: CornerUpRight,\n    Cpu: Cpu,\n    CreativeCommons: CreativeCommons,\n    CreditCard: CreditCard,\n    Croissant: Croissant,\n    Crop: Crop,\n    Cross: Cross,\n    Crosshair: Crosshair,\n    Crown: Crown,\n    CupSoda: CupSoda,\n    Currency: Currency,\n    Database: Database,\n    DatabaseBackup: DatabaseBackup,\n    DatabaseZap: DatabaseZap,\n    Delete: Delete,\n    Dessert: Dessert,\n    Diamond: Diamond,\n    Dice1: Dice1,\n    Dice2: Dice2,\n    Dice3: Dice3,\n    Dice4: Dice4,\n    Dice5: Dice5,\n    Dice6: Dice6,\n    Dices: Dices,\n    Diff: Diff,\n    Disc: Disc,\n    Disc2: Disc2,\n    Disc3: Disc3,\n    Divide: Divide,\n    DivideCircle: DivideCircle,\n    DivideSquare: DivideSquare,\n    Dna: Dna,\n    DnaOff: DnaOff,\n    Dog: Dog,\n    DollarSign: DollarSign,\n    Donut: Donut,\n    DoorClosed: DoorClosed,\n    DoorOpen: DoorOpen,\n    Dot: Dot,\n    Download: Download,\n    DownloadCloud: DownloadCloud,\n    Dribbble: Dribbble,\n    Droplet: Droplet,\n    Droplets: Droplets,\n    Drumstick: Drumstick,\n    Dumbbell: Dumbbell,\n    Ear: Ear,\n    EarOff: EarOff,\n    Egg: Egg,\n    EggFried: EggFried,\n    EggOff: EggOff,\n    Equal: Equal,\n    EqualNot: EqualNot,\n    Eraser: Eraser,\n    Euro: Euro,\n    Expand: Expand,\n    ExternalLink: ExternalLink,\n    Eye: Eye,\n    EyeOff: EyeOff,\n    Facebook: Facebook,\n    Factory: Factory,\n    Fan: Fan,\n    FastForward: FastForward,\n    Feather: Feather,\n    FerrisWheel: FerrisWheel,\n    Figma: Figma,\n    File: File,\n    FileArchive: FileArchive,\n    FileAudio: FileAudio,\n    FileAudio2: FileAudio2,\n    FileAxis3d: FileAxis3d,\n    FileBadge: FileBadge,\n    FileBadge2: FileBadge2,\n    FileBarChart: FileBarChart,\n    FileBarChart2: FileBarChart2,\n    FileBox: FileBox,\n    FileCheck: FileCheck,\n    FileCheck2: FileCheck2,\n    FileClock: FileClock,\n    FileCode: FileCode,\n    FileCode2: FileCode2,\n    FileCog: FileCog,\n    FileDiff: FileDiff,\n    FileDigit: FileDigit,\n    FileDown: FileDown,\n    FileEdit: FileEdit,\n    FileHeart: FileHeart,\n    FileImage: FileImage,\n    FileInput: FileInput,\n    FileJson: FileJson,\n    FileJson2: FileJson2,\n    FileKey: FileKey,\n    FileKey2: FileKey2,\n    FileLineChart: FileLineChart,\n    FileLock: FileLock,\n    FileLock2: FileLock2,\n    FileMinus: FileMinus,\n    FileMinus2: FileMinus2,\n    FileOutput: FileOutput,\n    FilePieChart: FilePieChart,\n    FilePlus: FilePlus,\n    FilePlus2: FilePlus2,\n    FileQuestion: FileQuestion,\n    FileScan: FileScan,\n    FileSearch: FileSearch,\n    FileSearch2: FileSearch2,\n    FileSignature: FileSignature,\n    FileSpreadsheet: FileSpreadsheet,\n    FileStack: FileStack,\n    FileSymlink: FileSymlink,\n    FileTerminal: FileTerminal,\n    FileText: FileText,\n    FileType: FileType,\n    FileType2: FileType2,\n    FileUp: FileUp,\n    FileVideo: FileVideo,\n    FileVideo2: FileVideo2,\n    FileVolume: FileVolume,\n    FileVolume2: FileVolume2,\n    FileWarning: FileWarning,\n    FileX: FileX,\n    FileX2: FileX2,\n    Files: Files,\n    Film: Film,\n    Filter: Filter,\n    FilterX: FilterX,\n    Fingerprint: Fingerprint,\n    Fish: Fish,\n    FishOff: FishOff,\n    FishSymbol: FishSymbol,\n    Flag: Flag,\n    FlagOff: FlagOff,\n    FlagTriangleLeft: FlagTriangleLeft,\n    FlagTriangleRight: FlagTriangleRight,\n    Flame: Flame,\n    Flashlight: Flashlight,\n    FlashlightOff: FlashlightOff,\n    FlaskConical: FlaskConical,\n    FlaskConicalOff: FlaskConicalOff,\n    FlaskRound: FlaskRound,\n    FlipHorizontal: FlipHorizontal,\n    FlipHorizontal2: FlipHorizontal2,\n    FlipVertical: FlipVertical,\n    FlipVertical2: FlipVertical2,\n    Flower: Flower,\n    Flower2: Flower2,\n    Focus: Focus,\n    FoldHorizontal: FoldHorizontal,\n    FoldVertical: FoldVertical,\n    Folder: Folder,\n    FolderArchive: FolderArchive,\n    FolderCheck: FolderCheck,\n    FolderClock: FolderClock,\n    FolderClosed: FolderClosed,\n    FolderCog: FolderCog,\n    FolderDot: FolderDot,\n    FolderDown: FolderDown,\n    FolderEdit: FolderEdit,\n    FolderGit: FolderGit,\n    FolderGit2: FolderGit2,\n    FolderHeart: FolderHeart,\n    FolderInput: FolderInput,\n    FolderKanban: FolderKanban,\n    FolderKey: FolderKey,\n    FolderLock: FolderLock,\n    FolderMinus: FolderMinus,\n    FolderOpen: FolderOpen,\n    FolderOpenDot: FolderOpenDot,\n    FolderOutput: FolderOutput,\n    FolderPlus: FolderPlus,\n    FolderRoot: FolderRoot,\n    FolderSearch: FolderSearch,\n    FolderSearch2: FolderSearch2,\n    FolderSymlink: FolderSymlink,\n    FolderSync: FolderSync,\n    FolderTree: FolderTree,\n    FolderUp: FolderUp,\n    FolderX: FolderX,\n    Folders: Folders,\n    Footprints: Footprints,\n    Forklift: Forklift,\n    FormInput: FormInput,\n    Forward: Forward,\n    Frame: Frame,\n    Framer: Framer,\n    Frown: Frown,\n    Fuel: Fuel,\n    FunctionSquare: FunctionSquare,\n    GalleryHorizontal: GalleryHorizontal,\n    GalleryHorizontalEnd: GalleryHorizontalEnd,\n    GalleryThumbnails: GalleryThumbnails,\n    GalleryVertical: GalleryVertical,\n    GalleryVerticalEnd: GalleryVerticalEnd,\n    Gamepad: Gamepad,\n    Gamepad2: Gamepad2,\n    GanttChart: GanttChart,\n    GanttChartSquare: GanttChartSquare,\n    Gauge: Gauge,\n    GaugeCircle: GaugeCircle,\n    Gavel: Gavel,\n    Gem: Gem,\n    Ghost: Ghost,\n    Gift: Gift,\n    GitBranch: GitBranch,\n    GitBranchPlus: GitBranchPlus,\n    GitCommit: GitCommit,\n    GitCompare: GitCompare,\n    GitFork: GitFork,\n    GitMerge: GitMerge,\n    GitPullRequest: GitPullRequest,\n    GitPullRequestClosed: GitPullRequestClosed,\n    GitPullRequestDraft: GitPullRequestDraft,\n    Github: Github,\n    Gitlab: Gitlab,\n    GlassWater: GlassWater,\n    Glasses: Glasses,\n    Globe: Globe,\n    Globe2: Globe2,\n    Goal: Goal,\n    Grab: Grab,\n    GraduationCap: GraduationCap,\n    Grape: Grape,\n    Grid2x2: Grid2x2,\n    Grid3x3: Grid3x3,\n    Grip: Grip,\n    GripHorizontal: GripHorizontal,\n    GripVertical: GripVertical,\n    Group: Group,\n    Hammer: Hammer,\n    Hand: Hand,\n    HandMetal: HandMetal,\n    HardDrive: HardDrive,\n    HardDriveDownload: HardDriveDownload,\n    HardDriveUpload: HardDriveUpload,\n    HardHat: HardHat,\n    Hash: Hash,\n    Haze: Haze,\n    HdmiPort: HdmiPort,\n    Heading: Heading,\n    Heading1: Heading1,\n    Heading2: Heading2,\n    Heading3: Heading3,\n    Heading4: Heading4,\n    Heading5: Heading5,\n    Heading6: Heading6,\n    Headphones: Headphones,\n    Heart: Heart,\n    HeartCrack: HeartCrack,\n    HeartHandshake: HeartHandshake,\n    HeartOff: HeartOff,\n    HeartPulse: HeartPulse,\n    HelpCircle: HelpCircle,\n    HelpingHand: HelpingHand,\n    Hexagon: Hexagon,\n    Highlighter: Highlighter,\n    History: History,\n    Home: Home,\n    Hop: Hop,\n    HopOff: HopOff,\n    Hotel: Hotel,\n    Hourglass: Hourglass,\n    IceCream: IceCream,\n    IceCream2: IceCream2,\n    Image: Image,\n    ImageMinus: ImageMinus,\n    ImageOff: ImageOff,\n    ImagePlus: ImagePlus,\n    Import: Import,\n    Inbox: Inbox,\n    Indent: Indent,\n    IndianRupee: IndianRupee,\n    Infinity: Infinity,\n    Info: Info,\n    Instagram: Instagram,\n    Italic: Italic,\n    IterationCcw: IterationCcw,\n    IterationCw: IterationCw,\n    JapaneseYen: JapaneseYen,\n    Joystick: Joystick,\n    Kanban: Kanban,\n    KanbanSquare: KanbanSquare,\n    KanbanSquareDashed: KanbanSquareDashed,\n    Key: Key,\n    KeyRound: KeyRound,\n    KeySquare: KeySquare,\n    Keyboard: Keyboard,\n    Lamp: Lamp,\n    LampCeiling: LampCeiling,\n    LampDesk: LampDesk,\n    LampFloor: LampFloor,\n    LampWallDown: LampWallDown,\n    LampWallUp: LampWallUp,\n    Landmark: Landmark,\n    Languages: Languages,\n    Laptop: Laptop,\n    Laptop2: Laptop2,\n    Lasso: Lasso,\n    LassoSelect: LassoSelect,\n    Laugh: Laugh,\n    Layers: Layers,\n    Layout: Layout,\n    LayoutDashboard: LayoutDashboard,\n    LayoutGrid: LayoutGrid,\n    LayoutList: LayoutList,\n    LayoutPanelLeft: LayoutPanelLeft,\n    LayoutPanelTop: LayoutPanelTop,\n    LayoutTemplate: LayoutTemplate,\n    Leaf: Leaf,\n    LeafyGreen: LeafyGreen,\n    Library: Library,\n    LifeBuoy: LifeBuoy,\n    Ligature: Ligature,\n    Lightbulb: Lightbulb,\n    LightbulbOff: LightbulbOff,\n    LineChart: LineChart,\n    Link: Link,\n    Link2: Link2,\n    Link2Off: Link2Off,\n    Linkedin: Linkedin,\n    List: List,\n    ListChecks: ListChecks,\n    ListEnd: ListEnd,\n    ListFilter: ListFilter,\n    ListMinus: ListMinus,\n    ListMusic: ListMusic,\n    ListOrdered: ListOrdered,\n    ListPlus: ListPlus,\n    ListRestart: ListRestart,\n    ListStart: ListStart,\n    ListTodo: ListTodo,\n    ListTree: ListTree,\n    ListVideo: ListVideo,\n    ListX: ListX,\n    Loader: Loader,\n    Loader2: Loader2,\n    Locate: Locate,\n    LocateFixed: LocateFixed,\n    LocateOff: LocateOff,\n    Lock: Lock,\n    LogIn: LogIn,\n    LogOut: LogOut,\n    Lollipop: Lollipop,\n    Luggage: Luggage,\n    MSquare: MSquare,\n    Magnet: Magnet,\n    Mail: Mail,\n    MailCheck: MailCheck,\n    MailMinus: MailMinus,\n    MailOpen: MailOpen,\n    MailPlus: MailPlus,\n    MailQuestion: MailQuestion,\n    MailSearch: MailSearch,\n    MailWarning: MailWarning,\n    MailX: MailX,\n    Mailbox: Mailbox,\n    Mails: Mails,\n    Map: Map,\n    MapPin: MapPin,\n    MapPinOff: MapPinOff,\n    Martini: Martini,\n    Maximize: Maximize,\n    Maximize2: Maximize2,\n    Medal: Medal,\n    Megaphone: Megaphone,\n    MegaphoneOff: MegaphoneOff,\n    Meh: Meh,\n    MemoryStick: MemoryStick,\n    Menu: Menu,\n    MenuSquare: MenuSquare,\n    Merge: Merge,\n    MessageCircle: MessageCircle,\n    MessageSquare: MessageSquare,\n    MessageSquareDashed: MessageSquareDashed,\n    MessageSquarePlus: MessageSquarePlus,\n    MessagesSquare: MessagesSquare,\n    Mic: Mic,\n    Mic2: Mic2,\n    MicOff: MicOff,\n    Microscope: Microscope,\n    Microwave: Microwave,\n    Milestone: Milestone,\n    Milk: Milk,\n    MilkOff: MilkOff,\n    Minimize: Minimize,\n    Minimize2: Minimize2,\n    Minus: Minus,\n    MinusCircle: MinusCircle,\n    MinusSquare: MinusSquare,\n    Monitor: Monitor,\n    MonitorCheck: MonitorCheck,\n    MonitorDot: MonitorDot,\n    MonitorDown: MonitorDown,\n    MonitorOff: MonitorOff,\n    MonitorPause: MonitorPause,\n    MonitorPlay: MonitorPlay,\n    MonitorSmartphone: MonitorSmartphone,\n    MonitorSpeaker: MonitorSpeaker,\n    MonitorStop: MonitorStop,\n    MonitorUp: MonitorUp,\n    MonitorX: MonitorX,\n    Moon: Moon,\n    MoonStar: MoonStar,\n    MoreHorizontal: MoreHorizontal,\n    MoreVertical: MoreVertical,\n    Mountain: Mountain,\n    MountainSnow: MountainSnow,\n    Mouse: Mouse,\n    MousePointer: MousePointer,\n    MousePointer2: MousePointer2,\n    MousePointerClick: MousePointerClick,\n    MousePointerSquare: MousePointerSquare,\n    MousePointerSquareDashed: MousePointerSquareDashed,\n    Move: Move,\n    Move3d: Move3d,\n    MoveDiagonal: MoveDiagonal,\n    MoveDiagonal2: MoveDiagonal2,\n    MoveDown: MoveDown,\n    MoveDownLeft: MoveDownLeft,\n    MoveDownRight: MoveDownRight,\n    MoveHorizontal: MoveHorizontal,\n    MoveLeft: MoveLeft,\n    MoveRight: MoveRight,\n    MoveUp: MoveUp,\n    MoveUpLeft: MoveUpLeft,\n    MoveUpRight: MoveUpRight,\n    MoveVertical: MoveVertical,\n    Music: Music,\n    Music2: Music2,\n    Music3: Music3,\n    Music4: Music4,\n    Navigation: Navigation,\n    Navigation2: Navigation2,\n    Navigation2Off: Navigation2Off,\n    NavigationOff: NavigationOff,\n    Network: Network,\n    Newspaper: Newspaper,\n    Nfc: Nfc,\n    Nut: Nut,\n    NutOff: NutOff,\n    Octagon: Octagon,\n    Option: Option,\n    Orbit: Orbit,\n    Outdent: Outdent,\n    Package: Package,\n    Package2: Package2,\n    PackageCheck: PackageCheck,\n    PackageMinus: PackageMinus,\n    PackageOpen: PackageOpen,\n    PackagePlus: PackagePlus,\n    PackageSearch: PackageSearch,\n    PackageX: PackageX,\n    PaintBucket: PaintBucket,\n    Paintbrush: Paintbrush,\n    Paintbrush2: Paintbrush2,\n    Palette: Palette,\n    Palmtree: Palmtree,\n    PanelBottom: PanelBottom,\n    PanelBottomClose: PanelBottomClose,\n    PanelBottomInactive: PanelBottomInactive,\n    PanelBottomOpen: PanelBottomOpen,\n    PanelLeft: PanelLeft,\n    PanelLeftClose: PanelLeftClose,\n    PanelLeftInactive: PanelLeftInactive,\n    PanelLeftOpen: PanelLeftOpen,\n    PanelRight: PanelRight,\n    PanelRightClose: PanelRightClose,\n    PanelRightInactive: PanelRightInactive,\n    PanelRightOpen: PanelRightOpen,\n    PanelTop: PanelTop,\n    PanelTopClose: PanelTopClose,\n    PanelTopInactive: PanelTopInactive,\n    PanelTopOpen: PanelTopOpen,\n    Paperclip: Paperclip,\n    Parentheses: Parentheses,\n    ParkingCircle: ParkingCircle,\n    ParkingCircleOff: ParkingCircleOff,\n    ParkingMeter: ParkingMeter,\n    ParkingSquare: ParkingSquare,\n    ParkingSquareOff: ParkingSquareOff,\n    PartyPopper: PartyPopper,\n    Pause: Pause,\n    PauseCircle: PauseCircle,\n    PauseOctagon: PauseOctagon,\n    PawPrint: PawPrint,\n    PcCase: PcCase,\n    Pen: Pen,\n    PenLine: PenLine,\n    PenSquare: PenSquare,\n    PenTool: PenTool,\n    Pencil: Pencil,\n    PencilLine: PencilLine,\n    PencilRuler: PencilRuler,\n    Percent: Percent,\n    PercentCircle: PercentCircle,\n    PercentDiamond: PercentDiamond,\n    PercentSquare: PercentSquare,\n    PersonStanding: PersonStanding,\n    Phone: Phone,\n    PhoneCall: PhoneCall,\n    PhoneForwarded: PhoneForwarded,\n    PhoneIncoming: PhoneIncoming,\n    PhoneMissed: PhoneMissed,\n    PhoneOff: PhoneOff,\n    PhoneOutgoing: PhoneOutgoing,\n    Pi: Pi,\n    PiSquare: PiSquare,\n    PictureInPicture: PictureInPicture,\n    PictureInPicture2: PictureInPicture2,\n    PieChart: PieChart,\n    PiggyBank: PiggyBank,\n    Pilcrow: Pilcrow,\n    PilcrowSquare: PilcrowSquare,\n    Pill: Pill,\n    Pin: Pin,\n    PinOff: PinOff,\n    Pipette: Pipette,\n    Pizza: Pizza,\n    Plane: Plane,\n    PlaneLanding: PlaneLanding,\n    PlaneTakeoff: PlaneTakeoff,\n    Play: Play,\n    PlayCircle: PlayCircle,\n    PlaySquare: PlaySquare,\n    Plug: Plug,\n    Plug2: Plug2,\n    PlugZap: PlugZap,\n    PlugZap2: PlugZap2,\n    Plus: Plus,\n    PlusCircle: PlusCircle,\n    PlusSquare: PlusSquare,\n    Pocket: Pocket,\n    PocketKnife: PocketKnife,\n    Podcast: Podcast,\n    Pointer: Pointer,\n    Popcorn: Popcorn,\n    Popsicle: Popsicle,\n    PoundSterling: PoundSterling,\n    Power: Power,\n    PowerOff: PowerOff,\n    Presentation: Presentation,\n    Printer: Printer,\n    Projector: Projector,\n    Puzzle: Puzzle,\n    QrCode: QrCode,\n    Quote: Quote,\n    Rabbit: Rabbit,\n    Radar: Radar,\n    Radiation: Radiation,\n    Radio: Radio,\n    RadioReceiver: RadioReceiver,\n    RadioTower: RadioTower,\n    RailSymbol: RailSymbol,\n    Rainbow: Rainbow,\n    Rat: Rat,\n    Ratio: Ratio,\n    Receipt: Receipt,\n    RectangleHorizontal: RectangleHorizontal,\n    RectangleVertical: RectangleVertical,\n    Recycle: Recycle,\n    Redo: Redo,\n    Redo2: Redo2,\n    RedoDot: RedoDot,\n    RefreshCcw: RefreshCcw,\n    RefreshCcwDot: RefreshCcwDot,\n    RefreshCw: RefreshCw,\n    RefreshCwOff: RefreshCwOff,\n    Refrigerator: Refrigerator,\n    Regex: Regex,\n    RemoveFormatting: RemoveFormatting,\n    Repeat: Repeat,\n    Repeat1: Repeat1,\n    Repeat2: Repeat2,\n    Replace: Replace,\n    ReplaceAll: ReplaceAll,\n    Reply: Reply,\n    ReplyAll: ReplyAll,\n    Rewind: Rewind,\n    Rocket: Rocket,\n    RockingChair: RockingChair,\n    RollerCoaster: RollerCoaster,\n    Rotate3d: Rotate3d,\n    RotateCcw: RotateCcw,\n    RotateCw: RotateCw,\n    Router: Router,\n    Rows: Rows,\n    Rss: Rss,\n    Ruler: Ruler,\n    RussianRuble: RussianRuble,\n    Sailboat: Sailboat,\n    Salad: Salad,\n    Sandwich: Sandwich,\n    Satellite: Satellite,\n    SatelliteDish: SatelliteDish,\n    Save: Save,\n    SaveAll: SaveAll,\n    Scale: Scale,\n    Scale3d: Scale3d,\n    Scaling: Scaling,\n    Scan: Scan,\n    ScanFace: ScanFace,\n    ScanLine: ScanLine,\n    ScatterChart: ScatterChart,\n    School: School,\n    School2: School2,\n    Scissors: Scissors,\n    ScissorsLineDashed: ScissorsLineDashed,\n    ScissorsSquare: ScissorsSquare,\n    ScissorsSquareDashedBottom: ScissorsSquareDashedBottom,\n    ScreenShare: ScreenShare,\n    ScreenShareOff: ScreenShareOff,\n    Scroll: Scroll,\n    ScrollText: ScrollText,\n    Search: Search,\n    SearchCheck: SearchCheck,\n    SearchCode: SearchCode,\n    SearchSlash: SearchSlash,\n    SearchX: SearchX,\n    Send: Send,\n    SendHorizontal: SendHorizontal,\n    SendToBack: SendToBack,\n    SeparatorHorizontal: SeparatorHorizontal,\n    SeparatorVertical: SeparatorVertical,\n    Server: Server,\n    ServerCog: ServerCog,\n    ServerCrash: ServerCrash,\n    ServerOff: ServerOff,\n    Settings: Settings,\n    Settings2: Settings2,\n    Shapes: Shapes,\n    Share: Share,\n    Share2: Share2,\n    Sheet: Sheet,\n    Shell: Shell,\n    Shield: Shield,\n    ShieldAlert: ShieldAlert,\n    ShieldBan: ShieldBan,\n    ShieldCheck: ShieldCheck,\n    ShieldEllipsis: ShieldEllipsis,\n    ShieldHalf: ShieldHalf,\n    ShieldMinus: ShieldMinus,\n    ShieldOff: ShieldOff,\n    ShieldPlus: ShieldPlus,\n    ShieldQuestion: ShieldQuestion,\n    ShieldX: ShieldX,\n    Ship: Ship,\n    ShipWheel: ShipWheel,\n    Shirt: Shirt,\n    ShoppingBag: ShoppingBag,\n    ShoppingBasket: ShoppingBasket,\n    ShoppingCart: ShoppingCart,\n    Shovel: Shovel,\n    ShowerHead: ShowerHead,\n    Shrink: Shrink,\n    Shrub: Shrub,\n    Shuffle: Shuffle,\n    Sigma: Sigma,\n    SigmaSquare: SigmaSquare,\n    Signal: Signal,\n    SignalHigh: SignalHigh,\n    SignalLow: SignalLow,\n    SignalMedium: SignalMedium,\n    SignalZero: SignalZero,\n    Siren: Siren,\n    SkipBack: SkipBack,\n    SkipForward: SkipForward,\n    Skull: Skull,\n    Slack: Slack,\n    Slash: Slash,\n    Slice: Slice,\n    Sliders: Sliders,\n    SlidersHorizontal: SlidersHorizontal,\n    Smartphone: Smartphone,\n    SmartphoneCharging: SmartphoneCharging,\n    SmartphoneNfc: SmartphoneNfc,\n    Smile: Smile,\n    SmilePlus: SmilePlus,\n    Snail: Snail,\n    Snowflake: Snowflake,\n    Sofa: Sofa,\n    Soup: Soup,\n    Space: Space,\n    Spade: Spade,\n    Sparkle: Sparkle,\n    Sparkles: Sparkles,\n    Speaker: Speaker,\n    SpellCheck: SpellCheck,\n    SpellCheck2: SpellCheck2,\n    Spline: Spline,\n    Split: Split,\n    SplitSquareHorizontal: SplitSquareHorizontal,\n    SplitSquareVertical: SplitSquareVertical,\n    SprayCan: SprayCan,\n    Sprout: Sprout,\n    Square: Square,\n    SquareAsterisk: SquareAsterisk,\n    SquareCode: SquareCode,\n    SquareDashedBottom: SquareDashedBottom,\n    SquareDashedBottomCode: SquareDashedBottomCode,\n    SquareDot: SquareDot,\n    SquareEqual: SquareEqual,\n    SquareSlash: SquareSlash,\n    SquareStack: SquareStack,\n    Squirrel: Squirrel,\n    Stamp: Stamp,\n    Star: Star,\n    StarHalf: StarHalf,\n    StarOff: StarOff,\n    StepBack: StepBack,\n    StepForward: StepForward,\n    Stethoscope: Stethoscope,\n    Sticker: Sticker,\n    StickyNote: StickyNote,\n    StopCircle: StopCircle,\n    Store: Store,\n    StretchHorizontal: StretchHorizontal,\n    StretchVertical: StretchVertical,\n    Strikethrough: Strikethrough,\n    Subscript: Subscript,\n    Subtitles: Subtitles,\n    Sun: Sun,\n    SunDim: SunDim,\n    SunMedium: SunMedium,\n    SunMoon: SunMoon,\n    SunSnow: SunSnow,\n    Sunrise: Sunrise,\n    Sunset: Sunset,\n    Superscript: Superscript,\n    SwissFranc: SwissFranc,\n    SwitchCamera: SwitchCamera,\n    Sword: Sword,\n    Swords: Swords,\n    Syringe: Syringe,\n    Table: Table,\n    Table2: Table2,\n    TableProperties: TableProperties,\n    Tablet: Tablet,\n    TabletSmartphone: TabletSmartphone,\n    Tablets: Tablets,\n    Tag: Tag,\n    Tags: Tags,\n    Tally1: Tally1,\n    Tally2: Tally2,\n    Tally3: Tally3,\n    Tally4: Tally4,\n    Tally5: Tally5,\n    Target: Target,\n    Tent: Tent,\n    Terminal: Terminal,\n    TerminalSquare: TerminalSquare,\n    TestTube: TestTube,\n    TestTube2: TestTube2,\n    TestTubes: TestTubes,\n    Text: Text,\n    TextCursor: TextCursor,\n    TextCursorInput: TextCursorInput,\n    TextQuote: TextQuote,\n    TextSelect: TextSelect,\n    Thermometer: Thermometer,\n    ThermometerSnowflake: ThermometerSnowflake,\n    ThermometerSun: ThermometerSun,\n    ThumbsDown: ThumbsDown,\n    ThumbsUp: ThumbsUp,\n    Ticket: Ticket,\n    Timer: Timer,\n    TimerOff: TimerOff,\n    TimerReset: TimerReset,\n    ToggleLeft: ToggleLeft,\n    ToggleRight: ToggleRight,\n    Tornado: Tornado,\n    Touchpad: Touchpad,\n    TouchpadOff: TouchpadOff,\n    TowerControl: TowerControl,\n    ToyBrick: ToyBrick,\n    Tractor: Tractor,\n    TrafficCone: TrafficCone,\n    TrainFront: TrainFront,\n    TrainFrontTunnel: TrainFrontTunnel,\n    TrainTrack: TrainTrack,\n    TramFront: TramFront,\n    Trash: Trash,\n    Trash2: Trash2,\n    TreeDeciduous: TreeDeciduous,\n    TreePine: TreePine,\n    Trees: Trees,\n    Trello: Trello,\n    TrendingDown: TrendingDown,\n    TrendingUp: TrendingUp,\n    Triangle: Triangle,\n    TriangleRight: TriangleRight,\n    Trophy: Trophy,\n    Truck: Truck,\n    Turtle: Turtle,\n    Tv: Tv,\n    Tv2: Tv2,\n    Twitch: Twitch,\n    Twitter: Twitter,\n    Type: Type,\n    Umbrella: Umbrella,\n    Underline: Underline,\n    Undo: Undo,\n    Undo2: Undo2,\n    UndoDot: UndoDot,\n    UnfoldHorizontal: UnfoldHorizontal,\n    UnfoldVertical: UnfoldVertical,\n    Ungroup: Ungroup,\n    Unlink: Unlink,\n    Unlink2: Unlink2,\n    Unlock: Unlock,\n    Unplug: Unplug,\n    Upload: Upload,\n    UploadCloud: UploadCloud,\n    Usb: Usb,\n    User: User,\n    User2: User2,\n    UserCheck: UserCheck,\n    UserCheck2: UserCheck2,\n    UserCircle: UserCircle,\n    UserCircle2: UserCircle2,\n    UserCog: UserCog,\n    UserCog2: UserCog2,\n    UserMinus: UserMinus,\n    UserMinus2: UserMinus2,\n    UserPlus: UserPlus,\n    UserPlus2: UserPlus2,\n    UserSquare: UserSquare,\n    UserSquare2: UserSquare2,\n    UserX: UserX,\n    UserX2: UserX2,\n    Users: Users,\n    Users2: Users2,\n    Utensils: Utensils,\n    UtensilsCrossed: UtensilsCrossed,\n    UtilityPole: UtilityPole,\n    Variable: Variable,\n    Vegan: Vegan,\n    VenetianMask: VenetianMask,\n    Vibrate: Vibrate,\n    VibrateOff: VibrateOff,\n    Video: Video,\n    VideoOff: VideoOff,\n    Videotape: Videotape,\n    View: View,\n    Voicemail: Voicemail,\n    Volume: Volume,\n    Volume1: Volume1,\n    Volume2: Volume2,\n    VolumeX: VolumeX,\n    Vote: Vote,\n    Wallet: Wallet,\n    Wallet2: Wallet2,\n    WalletCards: WalletCards,\n    Wallpaper: Wallpaper,\n    Wand: Wand,\n    Wand2: Wand2,\n    Warehouse: Warehouse,\n    Watch: Watch,\n    Waves: Waves,\n    Webcam: Webcam,\n    Webhook: Webhook,\n    Wheat: Wheat,\n    WheatOff: WheatOff,\n    WholeWord: WholeWord,\n    Wifi: Wifi,\n    WifiOff: WifiOff,\n    Wind: Wind,\n    Wine: Wine,\n    WineOff: WineOff,\n    Workflow: Workflow,\n    WrapText: WrapText,\n    Wrench: Wrench,\n    X: X,\n    XCircle: XCircle,\n    XOctagon: XOctagon,\n    XSquare: XSquare,\n    Youtube: Youtube,\n    Zap: Zap,\n    ZapOff: ZapOff,\n    ZoomIn: ZoomIn,\n    ZoomOut: ZoomOut\n});\nexports.Accessibility = Accessibility;\nexports.AccessibilityIcon = Accessibility;\nexports.Activity = Activity;\nexports.ActivityIcon = Activity;\nexports.ActivitySquare = ActivitySquare;\nexports.ActivitySquareIcon = ActivitySquare;\nexports.AirVent = AirVent;\nexports.AirVentIcon = AirVent;\nexports.Airplay = Airplay;\nexports.AirplayIcon = Airplay;\nexports.AlarmCheck = AlarmCheck;\nexports.AlarmCheckIcon = AlarmCheck;\nexports.AlarmClock = AlarmClock;\nexports.AlarmClockIcon = AlarmClock;\nexports.AlarmClockOff = AlarmClockOff;\nexports.AlarmClockOffIcon = AlarmClockOff;\nexports.AlarmMinus = AlarmMinus;\nexports.AlarmMinusIcon = AlarmMinus;\nexports.AlarmPlus = AlarmPlus;\nexports.AlarmPlusIcon = AlarmPlus;\nexports.Album = Album;\nexports.AlbumIcon = Album;\nexports.AlertCircle = AlertCircle;\nexports.AlertCircleIcon = AlertCircle;\nexports.AlertOctagon = AlertOctagon;\nexports.AlertOctagonIcon = AlertOctagon;\nexports.AlertTriangle = AlertTriangle;\nexports.AlertTriangleIcon = AlertTriangle;\nexports.AlignCenter = AlignCenter;\nexports.AlignCenterHorizontal = AlignCenterHorizontal;\nexports.AlignCenterHorizontalIcon = AlignCenterHorizontal;\nexports.AlignCenterIcon = AlignCenter;\nexports.AlignCenterVertical = AlignCenterVertical;\nexports.AlignCenterVerticalIcon = AlignCenterVertical;\nexports.AlignEndHorizontal = AlignEndHorizontal;\nexports.AlignEndHorizontalIcon = AlignEndHorizontal;\nexports.AlignEndVertical = AlignEndVertical;\nexports.AlignEndVerticalIcon = AlignEndVertical;\nexports.AlignHorizontalDistributeCenter = AlignHorizontalDistributeCenter;\nexports.AlignHorizontalDistributeCenterIcon = AlignHorizontalDistributeCenter;\nexports.AlignHorizontalDistributeEnd = AlignHorizontalDistributeEnd;\nexports.AlignHorizontalDistributeEndIcon = AlignHorizontalDistributeEnd;\nexports.AlignHorizontalDistributeStart = AlignHorizontalDistributeStart;\nexports.AlignHorizontalDistributeStartIcon = AlignHorizontalDistributeStart;\nexports.AlignHorizontalJustifyCenter = AlignHorizontalJustifyCenter;\nexports.AlignHorizontalJustifyCenterIcon = AlignHorizontalJustifyCenter;\nexports.AlignHorizontalJustifyEnd = AlignHorizontalJustifyEnd;\nexports.AlignHorizontalJustifyEndIcon = AlignHorizontalJustifyEnd;\nexports.AlignHorizontalJustifyStart = AlignHorizontalJustifyStart;\nexports.AlignHorizontalJustifyStartIcon = AlignHorizontalJustifyStart;\nexports.AlignHorizontalSpaceAround = AlignHorizontalSpaceAround;\nexports.AlignHorizontalSpaceAroundIcon = AlignHorizontalSpaceAround;\nexports.AlignHorizontalSpaceBetween = AlignHorizontalSpaceBetween;\nexports.AlignHorizontalSpaceBetweenIcon = AlignHorizontalSpaceBetween;\nexports.AlignJustify = AlignJustify;\nexports.AlignJustifyIcon = AlignJustify;\nexports.AlignLeft = AlignLeft;\nexports.AlignLeftIcon = AlignLeft;\nexports.AlignRight = AlignRight;\nexports.AlignRightIcon = AlignRight;\nexports.AlignStartHorizontal = AlignStartHorizontal;\nexports.AlignStartHorizontalIcon = AlignStartHorizontal;\nexports.AlignStartVertical = AlignStartVertical;\nexports.AlignStartVerticalIcon = AlignStartVertical;\nexports.AlignVerticalDistributeCenter = AlignVerticalDistributeCenter;\nexports.AlignVerticalDistributeCenterIcon = AlignVerticalDistributeCenter;\nexports.AlignVerticalDistributeEnd = AlignVerticalDistributeEnd;\nexports.AlignVerticalDistributeEndIcon = AlignVerticalDistributeEnd;\nexports.AlignVerticalDistributeStart = AlignVerticalDistributeStart;\nexports.AlignVerticalDistributeStartIcon = AlignVerticalDistributeStart;\nexports.AlignVerticalJustifyCenter = AlignVerticalJustifyCenter;\nexports.AlignVerticalJustifyCenterIcon = AlignVerticalJustifyCenter;\nexports.AlignVerticalJustifyEnd = AlignVerticalJustifyEnd;\nexports.AlignVerticalJustifyEndIcon = AlignVerticalJustifyEnd;\nexports.AlignVerticalJustifyStart = AlignVerticalJustifyStart;\nexports.AlignVerticalJustifyStartIcon = AlignVerticalJustifyStart;\nexports.AlignVerticalSpaceAround = AlignVerticalSpaceAround;\nexports.AlignVerticalSpaceAroundIcon = AlignVerticalSpaceAround;\nexports.AlignVerticalSpaceBetween = AlignVerticalSpaceBetween;\nexports.AlignVerticalSpaceBetweenIcon = AlignVerticalSpaceBetween;\nexports.Ampersand = Ampersand;\nexports.AmpersandIcon = Ampersand;\nexports.Ampersands = Ampersands;\nexports.AmpersandsIcon = Ampersands;\nexports.Anchor = Anchor;\nexports.AnchorIcon = Anchor;\nexports.Angry = Angry;\nexports.AngryIcon = Angry;\nexports.Annoyed = Annoyed;\nexports.AnnoyedIcon = Annoyed;\nexports.Antenna = Antenna;\nexports.AntennaIcon = Antenna;\nexports.Aperture = Aperture;\nexports.ApertureIcon = Aperture;\nexports.AppWindow = AppWindow;\nexports.AppWindowIcon = AppWindow;\nexports.Apple = Apple;\nexports.AppleIcon = Apple;\nexports.Archive = Archive;\nexports.ArchiveIcon = Archive;\nexports.ArchiveRestore = ArchiveRestore;\nexports.ArchiveRestoreIcon = ArchiveRestore;\nexports.ArchiveX = ArchiveX;\nexports.ArchiveXIcon = ArchiveX;\nexports.AreaChart = AreaChart;\nexports.AreaChartIcon = AreaChart;\nexports.Armchair = Armchair;\nexports.ArmchairIcon = Armchair;\nexports.ArrowBigDown = ArrowBigDown;\nexports.ArrowBigDownDash = ArrowBigDownDash;\nexports.ArrowBigDownDashIcon = ArrowBigDownDash;\nexports.ArrowBigDownIcon = ArrowBigDown;\nexports.ArrowBigLeft = ArrowBigLeft;\nexports.ArrowBigLeftDash = ArrowBigLeftDash;\nexports.ArrowBigLeftDashIcon = ArrowBigLeftDash;\nexports.ArrowBigLeftIcon = ArrowBigLeft;\nexports.ArrowBigRight = ArrowBigRight;\nexports.ArrowBigRightDash = ArrowBigRightDash;\nexports.ArrowBigRightDashIcon = ArrowBigRightDash;\nexports.ArrowBigRightIcon = ArrowBigRight;\nexports.ArrowBigUp = ArrowBigUp;\nexports.ArrowBigUpDash = ArrowBigUpDash;\nexports.ArrowBigUpDashIcon = ArrowBigUpDash;\nexports.ArrowBigUpIcon = ArrowBigUp;\nexports.ArrowDown = ArrowDown;\nexports.ArrowDown01 = ArrowDown01;\nexports.ArrowDown01Icon = ArrowDown01;\nexports.ArrowDown10 = ArrowDown10;\nexports.ArrowDown10Icon = ArrowDown10;\nexports.ArrowDownAZ = ArrowDownAZ;\nexports.ArrowDownAZIcon = ArrowDownAZ;\nexports.ArrowDownAz = ArrowDownAZ;\nexports.ArrowDownAzIcon = ArrowDownAZ;\nexports.ArrowDownCircle = ArrowDownCircle;\nexports.ArrowDownCircleIcon = ArrowDownCircle;\nexports.ArrowDownFromLine = ArrowDownFromLine;\nexports.ArrowDownFromLineIcon = ArrowDownFromLine;\nexports.ArrowDownIcon = ArrowDown;\nexports.ArrowDownLeft = ArrowDownLeft;\nexports.ArrowDownLeftFromCircle = ArrowDownLeftFromCircle;\nexports.ArrowDownLeftFromCircleIcon = ArrowDownLeftFromCircle;\nexports.ArrowDownLeftIcon = ArrowDownLeft;\nexports.ArrowDownLeftSquare = ArrowDownLeftSquare;\nexports.ArrowDownLeftSquareIcon = ArrowDownLeftSquare;\nexports.ArrowDownNarrowWide = ArrowDownNarrowWide;\nexports.ArrowDownNarrowWideIcon = ArrowDownNarrowWide;\nexports.ArrowDownRight = ArrowDownRight;\nexports.ArrowDownRightFromCircle = ArrowDownRightFromCircle;\nexports.ArrowDownRightFromCircleIcon = ArrowDownRightFromCircle;\nexports.ArrowDownRightIcon = ArrowDownRight;\nexports.ArrowDownRightSquare = ArrowDownRightSquare;\nexports.ArrowDownRightSquareIcon = ArrowDownRightSquare;\nexports.ArrowDownSquare = ArrowDownSquare;\nexports.ArrowDownSquareIcon = ArrowDownSquare;\nexports.ArrowDownToDot = ArrowDownToDot;\nexports.ArrowDownToDotIcon = ArrowDownToDot;\nexports.ArrowDownToLine = ArrowDownToLine;\nexports.ArrowDownToLineIcon = ArrowDownToLine;\nexports.ArrowDownUp = ArrowDownUp;\nexports.ArrowDownUpIcon = ArrowDownUp;\nexports.ArrowDownWideNarrow = ArrowDownWideNarrow;\nexports.ArrowDownWideNarrowIcon = ArrowDownWideNarrow;\nexports.ArrowDownZA = ArrowDownZA;\nexports.ArrowDownZAIcon = ArrowDownZA;\nexports.ArrowDownZa = ArrowDownZA;\nexports.ArrowDownZaIcon = ArrowDownZA;\nexports.ArrowLeft = ArrowLeft;\nexports.ArrowLeftCircle = ArrowLeftCircle;\nexports.ArrowLeftCircleIcon = ArrowLeftCircle;\nexports.ArrowLeftFromLine = ArrowLeftFromLine;\nexports.ArrowLeftFromLineIcon = ArrowLeftFromLine;\nexports.ArrowLeftIcon = ArrowLeft;\nexports.ArrowLeftRight = ArrowLeftRight;\nexports.ArrowLeftRightIcon = ArrowLeftRight;\nexports.ArrowLeftSquare = ArrowLeftSquare;\nexports.ArrowLeftSquareIcon = ArrowLeftSquare;\nexports.ArrowLeftToLine = ArrowLeftToLine;\nexports.ArrowLeftToLineIcon = ArrowLeftToLine;\nexports.ArrowRight = ArrowRight;\nexports.ArrowRightCircle = ArrowRightCircle;\nexports.ArrowRightCircleIcon = ArrowRightCircle;\nexports.ArrowRightFromLine = ArrowRightFromLine;\nexports.ArrowRightFromLineIcon = ArrowRightFromLine;\nexports.ArrowRightIcon = ArrowRight;\nexports.ArrowRightLeft = ArrowRightLeft;\nexports.ArrowRightLeftIcon = ArrowRightLeft;\nexports.ArrowRightSquare = ArrowRightSquare;\nexports.ArrowRightSquareIcon = ArrowRightSquare;\nexports.ArrowRightToLine = ArrowRightToLine;\nexports.ArrowRightToLineIcon = ArrowRightToLine;\nexports.ArrowUp = ArrowUp;\nexports.ArrowUp01 = ArrowUp01;\nexports.ArrowUp01Icon = ArrowUp01;\nexports.ArrowUp10 = ArrowUp10;\nexports.ArrowUp10Icon = ArrowUp10;\nexports.ArrowUpAZ = ArrowUpAZ;\nexports.ArrowUpAZIcon = ArrowUpAZ;\nexports.ArrowUpAz = ArrowUpAZ;\nexports.ArrowUpAzIcon = ArrowUpAZ;\nexports.ArrowUpCircle = ArrowUpCircle;\nexports.ArrowUpCircleIcon = ArrowUpCircle;\nexports.ArrowUpDown = ArrowUpDown;\nexports.ArrowUpDownIcon = ArrowUpDown;\nexports.ArrowUpFromDot = ArrowUpFromDot;\nexports.ArrowUpFromDotIcon = ArrowUpFromDot;\nexports.ArrowUpFromLine = ArrowUpFromLine;\nexports.ArrowUpFromLineIcon = ArrowUpFromLine;\nexports.ArrowUpIcon = ArrowUp;\nexports.ArrowUpLeft = ArrowUpLeft;\nexports.ArrowUpLeftFromCircle = ArrowUpLeftFromCircle;\nexports.ArrowUpLeftFromCircleIcon = ArrowUpLeftFromCircle;\nexports.ArrowUpLeftIcon = ArrowUpLeft;\nexports.ArrowUpLeftSquare = ArrowUpLeftSquare;\nexports.ArrowUpLeftSquareIcon = ArrowUpLeftSquare;\nexports.ArrowUpNarrowWide = ArrowUpNarrowWide;\nexports.ArrowUpNarrowWideIcon = ArrowUpNarrowWide;\nexports.ArrowUpRight = ArrowUpRight;\nexports.ArrowUpRightFromCircle = ArrowUpRightFromCircle;\nexports.ArrowUpRightFromCircleIcon = ArrowUpRightFromCircle;\nexports.ArrowUpRightIcon = ArrowUpRight;\nexports.ArrowUpRightSquare = ArrowUpRightSquare;\nexports.ArrowUpRightSquareIcon = ArrowUpRightSquare;\nexports.ArrowUpSquare = ArrowUpSquare;\nexports.ArrowUpSquareIcon = ArrowUpSquare;\nexports.ArrowUpToLine = ArrowUpToLine;\nexports.ArrowUpToLineIcon = ArrowUpToLine;\nexports.ArrowUpWideNarrow = ArrowUpWideNarrow;\nexports.ArrowUpWideNarrowIcon = ArrowUpWideNarrow;\nexports.ArrowUpZA = ArrowUpZA;\nexports.ArrowUpZAIcon = ArrowUpZA;\nexports.ArrowUpZa = ArrowUpZA;\nexports.ArrowUpZaIcon = ArrowUpZA;\nexports.ArrowsUpFromLine = ArrowsUpFromLine;\nexports.ArrowsUpFromLineIcon = ArrowsUpFromLine;\nexports.Asterisk = Asterisk;\nexports.AsteriskIcon = Asterisk;\nexports.AtSign = AtSign;\nexports.AtSignIcon = AtSign;\nexports.Atom = Atom;\nexports.AtomIcon = Atom;\nexports.Award = Award;\nexports.AwardIcon = Award;\nexports.Axe = Axe;\nexports.AxeIcon = Axe;\nexports.Axis3D = Axis3d;\nexports.Axis3DIcon = Axis3d;\nexports.Axis3d = Axis3d;\nexports.Axis3dIcon = Axis3d;\nexports.Baby = Baby;\nexports.BabyIcon = Baby;\nexports.Backpack = Backpack;\nexports.BackpackIcon = Backpack;\nexports.Badge = Badge;\nexports.BadgeAlert = BadgeAlert;\nexports.BadgeAlertIcon = BadgeAlert;\nexports.BadgeCent = BadgeCent;\nexports.BadgeCentIcon = BadgeCent;\nexports.BadgeCheck = BadgeCheck;\nexports.BadgeCheckIcon = BadgeCheck;\nexports.BadgeDollarSign = BadgeDollarSign;\nexports.BadgeDollarSignIcon = BadgeDollarSign;\nexports.BadgeEuro = BadgeEuro;\nexports.BadgeEuroIcon = BadgeEuro;\nexports.BadgeHelp = BadgeHelp;\nexports.BadgeHelpIcon = BadgeHelp;\nexports.BadgeIcon = Badge;\nexports.BadgeIndianRupee = BadgeIndianRupee;\nexports.BadgeIndianRupeeIcon = BadgeIndianRupee;\nexports.BadgeInfo = BadgeInfo;\nexports.BadgeInfoIcon = BadgeInfo;\nexports.BadgeJapaneseYen = BadgeJapaneseYen;\nexports.BadgeJapaneseYenIcon = BadgeJapaneseYen;\nexports.BadgeMinus = BadgeMinus;\nexports.BadgeMinusIcon = BadgeMinus;\nexports.BadgePercent = BadgePercent;\nexports.BadgePercentIcon = BadgePercent;\nexports.BadgePlus = BadgePlus;\nexports.BadgePlusIcon = BadgePlus;\nexports.BadgePoundSterling = BadgePoundSterling;\nexports.BadgePoundSterlingIcon = BadgePoundSterling;\nexports.BadgeRussianRuble = BadgeRussianRuble;\nexports.BadgeRussianRubleIcon = BadgeRussianRuble;\nexports.BadgeSwissFranc = BadgeSwissFranc;\nexports.BadgeSwissFrancIcon = BadgeSwissFranc;\nexports.BadgeX = BadgeX;\nexports.BadgeXIcon = BadgeX;\nexports.BaggageClaim = BaggageClaim;\nexports.BaggageClaimIcon = BaggageClaim;\nexports.Ban = Ban;\nexports.BanIcon = Ban;\nexports.Banana = Banana;\nexports.BananaIcon = Banana;\nexports.Banknote = Banknote;\nexports.BanknoteIcon = Banknote;\nexports.BarChart = BarChart;\nexports.BarChart2 = BarChart2;\nexports.BarChart2Icon = BarChart2;\nexports.BarChart3 = BarChart3;\nexports.BarChart3Icon = BarChart3;\nexports.BarChart4 = BarChart4;\nexports.BarChart4Icon = BarChart4;\nexports.BarChartBig = BarChartBig;\nexports.BarChartBigIcon = BarChartBig;\nexports.BarChartHorizontal = BarChartHorizontal;\nexports.BarChartHorizontalBig = BarChartHorizontalBig;\nexports.BarChartHorizontalBigIcon = BarChartHorizontalBig;\nexports.BarChartHorizontalIcon = BarChartHorizontal;\nexports.BarChartIcon = BarChart;\nexports.Baseline = Baseline;\nexports.BaselineIcon = Baseline;\nexports.Bath = Bath;\nexports.BathIcon = Bath;\nexports.Battery = Battery;\nexports.BatteryCharging = BatteryCharging;\nexports.BatteryChargingIcon = BatteryCharging;\nexports.BatteryFull = BatteryFull;\nexports.BatteryFullIcon = BatteryFull;\nexports.BatteryIcon = Battery;\nexports.BatteryLow = BatteryLow;\nexports.BatteryLowIcon = BatteryLow;\nexports.BatteryMedium = BatteryMedium;\nexports.BatteryMediumIcon = BatteryMedium;\nexports.BatteryWarning = BatteryWarning;\nexports.BatteryWarningIcon = BatteryWarning;\nexports.Beaker = Beaker;\nexports.BeakerIcon = Beaker;\nexports.Bean = Bean;\nexports.BeanIcon = Bean;\nexports.BeanOff = BeanOff;\nexports.BeanOffIcon = BeanOff;\nexports.Bed = Bed;\nexports.BedDouble = BedDouble;\nexports.BedDoubleIcon = BedDouble;\nexports.BedIcon = Bed;\nexports.BedSingle = BedSingle;\nexports.BedSingleIcon = BedSingle;\nexports.Beef = Beef;\nexports.BeefIcon = Beef;\nexports.Beer = Beer;\nexports.BeerIcon = Beer;\nexports.Bell = Bell;\nexports.BellDot = BellDot;\nexports.BellDotIcon = BellDot;\nexports.BellIcon = Bell;\nexports.BellMinus = BellMinus;\nexports.BellMinusIcon = BellMinus;\nexports.BellOff = BellOff;\nexports.BellOffIcon = BellOff;\nexports.BellPlus = BellPlus;\nexports.BellPlusIcon = BellPlus;\nexports.BellRing = BellRing;\nexports.BellRingIcon = BellRing;\nexports.Bike = Bike;\nexports.BikeIcon = Bike;\nexports.Binary = Binary;\nexports.BinaryIcon = Binary;\nexports.Biohazard = Biohazard;\nexports.BiohazardIcon = Biohazard;\nexports.Bird = Bird;\nexports.BirdIcon = Bird;\nexports.Bitcoin = Bitcoin;\nexports.BitcoinIcon = Bitcoin;\nexports.Blinds = Blinds;\nexports.BlindsIcon = Blinds;\nexports.Blocks = Blocks;\nexports.BlocksIcon = Blocks;\nexports.Bluetooth = Bluetooth;\nexports.BluetoothConnected = BluetoothConnected;\nexports.BluetoothConnectedIcon = BluetoothConnected;\nexports.BluetoothIcon = Bluetooth;\nexports.BluetoothOff = BluetoothOff;\nexports.BluetoothOffIcon = BluetoothOff;\nexports.BluetoothSearching = BluetoothSearching;\nexports.BluetoothSearchingIcon = BluetoothSearching;\nexports.Bold = Bold;\nexports.BoldIcon = Bold;\nexports.Bomb = Bomb;\nexports.BombIcon = Bomb;\nexports.Bone = Bone;\nexports.BoneIcon = Bone;\nexports.Book = Book;\nexports.BookCopy = BookCopy;\nexports.BookCopyIcon = BookCopy;\nexports.BookDown = BookDown;\nexports.BookDownIcon = BookDown;\nexports.BookIcon = Book;\nexports.BookKey = BookKey;\nexports.BookKeyIcon = BookKey;\nexports.BookLock = BookLock;\nexports.BookLockIcon = BookLock;\nexports.BookMarked = BookMarked;\nexports.BookMarkedIcon = BookMarked;\nexports.BookMinus = BookMinus;\nexports.BookMinusIcon = BookMinus;\nexports.BookOpen = BookOpen;\nexports.BookOpenCheck = BookOpenCheck;\nexports.BookOpenCheckIcon = BookOpenCheck;\nexports.BookOpenIcon = BookOpen;\nexports.BookPlus = BookPlus;\nexports.BookPlusIcon = BookPlus;\nexports.BookTemplate = BookTemplate;\nexports.BookTemplateIcon = BookTemplate;\nexports.BookUp = BookUp;\nexports.BookUp2 = BookUp2;\nexports.BookUp2Icon = BookUp2;\nexports.BookUpIcon = BookUp;\nexports.BookX = BookX;\nexports.BookXIcon = BookX;\nexports.Bookmark = Bookmark;\nexports.BookmarkIcon = Bookmark;\nexports.BookmarkMinus = BookmarkMinus;\nexports.BookmarkMinusIcon = BookmarkMinus;\nexports.BookmarkPlus = BookmarkPlus;\nexports.BookmarkPlusIcon = BookmarkPlus;\nexports.BoomBox = BoomBox;\nexports.BoomBoxIcon = BoomBox;\nexports.Bot = Bot;\nexports.BotIcon = Bot;\nexports.Box = Box;\nexports.BoxIcon = Box;\nexports.BoxSelect = BoxSelect;\nexports.BoxSelectIcon = BoxSelect;\nexports.Boxes = Boxes;\nexports.BoxesIcon = Boxes;\nexports.Braces = Braces;\nexports.BracesIcon = Braces;\nexports.Brackets = Brackets;\nexports.BracketsIcon = Brackets;\nexports.Brain = Brain;\nexports.BrainCircuit = BrainCircuit;\nexports.BrainCircuitIcon = BrainCircuit;\nexports.BrainCog = BrainCog;\nexports.BrainCogIcon = BrainCog;\nexports.BrainIcon = Brain;\nexports.Briefcase = Briefcase;\nexports.BriefcaseIcon = Briefcase;\nexports.BringToFront = BringToFront;\nexports.BringToFrontIcon = BringToFront;\nexports.Brush = Brush;\nexports.BrushIcon = Brush;\nexports.Bug = Bug;\nexports.BugIcon = Bug;\nexports.BugOff = BugOff;\nexports.BugOffIcon = BugOff;\nexports.BugPlay = BugPlay;\nexports.BugPlayIcon = BugPlay;\nexports.Building = Building;\nexports.Building2 = Building2;\nexports.Building2Icon = Building2;\nexports.BuildingIcon = Building;\nexports.Bus = Bus;\nexports.BusFront = BusFront;\nexports.BusFrontIcon = BusFront;\nexports.BusIcon = Bus;\nexports.Cable = Cable;\nexports.CableCar = CableCar;\nexports.CableCarIcon = CableCar;\nexports.CableIcon = Cable;\nexports.Cake = Cake;\nexports.CakeIcon = Cake;\nexports.CakeSlice = CakeSlice;\nexports.CakeSliceIcon = CakeSlice;\nexports.Calculator = Calculator;\nexports.CalculatorIcon = Calculator;\nexports.Calendar = Calendar;\nexports.CalendarCheck = CalendarCheck;\nexports.CalendarCheck2 = CalendarCheck2;\nexports.CalendarCheck2Icon = CalendarCheck2;\nexports.CalendarCheckIcon = CalendarCheck;\nexports.CalendarClock = CalendarClock;\nexports.CalendarClockIcon = CalendarClock;\nexports.CalendarDays = CalendarDays;\nexports.CalendarDaysIcon = CalendarDays;\nexports.CalendarHeart = CalendarHeart;\nexports.CalendarHeartIcon = CalendarHeart;\nexports.CalendarIcon = Calendar;\nexports.CalendarMinus = CalendarMinus;\nexports.CalendarMinusIcon = CalendarMinus;\nexports.CalendarOff = CalendarOff;\nexports.CalendarOffIcon = CalendarOff;\nexports.CalendarPlus = CalendarPlus;\nexports.CalendarPlusIcon = CalendarPlus;\nexports.CalendarRange = CalendarRange;\nexports.CalendarRangeIcon = CalendarRange;\nexports.CalendarSearch = CalendarSearch;\nexports.CalendarSearchIcon = CalendarSearch;\nexports.CalendarX = CalendarX;\nexports.CalendarX2 = CalendarX2;\nexports.CalendarX2Icon = CalendarX2;\nexports.CalendarXIcon = CalendarX;\nexports.Camera = Camera;\nexports.CameraIcon = Camera;\nexports.CameraOff = CameraOff;\nexports.CameraOffIcon = CameraOff;\nexports.CandlestickChart = CandlestickChart;\nexports.CandlestickChartIcon = CandlestickChart;\nexports.Candy = Candy;\nexports.CandyCane = CandyCane;\nexports.CandyCaneIcon = CandyCane;\nexports.CandyIcon = Candy;\nexports.CandyOff = CandyOff;\nexports.CandyOffIcon = CandyOff;\nexports.Car = Car;\nexports.CarFront = CarFront;\nexports.CarFrontIcon = CarFront;\nexports.CarIcon = Car;\nexports.CarTaxiFront = CarTaxiFront;\nexports.CarTaxiFrontIcon = CarTaxiFront;\nexports.Carrot = Carrot;\nexports.CarrotIcon = Carrot;\nexports.CaseLower = CaseLower;\nexports.CaseLowerIcon = CaseLower;\nexports.CaseSensitive = CaseSensitive;\nexports.CaseSensitiveIcon = CaseSensitive;\nexports.CaseUpper = CaseUpper;\nexports.CaseUpperIcon = CaseUpper;\nexports.CassetteTape = CassetteTape;\nexports.CassetteTapeIcon = CassetteTape;\nexports.Cast = Cast;\nexports.CastIcon = Cast;\nexports.Castle = Castle;\nexports.CastleIcon = Castle;\nexports.Cat = Cat;\nexports.CatIcon = Cat;\nexports.Check = Check;\nexports.CheckCheck = CheckCheck;\nexports.CheckCheckIcon = CheckCheck;\nexports.CheckCircle = CheckCircle;\nexports.CheckCircle2 = CheckCircle2;\nexports.CheckCircle2Icon = CheckCircle2;\nexports.CheckCircleIcon = CheckCircle;\nexports.CheckIcon = Check;\nexports.CheckSquare = CheckSquare;\nexports.CheckSquareIcon = CheckSquare;\nexports.ChefHat = ChefHat;\nexports.ChefHatIcon = ChefHat;\nexports.Cherry = Cherry;\nexports.CherryIcon = Cherry;\nexports.ChevronDown = ChevronDown;\nexports.ChevronDownCircle = ChevronDownCircle;\nexports.ChevronDownCircleIcon = ChevronDownCircle;\nexports.ChevronDownIcon = ChevronDown;\nexports.ChevronDownSquare = ChevronDownSquare;\nexports.ChevronDownSquareIcon = ChevronDownSquare;\nexports.ChevronFirst = ChevronFirst;\nexports.ChevronFirstIcon = ChevronFirst;\nexports.ChevronLast = ChevronLast;\nexports.ChevronLastIcon = ChevronLast;\nexports.ChevronLeft = ChevronLeft;\nexports.ChevronLeftCircle = ChevronLeftCircle;\nexports.ChevronLeftCircleIcon = ChevronLeftCircle;\nexports.ChevronLeftIcon = ChevronLeft;\nexports.ChevronLeftSquare = ChevronLeftSquare;\nexports.ChevronLeftSquareIcon = ChevronLeftSquare;\nexports.ChevronRight = ChevronRight;\nexports.ChevronRightCircle = ChevronRightCircle;\nexports.ChevronRightCircleIcon = ChevronRightCircle;\nexports.ChevronRightIcon = ChevronRight;\nexports.ChevronRightSquare = ChevronRightSquare;\nexports.ChevronRightSquareIcon = ChevronRightSquare;\nexports.ChevronUp = ChevronUp;\nexports.ChevronUpCircle = ChevronUpCircle;\nexports.ChevronUpCircleIcon = ChevronUpCircle;\nexports.ChevronUpIcon = ChevronUp;\nexports.ChevronUpSquare = ChevronUpSquare;\nexports.ChevronUpSquareIcon = ChevronUpSquare;\nexports.ChevronsDown = ChevronsDown;\nexports.ChevronsDownIcon = ChevronsDown;\nexports.ChevronsDownUp = ChevronsDownUp;\nexports.ChevronsDownUpIcon = ChevronsDownUp;\nexports.ChevronsLeft = ChevronsLeft;\nexports.ChevronsLeftIcon = ChevronsLeft;\nexports.ChevronsLeftRight = ChevronsLeftRight;\nexports.ChevronsLeftRightIcon = ChevronsLeftRight;\nexports.ChevronsRight = ChevronsRight;\nexports.ChevronsRightIcon = ChevronsRight;\nexports.ChevronsRightLeft = ChevronsRightLeft;\nexports.ChevronsRightLeftIcon = ChevronsRightLeft;\nexports.ChevronsUp = ChevronsUp;\nexports.ChevronsUpDown = ChevronsUpDown;\nexports.ChevronsUpDownIcon = ChevronsUpDown;\nexports.ChevronsUpIcon = ChevronsUp;\nexports.Chrome = Chrome;\nexports.ChromeIcon = Chrome;\nexports.Church = Church;\nexports.ChurchIcon = Church;\nexports.Cigarette = Cigarette;\nexports.CigaretteIcon = Cigarette;\nexports.CigaretteOff = CigaretteOff;\nexports.CigaretteOffIcon = CigaretteOff;\nexports.Circle = Circle;\nexports.CircleDashed = CircleDashed;\nexports.CircleDashedIcon = CircleDashed;\nexports.CircleDollarSign = CircleDollarSign;\nexports.CircleDollarSignIcon = CircleDollarSign;\nexports.CircleDot = CircleDot;\nexports.CircleDotDashed = CircleDotDashed;\nexports.CircleDotDashedIcon = CircleDotDashed;\nexports.CircleDotIcon = CircleDot;\nexports.CircleEllipsis = CircleEllipsis;\nexports.CircleEllipsisIcon = CircleEllipsis;\nexports.CircleEqual = CircleEqual;\nexports.CircleEqualIcon = CircleEqual;\nexports.CircleIcon = Circle;\nexports.CircleOff = CircleOff;\nexports.CircleOffIcon = CircleOff;\nexports.CircleSlash = CircleSlash;\nexports.CircleSlash2 = CircleSlash2;\nexports.CircleSlash2Icon = CircleSlash2;\nexports.CircleSlashIcon = CircleSlash;\nexports.CircleSlashed = CircleSlash2;\nexports.CircleSlashedIcon = CircleSlash2;\nexports.CircuitBoard = CircuitBoard;\nexports.CircuitBoardIcon = CircuitBoard;\nexports.Citrus = Citrus;\nexports.CitrusIcon = Citrus;\nexports.Clapperboard = Clapperboard;\nexports.ClapperboardIcon = Clapperboard;\nexports.Clipboard = Clipboard;\nexports.ClipboardCheck = ClipboardCheck;\nexports.ClipboardCheckIcon = ClipboardCheck;\nexports.ClipboardCopy = ClipboardCopy;\nexports.ClipboardCopyIcon = ClipboardCopy;\nexports.ClipboardEdit = ClipboardEdit;\nexports.ClipboardEditIcon = ClipboardEdit;\nexports.ClipboardIcon = Clipboard;\nexports.ClipboardList = ClipboardList;\nexports.ClipboardListIcon = ClipboardList;\nexports.ClipboardPaste = ClipboardPaste;\nexports.ClipboardPasteIcon = ClipboardPaste;\nexports.ClipboardSignature = ClipboardSignature;\nexports.ClipboardSignatureIcon = ClipboardSignature;\nexports.ClipboardType = ClipboardType;\nexports.ClipboardTypeIcon = ClipboardType;\nexports.ClipboardX = ClipboardX;\nexports.ClipboardXIcon = ClipboardX;\nexports.Clock = Clock;\nexports.Clock1 = Clock1;\nexports.Clock10 = Clock10;\nexports.Clock10Icon = Clock10;\nexports.Clock11 = Clock11;\nexports.Clock11Icon = Clock11;\nexports.Clock12 = Clock12;\nexports.Clock12Icon = Clock12;\nexports.Clock1Icon = Clock1;\nexports.Clock2 = Clock2;\nexports.Clock2Icon = Clock2;\nexports.Clock3 = Clock3;\nexports.Clock3Icon = Clock3;\nexports.Clock4 = Clock4;\nexports.Clock4Icon = Clock4;\nexports.Clock5 = Clock5;\nexports.Clock5Icon = Clock5;\nexports.Clock6 = Clock6;\nexports.Clock6Icon = Clock6;\nexports.Clock7 = Clock7;\nexports.Clock7Icon = Clock7;\nexports.Clock8 = Clock8;\nexports.Clock8Icon = Clock8;\nexports.Clock9 = Clock9;\nexports.Clock9Icon = Clock9;\nexports.ClockIcon = Clock;\nexports.Cloud = Cloud;\nexports.CloudCog = CloudCog;\nexports.CloudCogIcon = CloudCog;\nexports.CloudDrizzle = CloudDrizzle;\nexports.CloudDrizzleIcon = CloudDrizzle;\nexports.CloudFog = CloudFog;\nexports.CloudFogIcon = CloudFog;\nexports.CloudHail = CloudHail;\nexports.CloudHailIcon = CloudHail;\nexports.CloudIcon = Cloud;\nexports.CloudLightning = CloudLightning;\nexports.CloudLightningIcon = CloudLightning;\nexports.CloudMoon = CloudMoon;\nexports.CloudMoonIcon = CloudMoon;\nexports.CloudMoonRain = CloudMoonRain;\nexports.CloudMoonRainIcon = CloudMoonRain;\nexports.CloudOff = CloudOff;\nexports.CloudOffIcon = CloudOff;\nexports.CloudRain = CloudRain;\nexports.CloudRainIcon = CloudRain;\nexports.CloudRainWind = CloudRainWind;\nexports.CloudRainWindIcon = CloudRainWind;\nexports.CloudSnow = CloudSnow;\nexports.CloudSnowIcon = CloudSnow;\nexports.CloudSun = CloudSun;\nexports.CloudSunIcon = CloudSun;\nexports.CloudSunRain = CloudSunRain;\nexports.CloudSunRainIcon = CloudSunRain;\nexports.Cloudy = Cloudy;\nexports.CloudyIcon = Cloudy;\nexports.Clover = Clover;\nexports.CloverIcon = Clover;\nexports.Club = Club;\nexports.ClubIcon = Club;\nexports.Code = Code;\nexports.Code2 = Code2;\nexports.Code2Icon = Code2;\nexports.CodeIcon = Code;\nexports.Codepen = Codepen;\nexports.CodepenIcon = Codepen;\nexports.Codesandbox = Codesandbox;\nexports.CodesandboxIcon = Codesandbox;\nexports.Coffee = Coffee;\nexports.CoffeeIcon = Coffee;\nexports.Cog = Cog;\nexports.CogIcon = Cog;\nexports.Coins = Coins;\nexports.CoinsIcon = Coins;\nexports.Columns = Columns;\nexports.ColumnsIcon = Columns;\nexports.Combine = Combine;\nexports.CombineIcon = Combine;\nexports.Command = Command;\nexports.CommandIcon = Command;\nexports.Compass = Compass;\nexports.CompassIcon = Compass;\nexports.Component = Component;\nexports.ComponentIcon = Component;\nexports.Computer = Computer;\nexports.ComputerIcon = Computer;\nexports.ConciergeBell = ConciergeBell;\nexports.ConciergeBellIcon = ConciergeBell;\nexports.Construction = Construction;\nexports.ConstructionIcon = Construction;\nexports.Contact = Contact;\nexports.Contact2 = Contact2;\nexports.Contact2Icon = Contact2;\nexports.ContactIcon = Contact;\nexports.Container = Container;\nexports.ContainerIcon = Container;\nexports.Contrast = Contrast;\nexports.ContrastIcon = Contrast;\nexports.Cookie = Cookie;\nexports.CookieIcon = Cookie;\nexports.Copy = Copy;\nexports.CopyCheck = CopyCheck;\nexports.CopyCheckIcon = CopyCheck;\nexports.CopyIcon = Copy;\nexports.CopyMinus = CopyMinus;\nexports.CopyMinusIcon = CopyMinus;\nexports.CopyPlus = CopyPlus;\nexports.CopyPlusIcon = CopyPlus;\nexports.CopySlash = CopySlash;\nexports.CopySlashIcon = CopySlash;\nexports.CopyX = CopyX;\nexports.CopyXIcon = CopyX;\nexports.Copyleft = Copyleft;\nexports.CopyleftIcon = Copyleft;\nexports.Copyright = Copyright;\nexports.CopyrightIcon = Copyright;\nexports.CornerDownLeft = CornerDownLeft;\nexports.CornerDownLeftIcon = CornerDownLeft;\nexports.CornerDownRight = CornerDownRight;\nexports.CornerDownRightIcon = CornerDownRight;\nexports.CornerLeftDown = CornerLeftDown;\nexports.CornerLeftDownIcon = CornerLeftDown;\nexports.CornerLeftUp = CornerLeftUp;\nexports.CornerLeftUpIcon = CornerLeftUp;\nexports.CornerRightDown = CornerRightDown;\nexports.CornerRightDownIcon = CornerRightDown;\nexports.CornerRightUp = CornerRightUp;\nexports.CornerRightUpIcon = CornerRightUp;\nexports.CornerUpLeft = CornerUpLeft;\nexports.CornerUpLeftIcon = CornerUpLeft;\nexports.CornerUpRight = CornerUpRight;\nexports.CornerUpRightIcon = CornerUpRight;\nexports.Cpu = Cpu;\nexports.CpuIcon = Cpu;\nexports.CreativeCommons = CreativeCommons;\nexports.CreativeCommonsIcon = CreativeCommons;\nexports.CreditCard = CreditCard;\nexports.CreditCardIcon = CreditCard;\nexports.Croissant = Croissant;\nexports.CroissantIcon = Croissant;\nexports.Crop = Crop;\nexports.CropIcon = Crop;\nexports.Cross = Cross;\nexports.CrossIcon = Cross;\nexports.Crosshair = Crosshair;\nexports.CrosshairIcon = Crosshair;\nexports.Crown = Crown;\nexports.CrownIcon = Crown;\nexports.CupSoda = CupSoda;\nexports.CupSodaIcon = CupSoda;\nexports.CurlyBraces = Braces;\nexports.CurlyBracesIcon = Braces;\nexports.Currency = Currency;\nexports.CurrencyIcon = Currency;\nexports.Database = Database;\nexports.DatabaseBackup = DatabaseBackup;\nexports.DatabaseBackupIcon = DatabaseBackup;\nexports.DatabaseIcon = Database;\nexports.DatabaseZap = DatabaseZap;\nexports.DatabaseZapIcon = DatabaseZap;\nexports.Delete = Delete;\nexports.DeleteIcon = Delete;\nexports.Dessert = Dessert;\nexports.DessertIcon = Dessert;\nexports.Diamond = Diamond;\nexports.DiamondIcon = Diamond;\nexports.Dice1 = Dice1;\nexports.Dice1Icon = Dice1;\nexports.Dice2 = Dice2;\nexports.Dice2Icon = Dice2;\nexports.Dice3 = Dice3;\nexports.Dice3Icon = Dice3;\nexports.Dice4 = Dice4;\nexports.Dice4Icon = Dice4;\nexports.Dice5 = Dice5;\nexports.Dice5Icon = Dice5;\nexports.Dice6 = Dice6;\nexports.Dice6Icon = Dice6;\nexports.Dices = Dices;\nexports.DicesIcon = Dices;\nexports.Diff = Diff;\nexports.DiffIcon = Diff;\nexports.Disc = Disc;\nexports.Disc2 = Disc2;\nexports.Disc2Icon = Disc2;\nexports.Disc3 = Disc3;\nexports.Disc3Icon = Disc3;\nexports.DiscIcon = Disc;\nexports.Divide = Divide;\nexports.DivideCircle = DivideCircle;\nexports.DivideCircleIcon = DivideCircle;\nexports.DivideIcon = Divide;\nexports.DivideSquare = DivideSquare;\nexports.DivideSquareIcon = DivideSquare;\nexports.Dna = Dna;\nexports.DnaIcon = Dna;\nexports.DnaOff = DnaOff;\nexports.DnaOffIcon = DnaOff;\nexports.Dog = Dog;\nexports.DogIcon = Dog;\nexports.DollarSign = DollarSign;\nexports.DollarSignIcon = DollarSign;\nexports.Donut = Donut;\nexports.DonutIcon = Donut;\nexports.DoorClosed = DoorClosed;\nexports.DoorClosedIcon = DoorClosed;\nexports.DoorOpen = DoorOpen;\nexports.DoorOpenIcon = DoorOpen;\nexports.Dot = Dot;\nexports.DotIcon = Dot;\nexports.Download = Download;\nexports.DownloadCloud = DownloadCloud;\nexports.DownloadCloudIcon = DownloadCloud;\nexports.DownloadIcon = Download;\nexports.Dribbble = Dribbble;\nexports.DribbbleIcon = Dribbble;\nexports.Droplet = Droplet;\nexports.DropletIcon = Droplet;\nexports.Droplets = Droplets;\nexports.DropletsIcon = Droplets;\nexports.Drumstick = Drumstick;\nexports.DrumstickIcon = Drumstick;\nexports.Dumbbell = Dumbbell;\nexports.DumbbellIcon = Dumbbell;\nexports.Ear = Ear;\nexports.EarIcon = Ear;\nexports.EarOff = EarOff;\nexports.EarOffIcon = EarOff;\nexports.Edit = PenSquare;\nexports.Edit2 = Pen;\nexports.Edit2Icon = Pen;\nexports.Edit3 = PenLine;\nexports.Edit3Icon = PenLine;\nexports.EditIcon = PenSquare;\nexports.Egg = Egg;\nexports.EggFried = EggFried;\nexports.EggFriedIcon = EggFried;\nexports.EggIcon = Egg;\nexports.EggOff = EggOff;\nexports.EggOffIcon = EggOff;\nexports.Equal = Equal;\nexports.EqualIcon = Equal;\nexports.EqualNot = EqualNot;\nexports.EqualNotIcon = EqualNot;\nexports.Eraser = Eraser;\nexports.EraserIcon = Eraser;\nexports.Euro = Euro;\nexports.EuroIcon = Euro;\nexports.Expand = Expand;\nexports.ExpandIcon = Expand;\nexports.ExternalLink = ExternalLink;\nexports.ExternalLinkIcon = ExternalLink;\nexports.Eye = Eye;\nexports.EyeIcon = Eye;\nexports.EyeOff = EyeOff;\nexports.EyeOffIcon = EyeOff;\nexports.Facebook = Facebook;\nexports.FacebookIcon = Facebook;\nexports.Factory = Factory;\nexports.FactoryIcon = Factory;\nexports.Fan = Fan;\nexports.FanIcon = Fan;\nexports.FastForward = FastForward;\nexports.FastForwardIcon = FastForward;\nexports.Feather = Feather;\nexports.FeatherIcon = Feather;\nexports.FerrisWheel = FerrisWheel;\nexports.FerrisWheelIcon = FerrisWheel;\nexports.Figma = Figma;\nexports.FigmaIcon = Figma;\nexports.File = File;\nexports.FileArchive = FileArchive;\nexports.FileArchiveIcon = FileArchive;\nexports.FileAudio = FileAudio;\nexports.FileAudio2 = FileAudio2;\nexports.FileAudio2Icon = FileAudio2;\nexports.FileAudioIcon = FileAudio;\nexports.FileAxis3D = FileAxis3d;\nexports.FileAxis3DIcon = FileAxis3d;\nexports.FileAxis3d = FileAxis3d;\nexports.FileAxis3dIcon = FileAxis3d;\nexports.FileBadge = FileBadge;\nexports.FileBadge2 = FileBadge2;\nexports.FileBadge2Icon = FileBadge2;\nexports.FileBadgeIcon = FileBadge;\nexports.FileBarChart = FileBarChart;\nexports.FileBarChart2 = FileBarChart2;\nexports.FileBarChart2Icon = FileBarChart2;\nexports.FileBarChartIcon = FileBarChart;\nexports.FileBox = FileBox;\nexports.FileBoxIcon = FileBox;\nexports.FileCheck = FileCheck;\nexports.FileCheck2 = FileCheck2;\nexports.FileCheck2Icon = FileCheck2;\nexports.FileCheckIcon = FileCheck;\nexports.FileClock = FileClock;\nexports.FileClockIcon = FileClock;\nexports.FileCode = FileCode;\nexports.FileCode2 = FileCode2;\nexports.FileCode2Icon = FileCode2;\nexports.FileCodeIcon = FileCode;\nexports.FileCog = FileCog;\nexports.FileCog2 = FileCog;\nexports.FileCog2Icon = FileCog;\nexports.FileCogIcon = FileCog;\nexports.FileDiff = FileDiff;\nexports.FileDiffIcon = FileDiff;\nexports.FileDigit = FileDigit;\nexports.FileDigitIcon = FileDigit;\nexports.FileDown = FileDown;\nexports.FileDownIcon = FileDown;\nexports.FileEdit = FileEdit;\nexports.FileEditIcon = FileEdit;\nexports.FileHeart = FileHeart;\nexports.FileHeartIcon = FileHeart;\nexports.FileIcon = File;\nexports.FileImage = FileImage;\nexports.FileImageIcon = FileImage;\nexports.FileInput = FileInput;\nexports.FileInputIcon = FileInput;\nexports.FileJson = FileJson;\nexports.FileJson2 = FileJson2;\nexports.FileJson2Icon = FileJson2;\nexports.FileJsonIcon = FileJson;\nexports.FileKey = FileKey;\nexports.FileKey2 = FileKey2;\nexports.FileKey2Icon = FileKey2;\nexports.FileKeyIcon = FileKey;\nexports.FileLineChart = FileLineChart;\nexports.FileLineChartIcon = FileLineChart;\nexports.FileLock = FileLock;\nexports.FileLock2 = FileLock2;\nexports.FileLock2Icon = FileLock2;\nexports.FileLockIcon = FileLock;\nexports.FileMinus = FileMinus;\nexports.FileMinus2 = FileMinus2;\nexports.FileMinus2Icon = FileMinus2;\nexports.FileMinusIcon = FileMinus;\nexports.FileOutput = FileOutput;\nexports.FileOutputIcon = FileOutput;\nexports.FilePieChart = FilePieChart;\nexports.FilePieChartIcon = FilePieChart;\nexports.FilePlus = FilePlus;\nexports.FilePlus2 = FilePlus2;\nexports.FilePlus2Icon = FilePlus2;\nexports.FilePlusIcon = FilePlus;\nexports.FileQuestion = FileQuestion;\nexports.FileQuestionIcon = FileQuestion;\nexports.FileScan = FileScan;\nexports.FileScanIcon = FileScan;\nexports.FileSearch = FileSearch;\nexports.FileSearch2 = FileSearch2;\nexports.FileSearch2Icon = FileSearch2;\nexports.FileSearchIcon = FileSearch;\nexports.FileSignature = FileSignature;\nexports.FileSignatureIcon = FileSignature;\nexports.FileSpreadsheet = FileSpreadsheet;\nexports.FileSpreadsheetIcon = FileSpreadsheet;\nexports.FileStack = FileStack;\nexports.FileStackIcon = FileStack;\nexports.FileSymlink = FileSymlink;\nexports.FileSymlinkIcon = FileSymlink;\nexports.FileTerminal = FileTerminal;\nexports.FileTerminalIcon = FileTerminal;\nexports.FileText = FileText;\nexports.FileTextIcon = FileText;\nexports.FileType = FileType;\nexports.FileType2 = FileType2;\nexports.FileType2Icon = FileType2;\nexports.FileTypeIcon = FileType;\nexports.FileUp = FileUp;\nexports.FileUpIcon = FileUp;\nexports.FileVideo = FileVideo;\nexports.FileVideo2 = FileVideo2;\nexports.FileVideo2Icon = FileVideo2;\nexports.FileVideoIcon = FileVideo;\nexports.FileVolume = FileVolume;\nexports.FileVolume2 = FileVolume2;\nexports.FileVolume2Icon = FileVolume2;\nexports.FileVolumeIcon = FileVolume;\nexports.FileWarning = FileWarning;\nexports.FileWarningIcon = FileWarning;\nexports.FileX = FileX;\nexports.FileX2 = FileX2;\nexports.FileX2Icon = FileX2;\nexports.FileXIcon = FileX;\nexports.Files = Files;\nexports.FilesIcon = Files;\nexports.Film = Film;\nexports.FilmIcon = Film;\nexports.Filter = Filter;\nexports.FilterIcon = Filter;\nexports.FilterX = FilterX;\nexports.FilterXIcon = FilterX;\nexports.Fingerprint = Fingerprint;\nexports.FingerprintIcon = Fingerprint;\nexports.Fish = Fish;\nexports.FishIcon = Fish;\nexports.FishOff = FishOff;\nexports.FishOffIcon = FishOff;\nexports.FishSymbol = FishSymbol;\nexports.FishSymbolIcon = FishSymbol;\nexports.Flag = Flag;\nexports.FlagIcon = Flag;\nexports.FlagOff = FlagOff;\nexports.FlagOffIcon = FlagOff;\nexports.FlagTriangleLeft = FlagTriangleLeft;\nexports.FlagTriangleLeftIcon = FlagTriangleLeft;\nexports.FlagTriangleRight = FlagTriangleRight;\nexports.FlagTriangleRightIcon = FlagTriangleRight;\nexports.Flame = Flame;\nexports.FlameIcon = Flame;\nexports.Flashlight = Flashlight;\nexports.FlashlightIcon = Flashlight;\nexports.FlashlightOff = FlashlightOff;\nexports.FlashlightOffIcon = FlashlightOff;\nexports.FlaskConical = FlaskConical;\nexports.FlaskConicalIcon = FlaskConical;\nexports.FlaskConicalOff = FlaskConicalOff;\nexports.FlaskConicalOffIcon = FlaskConicalOff;\nexports.FlaskRound = FlaskRound;\nexports.FlaskRoundIcon = FlaskRound;\nexports.FlipHorizontal = FlipHorizontal;\nexports.FlipHorizontal2 = FlipHorizontal2;\nexports.FlipHorizontal2Icon = FlipHorizontal2;\nexports.FlipHorizontalIcon = FlipHorizontal;\nexports.FlipVertical = FlipVertical;\nexports.FlipVertical2 = FlipVertical2;\nexports.FlipVertical2Icon = FlipVertical2;\nexports.FlipVerticalIcon = FlipVertical;\nexports.Flower = Flower;\nexports.Flower2 = Flower2;\nexports.Flower2Icon = Flower2;\nexports.FlowerIcon = Flower;\nexports.Focus = Focus;\nexports.FocusIcon = Focus;\nexports.FoldHorizontal = FoldHorizontal;\nexports.FoldHorizontalIcon = FoldHorizontal;\nexports.FoldVertical = FoldVertical;\nexports.FoldVerticalIcon = FoldVertical;\nexports.Folder = Folder;\nexports.FolderArchive = FolderArchive;\nexports.FolderArchiveIcon = FolderArchive;\nexports.FolderCheck = FolderCheck;\nexports.FolderCheckIcon = FolderCheck;\nexports.FolderClock = FolderClock;\nexports.FolderClockIcon = FolderClock;\nexports.FolderClosed = FolderClosed;\nexports.FolderClosedIcon = FolderClosed;\nexports.FolderCog = FolderCog;\nexports.FolderCog2 = FolderCog;\nexports.FolderCog2Icon = FolderCog;\nexports.FolderCogIcon = FolderCog;\nexports.FolderDot = FolderDot;\nexports.FolderDotIcon = FolderDot;\nexports.FolderDown = FolderDown;\nexports.FolderDownIcon = FolderDown;\nexports.FolderEdit = FolderEdit;\nexports.FolderEditIcon = FolderEdit;\nexports.FolderGit = FolderGit;\nexports.FolderGit2 = FolderGit2;\nexports.FolderGit2Icon = FolderGit2;\nexports.FolderGitIcon = FolderGit;\nexports.FolderHeart = FolderHeart;\nexports.FolderHeartIcon = FolderHeart;\nexports.FolderIcon = Folder;\nexports.FolderInput = FolderInput;\nexports.FolderInputIcon = FolderInput;\nexports.FolderKanban = FolderKanban;\nexports.FolderKanbanIcon = FolderKanban;\nexports.FolderKey = FolderKey;\nexports.FolderKeyIcon = FolderKey;\nexports.FolderLock = FolderLock;\nexports.FolderLockIcon = FolderLock;\nexports.FolderMinus = FolderMinus;\nexports.FolderMinusIcon = FolderMinus;\nexports.FolderOpen = FolderOpen;\nexports.FolderOpenDot = FolderOpenDot;\nexports.FolderOpenDotIcon = FolderOpenDot;\nexports.FolderOpenIcon = FolderOpen;\nexports.FolderOutput = FolderOutput;\nexports.FolderOutputIcon = FolderOutput;\nexports.FolderPlus = FolderPlus;\nexports.FolderPlusIcon = FolderPlus;\nexports.FolderRoot = FolderRoot;\nexports.FolderRootIcon = FolderRoot;\nexports.FolderSearch = FolderSearch;\nexports.FolderSearch2 = FolderSearch2;\nexports.FolderSearch2Icon = FolderSearch2;\nexports.FolderSearchIcon = FolderSearch;\nexports.FolderSymlink = FolderSymlink;\nexports.FolderSymlinkIcon = FolderSymlink;\nexports.FolderSync = FolderSync;\nexports.FolderSyncIcon = FolderSync;\nexports.FolderTree = FolderTree;\nexports.FolderTreeIcon = FolderTree;\nexports.FolderUp = FolderUp;\nexports.FolderUpIcon = FolderUp;\nexports.FolderX = FolderX;\nexports.FolderXIcon = FolderX;\nexports.Folders = Folders;\nexports.FoldersIcon = Folders;\nexports.Footprints = Footprints;\nexports.FootprintsIcon = Footprints;\nexports.Forklift = Forklift;\nexports.ForkliftIcon = Forklift;\nexports.FormInput = FormInput;\nexports.FormInputIcon = FormInput;\nexports.Forward = Forward;\nexports.ForwardIcon = Forward;\nexports.Frame = Frame;\nexports.FrameIcon = Frame;\nexports.Framer = Framer;\nexports.FramerIcon = Framer;\nexports.Frown = Frown;\nexports.FrownIcon = Frown;\nexports.Fuel = Fuel;\nexports.FuelIcon = Fuel;\nexports.FunctionSquare = FunctionSquare;\nexports.FunctionSquareIcon = FunctionSquare;\nexports.GalleryHorizontal = GalleryHorizontal;\nexports.GalleryHorizontalEnd = GalleryHorizontalEnd;\nexports.GalleryHorizontalEndIcon = GalleryHorizontalEnd;\nexports.GalleryHorizontalIcon = GalleryHorizontal;\nexports.GalleryThumbnails = GalleryThumbnails;\nexports.GalleryThumbnailsIcon = GalleryThumbnails;\nexports.GalleryVertical = GalleryVertical;\nexports.GalleryVerticalEnd = GalleryVerticalEnd;\nexports.GalleryVerticalEndIcon = GalleryVerticalEnd;\nexports.GalleryVerticalIcon = GalleryVertical;\nexports.Gamepad = Gamepad;\nexports.Gamepad2 = Gamepad2;\nexports.Gamepad2Icon = Gamepad2;\nexports.GamepadIcon = Gamepad;\nexports.GanttChart = GanttChart;\nexports.GanttChartIcon = GanttChart;\nexports.GanttChartSquare = GanttChartSquare;\nexports.GanttChartSquareIcon = GanttChartSquare;\nexports.Gauge = Gauge;\nexports.GaugeCircle = GaugeCircle;\nexports.GaugeCircleIcon = GaugeCircle;\nexports.GaugeIcon = Gauge;\nexports.Gavel = Gavel;\nexports.GavelIcon = Gavel;\nexports.Gem = Gem;\nexports.GemIcon = Gem;\nexports.Ghost = Ghost;\nexports.GhostIcon = Ghost;\nexports.Gift = Gift;\nexports.GiftIcon = Gift;\nexports.GitBranch = GitBranch;\nexports.GitBranchIcon = GitBranch;\nexports.GitBranchPlus = GitBranchPlus;\nexports.GitBranchPlusIcon = GitBranchPlus;\nexports.GitCommit = GitCommit;\nexports.GitCommitIcon = GitCommit;\nexports.GitCompare = GitCompare;\nexports.GitCompareIcon = GitCompare;\nexports.GitFork = GitFork;\nexports.GitForkIcon = GitFork;\nexports.GitMerge = GitMerge;\nexports.GitMergeIcon = GitMerge;\nexports.GitPullRequest = GitPullRequest;\nexports.GitPullRequestClosed = GitPullRequestClosed;\nexports.GitPullRequestClosedIcon = GitPullRequestClosed;\nexports.GitPullRequestDraft = GitPullRequestDraft;\nexports.GitPullRequestDraftIcon = GitPullRequestDraft;\nexports.GitPullRequestIcon = GitPullRequest;\nexports.Github = Github;\nexports.GithubIcon = Github;\nexports.Gitlab = Gitlab;\nexports.GitlabIcon = Gitlab;\nexports.GlassWater = GlassWater;\nexports.GlassWaterIcon = GlassWater;\nexports.Glasses = Glasses;\nexports.GlassesIcon = Glasses;\nexports.Globe = Globe;\nexports.Globe2 = Globe2;\nexports.Globe2Icon = Globe2;\nexports.GlobeIcon = Globe;\nexports.Goal = Goal;\nexports.GoalIcon = Goal;\nexports.Grab = Grab;\nexports.GrabIcon = Grab;\nexports.GraduationCap = GraduationCap;\nexports.GraduationCapIcon = GraduationCap;\nexports.Grape = Grape;\nexports.GrapeIcon = Grape;\nexports.Grid = Grid3x3;\nexports.Grid2X2 = Grid2x2;\nexports.Grid2X2Icon = Grid2x2;\nexports.Grid2x2 = Grid2x2;\nexports.Grid2x2Icon = Grid2x2;\nexports.Grid3X3 = Grid3x3;\nexports.Grid3X3Icon = Grid3x3;\nexports.Grid3x3 = Grid3x3;\nexports.Grid3x3Icon = Grid3x3;\nexports.GridIcon = Grid3x3;\nexports.Grip = Grip;\nexports.GripHorizontal = GripHorizontal;\nexports.GripHorizontalIcon = GripHorizontal;\nexports.GripIcon = Grip;\nexports.GripVertical = GripVertical;\nexports.GripVerticalIcon = GripVertical;\nexports.Group = Group;\nexports.GroupIcon = Group;\nexports.Hammer = Hammer;\nexports.HammerIcon = Hammer;\nexports.Hand = Hand;\nexports.HandIcon = Hand;\nexports.HandMetal = HandMetal;\nexports.HandMetalIcon = HandMetal;\nexports.HardDrive = HardDrive;\nexports.HardDriveDownload = HardDriveDownload;\nexports.HardDriveDownloadIcon = HardDriveDownload;\nexports.HardDriveIcon = HardDrive;\nexports.HardDriveUpload = HardDriveUpload;\nexports.HardDriveUploadIcon = HardDriveUpload;\nexports.HardHat = HardHat;\nexports.HardHatIcon = HardHat;\nexports.Hash = Hash;\nexports.HashIcon = Hash;\nexports.Haze = Haze;\nexports.HazeIcon = Haze;\nexports.HdmiPort = HdmiPort;\nexports.HdmiPortIcon = HdmiPort;\nexports.Heading = Heading;\nexports.Heading1 = Heading1;\nexports.Heading1Icon = Heading1;\nexports.Heading2 = Heading2;\nexports.Heading2Icon = Heading2;\nexports.Heading3 = Heading3;\nexports.Heading3Icon = Heading3;\nexports.Heading4 = Heading4;\nexports.Heading4Icon = Heading4;\nexports.Heading5 = Heading5;\nexports.Heading5Icon = Heading5;\nexports.Heading6 = Heading6;\nexports.Heading6Icon = Heading6;\nexports.HeadingIcon = Heading;\nexports.Headphones = Headphones;\nexports.HeadphonesIcon = Headphones;\nexports.Heart = Heart;\nexports.HeartCrack = HeartCrack;\nexports.HeartCrackIcon = HeartCrack;\nexports.HeartHandshake = HeartHandshake;\nexports.HeartHandshakeIcon = HeartHandshake;\nexports.HeartIcon = Heart;\nexports.HeartOff = HeartOff;\nexports.HeartOffIcon = HeartOff;\nexports.HeartPulse = HeartPulse;\nexports.HeartPulseIcon = HeartPulse;\nexports.HelpCircle = HelpCircle;\nexports.HelpCircleIcon = HelpCircle;\nexports.HelpingHand = HelpingHand;\nexports.HelpingHandIcon = HelpingHand;\nexports.Hexagon = Hexagon;\nexports.HexagonIcon = Hexagon;\nexports.Highlighter = Highlighter;\nexports.HighlighterIcon = Highlighter;\nexports.History = History;\nexports.HistoryIcon = History;\nexports.Home = Home;\nexports.HomeIcon = Home;\nexports.Hop = Hop;\nexports.HopIcon = Hop;\nexports.HopOff = HopOff;\nexports.HopOffIcon = HopOff;\nexports.Hotel = Hotel;\nexports.HotelIcon = Hotel;\nexports.Hourglass = Hourglass;\nexports.HourglassIcon = Hourglass;\nexports.IceCream = IceCream;\nexports.IceCream2 = IceCream2;\nexports.IceCream2Icon = IceCream2;\nexports.IceCreamIcon = IceCream;\nexports.Image = Image;\nexports.ImageIcon = Image;\nexports.ImageMinus = ImageMinus;\nexports.ImageMinusIcon = ImageMinus;\nexports.ImageOff = ImageOff;\nexports.ImageOffIcon = ImageOff;\nexports.ImagePlus = ImagePlus;\nexports.ImagePlusIcon = ImagePlus;\nexports.Import = Import;\nexports.ImportIcon = Import;\nexports.Inbox = Inbox;\nexports.InboxIcon = Inbox;\nexports.Indent = Indent;\nexports.IndentIcon = Indent;\nexports.IndianRupee = IndianRupee;\nexports.IndianRupeeIcon = IndianRupee;\nexports[Infinity] = Infinity;\nexports.InfinityIcon = Infinity;\nexports.Info = Info;\nexports.InfoIcon = Info;\nexports.Inspect = MousePointerSquare;\nexports.InspectIcon = MousePointerSquare;\nexports.Instagram = Instagram;\nexports.InstagramIcon = Instagram;\nexports.Italic = Italic;\nexports.ItalicIcon = Italic;\nexports.IterationCcw = IterationCcw;\nexports.IterationCcwIcon = IterationCcw;\nexports.IterationCw = IterationCw;\nexports.IterationCwIcon = IterationCw;\nexports.JapaneseYen = JapaneseYen;\nexports.JapaneseYenIcon = JapaneseYen;\nexports.Joystick = Joystick;\nexports.JoystickIcon = Joystick;\nexports.Kanban = Kanban;\nexports.KanbanIcon = Kanban;\nexports.KanbanSquare = KanbanSquare;\nexports.KanbanSquareDashed = KanbanSquareDashed;\nexports.KanbanSquareDashedIcon = KanbanSquareDashed;\nexports.KanbanSquareIcon = KanbanSquare;\nexports.Key = Key;\nexports.KeyIcon = Key;\nexports.KeyRound = KeyRound;\nexports.KeyRoundIcon = KeyRound;\nexports.KeySquare = KeySquare;\nexports.KeySquareIcon = KeySquare;\nexports.Keyboard = Keyboard;\nexports.KeyboardIcon = Keyboard;\nexports.Lamp = Lamp;\nexports.LampCeiling = LampCeiling;\nexports.LampCeilingIcon = LampCeiling;\nexports.LampDesk = LampDesk;\nexports.LampDeskIcon = LampDesk;\nexports.LampFloor = LampFloor;\nexports.LampFloorIcon = LampFloor;\nexports.LampIcon = Lamp;\nexports.LampWallDown = LampWallDown;\nexports.LampWallDownIcon = LampWallDown;\nexports.LampWallUp = LampWallUp;\nexports.LampWallUpIcon = LampWallUp;\nexports.Landmark = Landmark;\nexports.LandmarkIcon = Landmark;\nexports.Languages = Languages;\nexports.LanguagesIcon = Languages;\nexports.Laptop = Laptop;\nexports.Laptop2 = Laptop2;\nexports.Laptop2Icon = Laptop2;\nexports.LaptopIcon = Laptop;\nexports.Lasso = Lasso;\nexports.LassoIcon = Lasso;\nexports.LassoSelect = LassoSelect;\nexports.LassoSelectIcon = LassoSelect;\nexports.Laugh = Laugh;\nexports.LaughIcon = Laugh;\nexports.Layers = Layers;\nexports.LayersIcon = Layers;\nexports.Layout = Layout;\nexports.LayoutDashboard = LayoutDashboard;\nexports.LayoutDashboardIcon = LayoutDashboard;\nexports.LayoutGrid = LayoutGrid;\nexports.LayoutGridIcon = LayoutGrid;\nexports.LayoutIcon = Layout;\nexports.LayoutList = LayoutList;\nexports.LayoutListIcon = LayoutList;\nexports.LayoutPanelLeft = LayoutPanelLeft;\nexports.LayoutPanelLeftIcon = LayoutPanelLeft;\nexports.LayoutPanelTop = LayoutPanelTop;\nexports.LayoutPanelTopIcon = LayoutPanelTop;\nexports.LayoutTemplate = LayoutTemplate;\nexports.LayoutTemplateIcon = LayoutTemplate;\nexports.Leaf = Leaf;\nexports.LeafIcon = Leaf;\nexports.LeafyGreen = LeafyGreen;\nexports.LeafyGreenIcon = LeafyGreen;\nexports.Library = Library;\nexports.LibraryIcon = Library;\nexports.LifeBuoy = LifeBuoy;\nexports.LifeBuoyIcon = LifeBuoy;\nexports.Ligature = Ligature;\nexports.LigatureIcon = Ligature;\nexports.Lightbulb = Lightbulb;\nexports.LightbulbIcon = Lightbulb;\nexports.LightbulbOff = LightbulbOff;\nexports.LightbulbOffIcon = LightbulbOff;\nexports.LineChart = LineChart;\nexports.LineChartIcon = LineChart;\nexports.Link = Link;\nexports.Link2 = Link2;\nexports.Link2Icon = Link2;\nexports.Link2Off = Link2Off;\nexports.Link2OffIcon = Link2Off;\nexports.LinkIcon = Link;\nexports.Linkedin = Linkedin;\nexports.LinkedinIcon = Linkedin;\nexports.List = List;\nexports.ListChecks = ListChecks;\nexports.ListChecksIcon = ListChecks;\nexports.ListEnd = ListEnd;\nexports.ListEndIcon = ListEnd;\nexports.ListFilter = ListFilter;\nexports.ListFilterIcon = ListFilter;\nexports.ListIcon = List;\nexports.ListMinus = ListMinus;\nexports.ListMinusIcon = ListMinus;\nexports.ListMusic = ListMusic;\nexports.ListMusicIcon = ListMusic;\nexports.ListOrdered = ListOrdered;\nexports.ListOrderedIcon = ListOrdered;\nexports.ListPlus = ListPlus;\nexports.ListPlusIcon = ListPlus;\nexports.ListRestart = ListRestart;\nexports.ListRestartIcon = ListRestart;\nexports.ListStart = ListStart;\nexports.ListStartIcon = ListStart;\nexports.ListTodo = ListTodo;\nexports.ListTodoIcon = ListTodo;\nexports.ListTree = ListTree;\nexports.ListTreeIcon = ListTree;\nexports.ListVideo = ListVideo;\nexports.ListVideoIcon = ListVideo;\nexports.ListX = ListX;\nexports.ListXIcon = ListX;\nexports.Loader = Loader;\nexports.Loader2 = Loader2;\nexports.Loader2Icon = Loader2;\nexports.LoaderIcon = Loader;\nexports.Locate = Locate;\nexports.LocateFixed = LocateFixed;\nexports.LocateFixedIcon = LocateFixed;\nexports.LocateIcon = Locate;\nexports.LocateOff = LocateOff;\nexports.LocateOffIcon = LocateOff;\nexports.Lock = Lock;\nexports.LockIcon = Lock;\nexports.LogIn = LogIn;\nexports.LogInIcon = LogIn;\nexports.LogOut = LogOut;\nexports.LogOutIcon = LogOut;\nexports.Lollipop = Lollipop;\nexports.LollipopIcon = Lollipop;\nexports.LucideAccessibility = Accessibility;\nexports.LucideActivity = Activity;\nexports.LucideActivitySquare = ActivitySquare;\nexports.LucideAirVent = AirVent;\nexports.LucideAirplay = Airplay;\nexports.LucideAlarmCheck = AlarmCheck;\nexports.LucideAlarmClock = AlarmClock;\nexports.LucideAlarmClockOff = AlarmClockOff;\nexports.LucideAlarmMinus = AlarmMinus;\nexports.LucideAlarmPlus = AlarmPlus;\nexports.LucideAlbum = Album;\nexports.LucideAlertCircle = AlertCircle;\nexports.LucideAlertOctagon = AlertOctagon;\nexports.LucideAlertTriangle = AlertTriangle;\nexports.LucideAlignCenter = AlignCenter;\nexports.LucideAlignCenterHorizontal = AlignCenterHorizontal;\nexports.LucideAlignCenterVertical = AlignCenterVertical;\nexports.LucideAlignEndHorizontal = AlignEndHorizontal;\nexports.LucideAlignEndVertical = AlignEndVertical;\nexports.LucideAlignHorizontalDistributeCenter = AlignHorizontalDistributeCenter;\nexports.LucideAlignHorizontalDistributeEnd = AlignHorizontalDistributeEnd;\nexports.LucideAlignHorizontalDistributeStart = AlignHorizontalDistributeStart;\nexports.LucideAlignHorizontalJustifyCenter = AlignHorizontalJustifyCenter;\nexports.LucideAlignHorizontalJustifyEnd = AlignHorizontalJustifyEnd;\nexports.LucideAlignHorizontalJustifyStart = AlignHorizontalJustifyStart;\nexports.LucideAlignHorizontalSpaceAround = AlignHorizontalSpaceAround;\nexports.LucideAlignHorizontalSpaceBetween = AlignHorizontalSpaceBetween;\nexports.LucideAlignJustify = AlignJustify;\nexports.LucideAlignLeft = AlignLeft;\nexports.LucideAlignRight = AlignRight;\nexports.LucideAlignStartHorizontal = AlignStartHorizontal;\nexports.LucideAlignStartVertical = AlignStartVertical;\nexports.LucideAlignVerticalDistributeCenter = AlignVerticalDistributeCenter;\nexports.LucideAlignVerticalDistributeEnd = AlignVerticalDistributeEnd;\nexports.LucideAlignVerticalDistributeStart = AlignVerticalDistributeStart;\nexports.LucideAlignVerticalJustifyCenter = AlignVerticalJustifyCenter;\nexports.LucideAlignVerticalJustifyEnd = AlignVerticalJustifyEnd;\nexports.LucideAlignVerticalJustifyStart = AlignVerticalJustifyStart;\nexports.LucideAlignVerticalSpaceAround = AlignVerticalSpaceAround;\nexports.LucideAlignVerticalSpaceBetween = AlignVerticalSpaceBetween;\nexports.LucideAmpersand = Ampersand;\nexports.LucideAmpersands = Ampersands;\nexports.LucideAnchor = Anchor;\nexports.LucideAngry = Angry;\nexports.LucideAnnoyed = Annoyed;\nexports.LucideAntenna = Antenna;\nexports.LucideAperture = Aperture;\nexports.LucideAppWindow = AppWindow;\nexports.LucideApple = Apple;\nexports.LucideArchive = Archive;\nexports.LucideArchiveRestore = ArchiveRestore;\nexports.LucideArchiveX = ArchiveX;\nexports.LucideAreaChart = AreaChart;\nexports.LucideArmchair = Armchair;\nexports.LucideArrowBigDown = ArrowBigDown;\nexports.LucideArrowBigDownDash = ArrowBigDownDash;\nexports.LucideArrowBigLeft = ArrowBigLeft;\nexports.LucideArrowBigLeftDash = ArrowBigLeftDash;\nexports.LucideArrowBigRight = ArrowBigRight;\nexports.LucideArrowBigRightDash = ArrowBigRightDash;\nexports.LucideArrowBigUp = ArrowBigUp;\nexports.LucideArrowBigUpDash = ArrowBigUpDash;\nexports.LucideArrowDown = ArrowDown;\nexports.LucideArrowDown01 = ArrowDown01;\nexports.LucideArrowDown10 = ArrowDown10;\nexports.LucideArrowDownAZ = ArrowDownAZ;\nexports.LucideArrowDownAz = ArrowDownAZ;\nexports.LucideArrowDownCircle = ArrowDownCircle;\nexports.LucideArrowDownFromLine = ArrowDownFromLine;\nexports.LucideArrowDownLeft = ArrowDownLeft;\nexports.LucideArrowDownLeftFromCircle = ArrowDownLeftFromCircle;\nexports.LucideArrowDownLeftSquare = ArrowDownLeftSquare;\nexports.LucideArrowDownNarrowWide = ArrowDownNarrowWide;\nexports.LucideArrowDownRight = ArrowDownRight;\nexports.LucideArrowDownRightFromCircle = ArrowDownRightFromCircle;\nexports.LucideArrowDownRightSquare = ArrowDownRightSquare;\nexports.LucideArrowDownSquare = ArrowDownSquare;\nexports.LucideArrowDownToDot = ArrowDownToDot;\nexports.LucideArrowDownToLine = ArrowDownToLine;\nexports.LucideArrowDownUp = ArrowDownUp;\nexports.LucideArrowDownWideNarrow = ArrowDownWideNarrow;\nexports.LucideArrowDownZA = ArrowDownZA;\nexports.LucideArrowDownZa = ArrowDownZA;\nexports.LucideArrowLeft = ArrowLeft;\nexports.LucideArrowLeftCircle = ArrowLeftCircle;\nexports.LucideArrowLeftFromLine = ArrowLeftFromLine;\nexports.LucideArrowLeftRight = ArrowLeftRight;\nexports.LucideArrowLeftSquare = ArrowLeftSquare;\nexports.LucideArrowLeftToLine = ArrowLeftToLine;\nexports.LucideArrowRight = ArrowRight;\nexports.LucideArrowRightCircle = ArrowRightCircle;\nexports.LucideArrowRightFromLine = ArrowRightFromLine;\nexports.LucideArrowRightLeft = ArrowRightLeft;\nexports.LucideArrowRightSquare = ArrowRightSquare;\nexports.LucideArrowRightToLine = ArrowRightToLine;\nexports.LucideArrowUp = ArrowUp;\nexports.LucideArrowUp01 = ArrowUp01;\nexports.LucideArrowUp10 = ArrowUp10;\nexports.LucideArrowUpAZ = ArrowUpAZ;\nexports.LucideArrowUpAz = ArrowUpAZ;\nexports.LucideArrowUpCircle = ArrowUpCircle;\nexports.LucideArrowUpDown = ArrowUpDown;\nexports.LucideArrowUpFromDot = ArrowUpFromDot;\nexports.LucideArrowUpFromLine = ArrowUpFromLine;\nexports.LucideArrowUpLeft = ArrowUpLeft;\nexports.LucideArrowUpLeftFromCircle = ArrowUpLeftFromCircle;\nexports.LucideArrowUpLeftSquare = ArrowUpLeftSquare;\nexports.LucideArrowUpNarrowWide = ArrowUpNarrowWide;\nexports.LucideArrowUpRight = ArrowUpRight;\nexports.LucideArrowUpRightFromCircle = ArrowUpRightFromCircle;\nexports.LucideArrowUpRightSquare = ArrowUpRightSquare;\nexports.LucideArrowUpSquare = ArrowUpSquare;\nexports.LucideArrowUpToLine = ArrowUpToLine;\nexports.LucideArrowUpWideNarrow = ArrowUpWideNarrow;\nexports.LucideArrowUpZA = ArrowUpZA;\nexports.LucideArrowUpZa = ArrowUpZA;\nexports.LucideArrowsUpFromLine = ArrowsUpFromLine;\nexports.LucideAsterisk = Asterisk;\nexports.LucideAtSign = AtSign;\nexports.LucideAtom = Atom;\nexports.LucideAward = Award;\nexports.LucideAxe = Axe;\nexports.LucideAxis3D = Axis3d;\nexports.LucideAxis3d = Axis3d;\nexports.LucideBaby = Baby;\nexports.LucideBackpack = Backpack;\nexports.LucideBadge = Badge;\nexports.LucideBadgeAlert = BadgeAlert;\nexports.LucideBadgeCent = BadgeCent;\nexports.LucideBadgeCheck = BadgeCheck;\nexports.LucideBadgeDollarSign = BadgeDollarSign;\nexports.LucideBadgeEuro = BadgeEuro;\nexports.LucideBadgeHelp = BadgeHelp;\nexports.LucideBadgeIndianRupee = BadgeIndianRupee;\nexports.LucideBadgeInfo = BadgeInfo;\nexports.LucideBadgeJapaneseYen = BadgeJapaneseYen;\nexports.LucideBadgeMinus = BadgeMinus;\nexports.LucideBadgePercent = BadgePercent;\nexports.LucideBadgePlus = BadgePlus;\nexports.LucideBadgePoundSterling = BadgePoundSterling;\nexports.LucideBadgeRussianRuble = BadgeRussianRuble;\nexports.LucideBadgeSwissFranc = BadgeSwissFranc;\nexports.LucideBadgeX = BadgeX;\nexports.LucideBaggageClaim = BaggageClaim;\nexports.LucideBan = Ban;\nexports.LucideBanana = Banana;\nexports.LucideBanknote = Banknote;\nexports.LucideBarChart = BarChart;\nexports.LucideBarChart2 = BarChart2;\nexports.LucideBarChart3 = BarChart3;\nexports.LucideBarChart4 = BarChart4;\nexports.LucideBarChartBig = BarChartBig;\nexports.LucideBarChartHorizontal = BarChartHorizontal;\nexports.LucideBarChartHorizontalBig = BarChartHorizontalBig;\nexports.LucideBaseline = Baseline;\nexports.LucideBath = Bath;\nexports.LucideBattery = Battery;\nexports.LucideBatteryCharging = BatteryCharging;\nexports.LucideBatteryFull = BatteryFull;\nexports.LucideBatteryLow = BatteryLow;\nexports.LucideBatteryMedium = BatteryMedium;\nexports.LucideBatteryWarning = BatteryWarning;\nexports.LucideBeaker = Beaker;\nexports.LucideBean = Bean;\nexports.LucideBeanOff = BeanOff;\nexports.LucideBed = Bed;\nexports.LucideBedDouble = BedDouble;\nexports.LucideBedSingle = BedSingle;\nexports.LucideBeef = Beef;\nexports.LucideBeer = Beer;\nexports.LucideBell = Bell;\nexports.LucideBellDot = BellDot;\nexports.LucideBellMinus = BellMinus;\nexports.LucideBellOff = BellOff;\nexports.LucideBellPlus = BellPlus;\nexports.LucideBellRing = BellRing;\nexports.LucideBike = Bike;\nexports.LucideBinary = Binary;\nexports.LucideBiohazard = Biohazard;\nexports.LucideBird = Bird;\nexports.LucideBitcoin = Bitcoin;\nexports.LucideBlinds = Blinds;\nexports.LucideBlocks = Blocks;\nexports.LucideBluetooth = Bluetooth;\nexports.LucideBluetoothConnected = BluetoothConnected;\nexports.LucideBluetoothOff = BluetoothOff;\nexports.LucideBluetoothSearching = BluetoothSearching;\nexports.LucideBold = Bold;\nexports.LucideBomb = Bomb;\nexports.LucideBone = Bone;\nexports.LucideBook = Book;\nexports.LucideBookCopy = BookCopy;\nexports.LucideBookDown = BookDown;\nexports.LucideBookKey = BookKey;\nexports.LucideBookLock = BookLock;\nexports.LucideBookMarked = BookMarked;\nexports.LucideBookMinus = BookMinus;\nexports.LucideBookOpen = BookOpen;\nexports.LucideBookOpenCheck = BookOpenCheck;\nexports.LucideBookPlus = BookPlus;\nexports.LucideBookTemplate = BookTemplate;\nexports.LucideBookUp = BookUp;\nexports.LucideBookUp2 = BookUp2;\nexports.LucideBookX = BookX;\nexports.LucideBookmark = Bookmark;\nexports.LucideBookmarkMinus = BookmarkMinus;\nexports.LucideBookmarkPlus = BookmarkPlus;\nexports.LucideBoomBox = BoomBox;\nexports.LucideBot = Bot;\nexports.LucideBox = Box;\nexports.LucideBoxSelect = BoxSelect;\nexports.LucideBoxes = Boxes;\nexports.LucideBraces = Braces;\nexports.LucideBrackets = Brackets;\nexports.LucideBrain = Brain;\nexports.LucideBrainCircuit = BrainCircuit;\nexports.LucideBrainCog = BrainCog;\nexports.LucideBriefcase = Briefcase;\nexports.LucideBringToFront = BringToFront;\nexports.LucideBrush = Brush;\nexports.LucideBug = Bug;\nexports.LucideBugOff = BugOff;\nexports.LucideBugPlay = BugPlay;\nexports.LucideBuilding = Building;\nexports.LucideBuilding2 = Building2;\nexports.LucideBus = Bus;\nexports.LucideBusFront = BusFront;\nexports.LucideCable = Cable;\nexports.LucideCableCar = CableCar;\nexports.LucideCake = Cake;\nexports.LucideCakeSlice = CakeSlice;\nexports.LucideCalculator = Calculator;\nexports.LucideCalendar = Calendar;\nexports.LucideCalendarCheck = CalendarCheck;\nexports.LucideCalendarCheck2 = CalendarCheck2;\nexports.LucideCalendarClock = CalendarClock;\nexports.LucideCalendarDays = CalendarDays;\nexports.LucideCalendarHeart = CalendarHeart;\nexports.LucideCalendarMinus = CalendarMinus;\nexports.LucideCalendarOff = CalendarOff;\nexports.LucideCalendarPlus = CalendarPlus;\nexports.LucideCalendarRange = CalendarRange;\nexports.LucideCalendarSearch = CalendarSearch;\nexports.LucideCalendarX = CalendarX;\nexports.LucideCalendarX2 = CalendarX2;\nexports.LucideCamera = Camera;\nexports.LucideCameraOff = CameraOff;\nexports.LucideCandlestickChart = CandlestickChart;\nexports.LucideCandy = Candy;\nexports.LucideCandyCane = CandyCane;\nexports.LucideCandyOff = CandyOff;\nexports.LucideCar = Car;\nexports.LucideCarFront = CarFront;\nexports.LucideCarTaxiFront = CarTaxiFront;\nexports.LucideCarrot = Carrot;\nexports.LucideCaseLower = CaseLower;\nexports.LucideCaseSensitive = CaseSensitive;\nexports.LucideCaseUpper = CaseUpper;\nexports.LucideCassetteTape = CassetteTape;\nexports.LucideCast = Cast;\nexports.LucideCastle = Castle;\nexports.LucideCat = Cat;\nexports.LucideCheck = Check;\nexports.LucideCheckCheck = CheckCheck;\nexports.LucideCheckCircle = CheckCircle;\nexports.LucideCheckCircle2 = CheckCircle2;\nexports.LucideCheckSquare = CheckSquare;\nexports.LucideChefHat = ChefHat;\nexports.LucideCherry = Cherry;\nexports.LucideChevronDown = ChevronDown;\nexports.LucideChevronDownCircle = ChevronDownCircle;\nexports.LucideChevronDownSquare = ChevronDownSquare;\nexports.LucideChevronFirst = ChevronFirst;\nexports.LucideChevronLast = ChevronLast;\nexports.LucideChevronLeft = ChevronLeft;\nexports.LucideChevronLeftCircle = ChevronLeftCircle;\nexports.LucideChevronLeftSquare = ChevronLeftSquare;\nexports.LucideChevronRight = ChevronRight;\nexports.LucideChevronRightCircle = ChevronRightCircle;\nexports.LucideChevronRightSquare = ChevronRightSquare;\nexports.LucideChevronUp = ChevronUp;\nexports.LucideChevronUpCircle = ChevronUpCircle;\nexports.LucideChevronUpSquare = ChevronUpSquare;\nexports.LucideChevronsDown = ChevronsDown;\nexports.LucideChevronsDownUp = ChevronsDownUp;\nexports.LucideChevronsLeft = ChevronsLeft;\nexports.LucideChevronsLeftRight = ChevronsLeftRight;\nexports.LucideChevronsRight = ChevronsRight;\nexports.LucideChevronsRightLeft = ChevronsRightLeft;\nexports.LucideChevronsUp = ChevronsUp;\nexports.LucideChevronsUpDown = ChevronsUpDown;\nexports.LucideChrome = Chrome;\nexports.LucideChurch = Church;\nexports.LucideCigarette = Cigarette;\nexports.LucideCigaretteOff = CigaretteOff;\nexports.LucideCircle = Circle;\nexports.LucideCircleDashed = CircleDashed;\nexports.LucideCircleDollarSign = CircleDollarSign;\nexports.LucideCircleDot = CircleDot;\nexports.LucideCircleDotDashed = CircleDotDashed;\nexports.LucideCircleEllipsis = CircleEllipsis;\nexports.LucideCircleEqual = CircleEqual;\nexports.LucideCircleOff = CircleOff;\nexports.LucideCircleSlash = CircleSlash;\nexports.LucideCircleSlash2 = CircleSlash2;\nexports.LucideCircleSlashed = CircleSlash2;\nexports.LucideCircuitBoard = CircuitBoard;\nexports.LucideCitrus = Citrus;\nexports.LucideClapperboard = Clapperboard;\nexports.LucideClipboard = Clipboard;\nexports.LucideClipboardCheck = ClipboardCheck;\nexports.LucideClipboardCopy = ClipboardCopy;\nexports.LucideClipboardEdit = ClipboardEdit;\nexports.LucideClipboardList = ClipboardList;\nexports.LucideClipboardPaste = ClipboardPaste;\nexports.LucideClipboardSignature = ClipboardSignature;\nexports.LucideClipboardType = ClipboardType;\nexports.LucideClipboardX = ClipboardX;\nexports.LucideClock = Clock;\nexports.LucideClock1 = Clock1;\nexports.LucideClock10 = Clock10;\nexports.LucideClock11 = Clock11;\nexports.LucideClock12 = Clock12;\nexports.LucideClock2 = Clock2;\nexports.LucideClock3 = Clock3;\nexports.LucideClock4 = Clock4;\nexports.LucideClock5 = Clock5;\nexports.LucideClock6 = Clock6;\nexports.LucideClock7 = Clock7;\nexports.LucideClock8 = Clock8;\nexports.LucideClock9 = Clock9;\nexports.LucideCloud = Cloud;\nexports.LucideCloudCog = CloudCog;\nexports.LucideCloudDrizzle = CloudDrizzle;\nexports.LucideCloudFog = CloudFog;\nexports.LucideCloudHail = CloudHail;\nexports.LucideCloudLightning = CloudLightning;\nexports.LucideCloudMoon = CloudMoon;\nexports.LucideCloudMoonRain = CloudMoonRain;\nexports.LucideCloudOff = CloudOff;\nexports.LucideCloudRain = CloudRain;\nexports.LucideCloudRainWind = CloudRainWind;\nexports.LucideCloudSnow = CloudSnow;\nexports.LucideCloudSun = CloudSun;\nexports.LucideCloudSunRain = CloudSunRain;\nexports.LucideCloudy = Cloudy;\nexports.LucideClover = Clover;\nexports.LucideClub = Club;\nexports.LucideCode = Code;\nexports.LucideCode2 = Code2;\nexports.LucideCodepen = Codepen;\nexports.LucideCodesandbox = Codesandbox;\nexports.LucideCoffee = Coffee;\nexports.LucideCog = Cog;\nexports.LucideCoins = Coins;\nexports.LucideColumns = Columns;\nexports.LucideCombine = Combine;\nexports.LucideCommand = Command;\nexports.LucideCompass = Compass;\nexports.LucideComponent = Component;\nexports.LucideComputer = Computer;\nexports.LucideConciergeBell = ConciergeBell;\nexports.LucideConstruction = Construction;\nexports.LucideContact = Contact;\nexports.LucideContact2 = Contact2;\nexports.LucideContainer = Container;\nexports.LucideContrast = Contrast;\nexports.LucideCookie = Cookie;\nexports.LucideCopy = Copy;\nexports.LucideCopyCheck = CopyCheck;\nexports.LucideCopyMinus = CopyMinus;\nexports.LucideCopyPlus = CopyPlus;\nexports.LucideCopySlash = CopySlash;\nexports.LucideCopyX = CopyX;\nexports.LucideCopyleft = Copyleft;\nexports.LucideCopyright = Copyright;\nexports.LucideCornerDownLeft = CornerDownLeft;\nexports.LucideCornerDownRight = CornerDownRight;\nexports.LucideCornerLeftDown = CornerLeftDown;\nexports.LucideCornerLeftUp = CornerLeftUp;\nexports.LucideCornerRightDown = CornerRightDown;\nexports.LucideCornerRightUp = CornerRightUp;\nexports.LucideCornerUpLeft = CornerUpLeft;\nexports.LucideCornerUpRight = CornerUpRight;\nexports.LucideCpu = Cpu;\nexports.LucideCreativeCommons = CreativeCommons;\nexports.LucideCreditCard = CreditCard;\nexports.LucideCroissant = Croissant;\nexports.LucideCrop = Crop;\nexports.LucideCross = Cross;\nexports.LucideCrosshair = Crosshair;\nexports.LucideCrown = Crown;\nexports.LucideCupSoda = CupSoda;\nexports.LucideCurlyBraces = Braces;\nexports.LucideCurrency = Currency;\nexports.LucideDatabase = Database;\nexports.LucideDatabaseBackup = DatabaseBackup;\nexports.LucideDatabaseZap = DatabaseZap;\nexports.LucideDelete = Delete;\nexports.LucideDessert = Dessert;\nexports.LucideDiamond = Diamond;\nexports.LucideDice1 = Dice1;\nexports.LucideDice2 = Dice2;\nexports.LucideDice3 = Dice3;\nexports.LucideDice4 = Dice4;\nexports.LucideDice5 = Dice5;\nexports.LucideDice6 = Dice6;\nexports.LucideDices = Dices;\nexports.LucideDiff = Diff;\nexports.LucideDisc = Disc;\nexports.LucideDisc2 = Disc2;\nexports.LucideDisc3 = Disc3;\nexports.LucideDivide = Divide;\nexports.LucideDivideCircle = DivideCircle;\nexports.LucideDivideSquare = DivideSquare;\nexports.LucideDna = Dna;\nexports.LucideDnaOff = DnaOff;\nexports.LucideDog = Dog;\nexports.LucideDollarSign = DollarSign;\nexports.LucideDonut = Donut;\nexports.LucideDoorClosed = DoorClosed;\nexports.LucideDoorOpen = DoorOpen;\nexports.LucideDot = Dot;\nexports.LucideDownload = Download;\nexports.LucideDownloadCloud = DownloadCloud;\nexports.LucideDribbble = Dribbble;\nexports.LucideDroplet = Droplet;\nexports.LucideDroplets = Droplets;\nexports.LucideDrumstick = Drumstick;\nexports.LucideDumbbell = Dumbbell;\nexports.LucideEar = Ear;\nexports.LucideEarOff = EarOff;\nexports.LucideEdit = PenSquare;\nexports.LucideEdit2 = Pen;\nexports.LucideEdit3 = PenLine;\nexports.LucideEgg = Egg;\nexports.LucideEggFried = EggFried;\nexports.LucideEggOff = EggOff;\nexports.LucideEqual = Equal;\nexports.LucideEqualNot = EqualNot;\nexports.LucideEraser = Eraser;\nexports.LucideEuro = Euro;\nexports.LucideExpand = Expand;\nexports.LucideExternalLink = ExternalLink;\nexports.LucideEye = Eye;\nexports.LucideEyeOff = EyeOff;\nexports.LucideFacebook = Facebook;\nexports.LucideFactory = Factory;\nexports.LucideFan = Fan;\nexports.LucideFastForward = FastForward;\nexports.LucideFeather = Feather;\nexports.LucideFerrisWheel = FerrisWheel;\nexports.LucideFigma = Figma;\nexports.LucideFile = File;\nexports.LucideFileArchive = FileArchive;\nexports.LucideFileAudio = FileAudio;\nexports.LucideFileAudio2 = FileAudio2;\nexports.LucideFileAxis3D = FileAxis3d;\nexports.LucideFileAxis3d = FileAxis3d;\nexports.LucideFileBadge = FileBadge;\nexports.LucideFileBadge2 = FileBadge2;\nexports.LucideFileBarChart = FileBarChart;\nexports.LucideFileBarChart2 = FileBarChart2;\nexports.LucideFileBox = FileBox;\nexports.LucideFileCheck = FileCheck;\nexports.LucideFileCheck2 = FileCheck2;\nexports.LucideFileClock = FileClock;\nexports.LucideFileCode = FileCode;\nexports.LucideFileCode2 = FileCode2;\nexports.LucideFileCog = FileCog;\nexports.LucideFileCog2 = FileCog;\nexports.LucideFileDiff = FileDiff;\nexports.LucideFileDigit = FileDigit;\nexports.LucideFileDown = FileDown;\nexports.LucideFileEdit = FileEdit;\nexports.LucideFileHeart = FileHeart;\nexports.LucideFileImage = FileImage;\nexports.LucideFileInput = FileInput;\nexports.LucideFileJson = FileJson;\nexports.LucideFileJson2 = FileJson2;\nexports.LucideFileKey = FileKey;\nexports.LucideFileKey2 = FileKey2;\nexports.LucideFileLineChart = FileLineChart;\nexports.LucideFileLock = FileLock;\nexports.LucideFileLock2 = FileLock2;\nexports.LucideFileMinus = FileMinus;\nexports.LucideFileMinus2 = FileMinus2;\nexports.LucideFileOutput = FileOutput;\nexports.LucideFilePieChart = FilePieChart;\nexports.LucideFilePlus = FilePlus;\nexports.LucideFilePlus2 = FilePlus2;\nexports.LucideFileQuestion = FileQuestion;\nexports.LucideFileScan = FileScan;\nexports.LucideFileSearch = FileSearch;\nexports.LucideFileSearch2 = FileSearch2;\nexports.LucideFileSignature = FileSignature;\nexports.LucideFileSpreadsheet = FileSpreadsheet;\nexports.LucideFileStack = FileStack;\nexports.LucideFileSymlink = FileSymlink;\nexports.LucideFileTerminal = FileTerminal;\nexports.LucideFileText = FileText;\nexports.LucideFileType = FileType;\nexports.LucideFileType2 = FileType2;\nexports.LucideFileUp = FileUp;\nexports.LucideFileVideo = FileVideo;\nexports.LucideFileVideo2 = FileVideo2;\nexports.LucideFileVolume = FileVolume;\nexports.LucideFileVolume2 = FileVolume2;\nexports.LucideFileWarning = FileWarning;\nexports.LucideFileX = FileX;\nexports.LucideFileX2 = FileX2;\nexports.LucideFiles = Files;\nexports.LucideFilm = Film;\nexports.LucideFilter = Filter;\nexports.LucideFilterX = FilterX;\nexports.LucideFingerprint = Fingerprint;\nexports.LucideFish = Fish;\nexports.LucideFishOff = FishOff;\nexports.LucideFishSymbol = FishSymbol;\nexports.LucideFlag = Flag;\nexports.LucideFlagOff = FlagOff;\nexports.LucideFlagTriangleLeft = FlagTriangleLeft;\nexports.LucideFlagTriangleRight = FlagTriangleRight;\nexports.LucideFlame = Flame;\nexports.LucideFlashlight = Flashlight;\nexports.LucideFlashlightOff = FlashlightOff;\nexports.LucideFlaskConical = FlaskConical;\nexports.LucideFlaskConicalOff = FlaskConicalOff;\nexports.LucideFlaskRound = FlaskRound;\nexports.LucideFlipHorizontal = FlipHorizontal;\nexports.LucideFlipHorizontal2 = FlipHorizontal2;\nexports.LucideFlipVertical = FlipVertical;\nexports.LucideFlipVertical2 = FlipVertical2;\nexports.LucideFlower = Flower;\nexports.LucideFlower2 = Flower2;\nexports.LucideFocus = Focus;\nexports.LucideFoldHorizontal = FoldHorizontal;\nexports.LucideFoldVertical = FoldVertical;\nexports.LucideFolder = Folder;\nexports.LucideFolderArchive = FolderArchive;\nexports.LucideFolderCheck = FolderCheck;\nexports.LucideFolderClock = FolderClock;\nexports.LucideFolderClosed = FolderClosed;\nexports.LucideFolderCog = FolderCog;\nexports.LucideFolderCog2 = FolderCog;\nexports.LucideFolderDot = FolderDot;\nexports.LucideFolderDown = FolderDown;\nexports.LucideFolderEdit = FolderEdit;\nexports.LucideFolderGit = FolderGit;\nexports.LucideFolderGit2 = FolderGit2;\nexports.LucideFolderHeart = FolderHeart;\nexports.LucideFolderInput = FolderInput;\nexports.LucideFolderKanban = FolderKanban;\nexports.LucideFolderKey = FolderKey;\nexports.LucideFolderLock = FolderLock;\nexports.LucideFolderMinus = FolderMinus;\nexports.LucideFolderOpen = FolderOpen;\nexports.LucideFolderOpenDot = FolderOpenDot;\nexports.LucideFolderOutput = FolderOutput;\nexports.LucideFolderPlus = FolderPlus;\nexports.LucideFolderRoot = FolderRoot;\nexports.LucideFolderSearch = FolderSearch;\nexports.LucideFolderSearch2 = FolderSearch2;\nexports.LucideFolderSymlink = FolderSymlink;\nexports.LucideFolderSync = FolderSync;\nexports.LucideFolderTree = FolderTree;\nexports.LucideFolderUp = FolderUp;\nexports.LucideFolderX = FolderX;\nexports.LucideFolders = Folders;\nexports.LucideFootprints = Footprints;\nexports.LucideForklift = Forklift;\nexports.LucideFormInput = FormInput;\nexports.LucideForward = Forward;\nexports.LucideFrame = Frame;\nexports.LucideFramer = Framer;\nexports.LucideFrown = Frown;\nexports.LucideFuel = Fuel;\nexports.LucideFunctionSquare = FunctionSquare;\nexports.LucideGalleryHorizontal = GalleryHorizontal;\nexports.LucideGalleryHorizontalEnd = GalleryHorizontalEnd;\nexports.LucideGalleryThumbnails = GalleryThumbnails;\nexports.LucideGalleryVertical = GalleryVertical;\nexports.LucideGalleryVerticalEnd = GalleryVerticalEnd;\nexports.LucideGamepad = Gamepad;\nexports.LucideGamepad2 = Gamepad2;\nexports.LucideGanttChart = GanttChart;\nexports.LucideGanttChartSquare = GanttChartSquare;\nexports.LucideGauge = Gauge;\nexports.LucideGaugeCircle = GaugeCircle;\nexports.LucideGavel = Gavel;\nexports.LucideGem = Gem;\nexports.LucideGhost = Ghost;\nexports.LucideGift = Gift;\nexports.LucideGitBranch = GitBranch;\nexports.LucideGitBranchPlus = GitBranchPlus;\nexports.LucideGitCommit = GitCommit;\nexports.LucideGitCompare = GitCompare;\nexports.LucideGitFork = GitFork;\nexports.LucideGitMerge = GitMerge;\nexports.LucideGitPullRequest = GitPullRequest;\nexports.LucideGitPullRequestClosed = GitPullRequestClosed;\nexports.LucideGitPullRequestDraft = GitPullRequestDraft;\nexports.LucideGithub = Github;\nexports.LucideGitlab = Gitlab;\nexports.LucideGlassWater = GlassWater;\nexports.LucideGlasses = Glasses;\nexports.LucideGlobe = Globe;\nexports.LucideGlobe2 = Globe2;\nexports.LucideGoal = Goal;\nexports.LucideGrab = Grab;\nexports.LucideGraduationCap = GraduationCap;\nexports.LucideGrape = Grape;\nexports.LucideGrid = Grid3x3;\nexports.LucideGrid2X2 = Grid2x2;\nexports.LucideGrid2x2 = Grid2x2;\nexports.LucideGrid3X3 = Grid3x3;\nexports.LucideGrid3x3 = Grid3x3;\nexports.LucideGrip = Grip;\nexports.LucideGripHorizontal = GripHorizontal;\nexports.LucideGripVertical = GripVertical;\nexports.LucideGroup = Group;\nexports.LucideHammer = Hammer;\nexports.LucideHand = Hand;\nexports.LucideHandMetal = HandMetal;\nexports.LucideHardDrive = HardDrive;\nexports.LucideHardDriveDownload = HardDriveDownload;\nexports.LucideHardDriveUpload = HardDriveUpload;\nexports.LucideHardHat = HardHat;\nexports.LucideHash = Hash;\nexports.LucideHaze = Haze;\nexports.LucideHdmiPort = HdmiPort;\nexports.LucideHeading = Heading;\nexports.LucideHeading1 = Heading1;\nexports.LucideHeading2 = Heading2;\nexports.LucideHeading3 = Heading3;\nexports.LucideHeading4 = Heading4;\nexports.LucideHeading5 = Heading5;\nexports.LucideHeading6 = Heading6;\nexports.LucideHeadphones = Headphones;\nexports.LucideHeart = Heart;\nexports.LucideHeartCrack = HeartCrack;\nexports.LucideHeartHandshake = HeartHandshake;\nexports.LucideHeartOff = HeartOff;\nexports.LucideHeartPulse = HeartPulse;\nexports.LucideHelpCircle = HelpCircle;\nexports.LucideHelpingHand = HelpingHand;\nexports.LucideHexagon = Hexagon;\nexports.LucideHighlighter = Highlighter;\nexports.LucideHistory = History;\nexports.LucideHome = Home;\nexports.LucideHop = Hop;\nexports.LucideHopOff = HopOff;\nexports.LucideHotel = Hotel;\nexports.LucideHourglass = Hourglass;\nexports.LucideIceCream = IceCream;\nexports.LucideIceCream2 = IceCream2;\nexports.LucideImage = Image;\nexports.LucideImageMinus = ImageMinus;\nexports.LucideImageOff = ImageOff;\nexports.LucideImagePlus = ImagePlus;\nexports.LucideImport = Import;\nexports.LucideInbox = Inbox;\nexports.LucideIndent = Indent;\nexports.LucideIndianRupee = IndianRupee;\nexports.LucideInfinity = Infinity;\nexports.LucideInfo = Info;\nexports.LucideInspect = MousePointerSquare;\nexports.LucideInstagram = Instagram;\nexports.LucideItalic = Italic;\nexports.LucideIterationCcw = IterationCcw;\nexports.LucideIterationCw = IterationCw;\nexports.LucideJapaneseYen = JapaneseYen;\nexports.LucideJoystick = Joystick;\nexports.LucideKanban = Kanban;\nexports.LucideKanbanSquare = KanbanSquare;\nexports.LucideKanbanSquareDashed = KanbanSquareDashed;\nexports.LucideKey = Key;\nexports.LucideKeyRound = KeyRound;\nexports.LucideKeySquare = KeySquare;\nexports.LucideKeyboard = Keyboard;\nexports.LucideLamp = Lamp;\nexports.LucideLampCeiling = LampCeiling;\nexports.LucideLampDesk = LampDesk;\nexports.LucideLampFloor = LampFloor;\nexports.LucideLampWallDown = LampWallDown;\nexports.LucideLampWallUp = LampWallUp;\nexports.LucideLandmark = Landmark;\nexports.LucideLanguages = Languages;\nexports.LucideLaptop = Laptop;\nexports.LucideLaptop2 = Laptop2;\nexports.LucideLasso = Lasso;\nexports.LucideLassoSelect = LassoSelect;\nexports.LucideLaugh = Laugh;\nexports.LucideLayers = Layers;\nexports.LucideLayout = Layout;\nexports.LucideLayoutDashboard = LayoutDashboard;\nexports.LucideLayoutGrid = LayoutGrid;\nexports.LucideLayoutList = LayoutList;\nexports.LucideLayoutPanelLeft = LayoutPanelLeft;\nexports.LucideLayoutPanelTop = LayoutPanelTop;\nexports.LucideLayoutTemplate = LayoutTemplate;\nexports.LucideLeaf = Leaf;\nexports.LucideLeafyGreen = LeafyGreen;\nexports.LucideLibrary = Library;\nexports.LucideLifeBuoy = LifeBuoy;\nexports.LucideLigature = Ligature;\nexports.LucideLightbulb = Lightbulb;\nexports.LucideLightbulbOff = LightbulbOff;\nexports.LucideLineChart = LineChart;\nexports.LucideLink = Link;\nexports.LucideLink2 = Link2;\nexports.LucideLink2Off = Link2Off;\nexports.LucideLinkedin = Linkedin;\nexports.LucideList = List;\nexports.LucideListChecks = ListChecks;\nexports.LucideListEnd = ListEnd;\nexports.LucideListFilter = ListFilter;\nexports.LucideListMinus = ListMinus;\nexports.LucideListMusic = ListMusic;\nexports.LucideListOrdered = ListOrdered;\nexports.LucideListPlus = ListPlus;\nexports.LucideListRestart = ListRestart;\nexports.LucideListStart = ListStart;\nexports.LucideListTodo = ListTodo;\nexports.LucideListTree = ListTree;\nexports.LucideListVideo = ListVideo;\nexports.LucideListX = ListX;\nexports.LucideLoader = Loader;\nexports.LucideLoader2 = Loader2;\nexports.LucideLocate = Locate;\nexports.LucideLocateFixed = LocateFixed;\nexports.LucideLocateOff = LocateOff;\nexports.LucideLock = Lock;\nexports.LucideLogIn = LogIn;\nexports.LucideLogOut = LogOut;\nexports.LucideLollipop = Lollipop;\nexports.LucideLuggage = Luggage;\nexports.LucideMSquare = MSquare;\nexports.LucideMagnet = Magnet;\nexports.LucideMail = Mail;\nexports.LucideMailCheck = MailCheck;\nexports.LucideMailMinus = MailMinus;\nexports.LucideMailOpen = MailOpen;\nexports.LucideMailPlus = MailPlus;\nexports.LucideMailQuestion = MailQuestion;\nexports.LucideMailSearch = MailSearch;\nexports.LucideMailWarning = MailWarning;\nexports.LucideMailX = MailX;\nexports.LucideMailbox = Mailbox;\nexports.LucideMails = Mails;\nexports.LucideMap = Map;\nexports.LucideMapPin = MapPin;\nexports.LucideMapPinOff = MapPinOff;\nexports.LucideMartini = Martini;\nexports.LucideMaximize = Maximize;\nexports.LucideMaximize2 = Maximize2;\nexports.LucideMedal = Medal;\nexports.LucideMegaphone = Megaphone;\nexports.LucideMegaphoneOff = MegaphoneOff;\nexports.LucideMeh = Meh;\nexports.LucideMemoryStick = MemoryStick;\nexports.LucideMenu = Menu;\nexports.LucideMenuSquare = MenuSquare;\nexports.LucideMerge = Merge;\nexports.LucideMessageCircle = MessageCircle;\nexports.LucideMessageSquare = MessageSquare;\nexports.LucideMessageSquareDashed = MessageSquareDashed;\nexports.LucideMessageSquarePlus = MessageSquarePlus;\nexports.LucideMessagesSquare = MessagesSquare;\nexports.LucideMic = Mic;\nexports.LucideMic2 = Mic2;\nexports.LucideMicOff = MicOff;\nexports.LucideMicroscope = Microscope;\nexports.LucideMicrowave = Microwave;\nexports.LucideMilestone = Milestone;\nexports.LucideMilk = Milk;\nexports.LucideMilkOff = MilkOff;\nexports.LucideMinimize = Minimize;\nexports.LucideMinimize2 = Minimize2;\nexports.LucideMinus = Minus;\nexports.LucideMinusCircle = MinusCircle;\nexports.LucideMinusSquare = MinusSquare;\nexports.LucideMonitor = Monitor;\nexports.LucideMonitorCheck = MonitorCheck;\nexports.LucideMonitorDot = MonitorDot;\nexports.LucideMonitorDown = MonitorDown;\nexports.LucideMonitorOff = MonitorOff;\nexports.LucideMonitorPause = MonitorPause;\nexports.LucideMonitorPlay = MonitorPlay;\nexports.LucideMonitorSmartphone = MonitorSmartphone;\nexports.LucideMonitorSpeaker = MonitorSpeaker;\nexports.LucideMonitorStop = MonitorStop;\nexports.LucideMonitorUp = MonitorUp;\nexports.LucideMonitorX = MonitorX;\nexports.LucideMoon = Moon;\nexports.LucideMoonStar = MoonStar;\nexports.LucideMoreHorizontal = MoreHorizontal;\nexports.LucideMoreVertical = MoreVertical;\nexports.LucideMountain = Mountain;\nexports.LucideMountainSnow = MountainSnow;\nexports.LucideMouse = Mouse;\nexports.LucideMousePointer = MousePointer;\nexports.LucideMousePointer2 = MousePointer2;\nexports.LucideMousePointerClick = MousePointerClick;\nexports.LucideMousePointerSquare = MousePointerSquare;\nexports.LucideMousePointerSquareDashed = MousePointerSquareDashed;\nexports.LucideMove = Move;\nexports.LucideMove3D = Move3d;\nexports.LucideMove3d = Move3d;\nexports.LucideMoveDiagonal = MoveDiagonal;\nexports.LucideMoveDiagonal2 = MoveDiagonal2;\nexports.LucideMoveDown = MoveDown;\nexports.LucideMoveDownLeft = MoveDownLeft;\nexports.LucideMoveDownRight = MoveDownRight;\nexports.LucideMoveHorizontal = MoveHorizontal;\nexports.LucideMoveLeft = MoveLeft;\nexports.LucideMoveRight = MoveRight;\nexports.LucideMoveUp = MoveUp;\nexports.LucideMoveUpLeft = MoveUpLeft;\nexports.LucideMoveUpRight = MoveUpRight;\nexports.LucideMoveVertical = MoveVertical;\nexports.LucideMusic = Music;\nexports.LucideMusic2 = Music2;\nexports.LucideMusic3 = Music3;\nexports.LucideMusic4 = Music4;\nexports.LucideNavigation = Navigation;\nexports.LucideNavigation2 = Navigation2;\nexports.LucideNavigation2Off = Navigation2Off;\nexports.LucideNavigationOff = NavigationOff;\nexports.LucideNetwork = Network;\nexports.LucideNewspaper = Newspaper;\nexports.LucideNfc = Nfc;\nexports.LucideNut = Nut;\nexports.LucideNutOff = NutOff;\nexports.LucideOctagon = Octagon;\nexports.LucideOption = Option;\nexports.LucideOrbit = Orbit;\nexports.LucideOutdent = Outdent;\nexports.LucidePackage = Package;\nexports.LucidePackage2 = Package2;\nexports.LucidePackageCheck = PackageCheck;\nexports.LucidePackageMinus = PackageMinus;\nexports.LucidePackageOpen = PackageOpen;\nexports.LucidePackagePlus = PackagePlus;\nexports.LucidePackageSearch = PackageSearch;\nexports.LucidePackageX = PackageX;\nexports.LucidePaintBucket = PaintBucket;\nexports.LucidePaintbrush = Paintbrush;\nexports.LucidePaintbrush2 = Paintbrush2;\nexports.LucidePalette = Palette;\nexports.LucidePalmtree = Palmtree;\nexports.LucidePanelBottom = PanelBottom;\nexports.LucidePanelBottomClose = PanelBottomClose;\nexports.LucidePanelBottomInactive = PanelBottomInactive;\nexports.LucidePanelBottomOpen = PanelBottomOpen;\nexports.LucidePanelLeft = PanelLeft;\nexports.LucidePanelLeftClose = PanelLeftClose;\nexports.LucidePanelLeftInactive = PanelLeftInactive;\nexports.LucidePanelLeftOpen = PanelLeftOpen;\nexports.LucidePanelRight = PanelRight;\nexports.LucidePanelRightClose = PanelRightClose;\nexports.LucidePanelRightInactive = PanelRightInactive;\nexports.LucidePanelRightOpen = PanelRightOpen;\nexports.LucidePanelTop = PanelTop;\nexports.LucidePanelTopClose = PanelTopClose;\nexports.LucidePanelTopInactive = PanelTopInactive;\nexports.LucidePanelTopOpen = PanelTopOpen;\nexports.LucidePaperclip = Paperclip;\nexports.LucideParentheses = Parentheses;\nexports.LucideParkingCircle = ParkingCircle;\nexports.LucideParkingCircleOff = ParkingCircleOff;\nexports.LucideParkingMeter = ParkingMeter;\nexports.LucideParkingSquare = ParkingSquare;\nexports.LucideParkingSquareOff = ParkingSquareOff;\nexports.LucidePartyPopper = PartyPopper;\nexports.LucidePause = Pause;\nexports.LucidePauseCircle = PauseCircle;\nexports.LucidePauseOctagon = PauseOctagon;\nexports.LucidePawPrint = PawPrint;\nexports.LucidePcCase = PcCase;\nexports.LucidePen = Pen;\nexports.LucidePenBox = PenSquare;\nexports.LucidePenLine = PenLine;\nexports.LucidePenSquare = PenSquare;\nexports.LucidePenTool = PenTool;\nexports.LucidePencil = Pencil;\nexports.LucidePencilLine = PencilLine;\nexports.LucidePencilRuler = PencilRuler;\nexports.LucidePercent = Percent;\nexports.LucidePercentCircle = PercentCircle;\nexports.LucidePercentDiamond = PercentDiamond;\nexports.LucidePercentSquare = PercentSquare;\nexports.LucidePersonStanding = PersonStanding;\nexports.LucidePhone = Phone;\nexports.LucidePhoneCall = PhoneCall;\nexports.LucidePhoneForwarded = PhoneForwarded;\nexports.LucidePhoneIncoming = PhoneIncoming;\nexports.LucidePhoneMissed = PhoneMissed;\nexports.LucidePhoneOff = PhoneOff;\nexports.LucidePhoneOutgoing = PhoneOutgoing;\nexports.LucidePi = Pi;\nexports.LucidePiSquare = PiSquare;\nexports.LucidePictureInPicture = PictureInPicture;\nexports.LucidePictureInPicture2 = PictureInPicture2;\nexports.LucidePieChart = PieChart;\nexports.LucidePiggyBank = PiggyBank;\nexports.LucidePilcrow = Pilcrow;\nexports.LucidePilcrowSquare = PilcrowSquare;\nexports.LucidePill = Pill;\nexports.LucidePin = Pin;\nexports.LucidePinOff = PinOff;\nexports.LucidePipette = Pipette;\nexports.LucidePizza = Pizza;\nexports.LucidePlane = Plane;\nexports.LucidePlaneLanding = PlaneLanding;\nexports.LucidePlaneTakeoff = PlaneTakeoff;\nexports.LucidePlay = Play;\nexports.LucidePlayCircle = PlayCircle;\nexports.LucidePlaySquare = PlaySquare;\nexports.LucidePlug = Plug;\nexports.LucidePlug2 = Plug2;\nexports.LucidePlugZap = PlugZap;\nexports.LucidePlugZap2 = PlugZap2;\nexports.LucidePlus = Plus;\nexports.LucidePlusCircle = PlusCircle;\nexports.LucidePlusSquare = PlusSquare;\nexports.LucidePocket = Pocket;\nexports.LucidePocketKnife = PocketKnife;\nexports.LucidePodcast = Podcast;\nexports.LucidePointer = Pointer;\nexports.LucidePopcorn = Popcorn;\nexports.LucidePopsicle = Popsicle;\nexports.LucidePoundSterling = PoundSterling;\nexports.LucidePower = Power;\nexports.LucidePowerOff = PowerOff;\nexports.LucidePresentation = Presentation;\nexports.LucidePrinter = Printer;\nexports.LucideProjector = Projector;\nexports.LucidePuzzle = Puzzle;\nexports.LucideQrCode = QrCode;\nexports.LucideQuote = Quote;\nexports.LucideRabbit = Rabbit;\nexports.LucideRadar = Radar;\nexports.LucideRadiation = Radiation;\nexports.LucideRadio = Radio;\nexports.LucideRadioReceiver = RadioReceiver;\nexports.LucideRadioTower = RadioTower;\nexports.LucideRailSymbol = RailSymbol;\nexports.LucideRainbow = Rainbow;\nexports.LucideRat = Rat;\nexports.LucideRatio = Ratio;\nexports.LucideReceipt = Receipt;\nexports.LucideRectangleHorizontal = RectangleHorizontal;\nexports.LucideRectangleVertical = RectangleVertical;\nexports.LucideRecycle = Recycle;\nexports.LucideRedo = Redo;\nexports.LucideRedo2 = Redo2;\nexports.LucideRedoDot = RedoDot;\nexports.LucideRefreshCcw = RefreshCcw;\nexports.LucideRefreshCcwDot = RefreshCcwDot;\nexports.LucideRefreshCw = RefreshCw;\nexports.LucideRefreshCwOff = RefreshCwOff;\nexports.LucideRefrigerator = Refrigerator;\nexports.LucideRegex = Regex;\nexports.LucideRemoveFormatting = RemoveFormatting;\nexports.LucideRepeat = Repeat;\nexports.LucideRepeat1 = Repeat1;\nexports.LucideRepeat2 = Repeat2;\nexports.LucideReplace = Replace;\nexports.LucideReplaceAll = ReplaceAll;\nexports.LucideReply = Reply;\nexports.LucideReplyAll = ReplyAll;\nexports.LucideRewind = Rewind;\nexports.LucideRocket = Rocket;\nexports.LucideRockingChair = RockingChair;\nexports.LucideRollerCoaster = RollerCoaster;\nexports.LucideRotate3D = Rotate3d;\nexports.LucideRotate3d = Rotate3d;\nexports.LucideRotateCcw = RotateCcw;\nexports.LucideRotateCw = RotateCw;\nexports.LucideRouter = Router;\nexports.LucideRows = Rows;\nexports.LucideRss = Rss;\nexports.LucideRuler = Ruler;\nexports.LucideRussianRuble = RussianRuble;\nexports.LucideSailboat = Sailboat;\nexports.LucideSalad = Salad;\nexports.LucideSandwich = Sandwich;\nexports.LucideSatellite = Satellite;\nexports.LucideSatelliteDish = SatelliteDish;\nexports.LucideSave = Save;\nexports.LucideSaveAll = SaveAll;\nexports.LucideScale = Scale;\nexports.LucideScale3D = Scale3d;\nexports.LucideScale3d = Scale3d;\nexports.LucideScaling = Scaling;\nexports.LucideScan = Scan;\nexports.LucideScanFace = ScanFace;\nexports.LucideScanLine = ScanLine;\nexports.LucideScatterChart = ScatterChart;\nexports.LucideSchool = School;\nexports.LucideSchool2 = School2;\nexports.LucideScissors = Scissors;\nexports.LucideScissorsLineDashed = ScissorsLineDashed;\nexports.LucideScissorsSquare = ScissorsSquare;\nexports.LucideScissorsSquareDashedBottom = ScissorsSquareDashedBottom;\nexports.LucideScreenShare = ScreenShare;\nexports.LucideScreenShareOff = ScreenShareOff;\nexports.LucideScroll = Scroll;\nexports.LucideScrollText = ScrollText;\nexports.LucideSearch = Search;\nexports.LucideSearchCheck = SearchCheck;\nexports.LucideSearchCode = SearchCode;\nexports.LucideSearchSlash = SearchSlash;\nexports.LucideSearchX = SearchX;\nexports.LucideSend = Send;\nexports.LucideSendHorizonal = SendHorizontal;\nexports.LucideSendHorizontal = SendHorizontal;\nexports.LucideSendToBack = SendToBack;\nexports.LucideSeparatorHorizontal = SeparatorHorizontal;\nexports.LucideSeparatorVertical = SeparatorVertical;\nexports.LucideServer = Server;\nexports.LucideServerCog = ServerCog;\nexports.LucideServerCrash = ServerCrash;\nexports.LucideServerOff = ServerOff;\nexports.LucideSettings = Settings;\nexports.LucideSettings2 = Settings2;\nexports.LucideShapes = Shapes;\nexports.LucideShare = Share;\nexports.LucideShare2 = Share2;\nexports.LucideSheet = Sheet;\nexports.LucideShell = Shell;\nexports.LucideShield = Shield;\nexports.LucideShieldAlert = ShieldAlert;\nexports.LucideShieldBan = ShieldBan;\nexports.LucideShieldCheck = ShieldCheck;\nexports.LucideShieldClose = ShieldX;\nexports.LucideShieldEllipsis = ShieldEllipsis;\nexports.LucideShieldHalf = ShieldHalf;\nexports.LucideShieldMinus = ShieldMinus;\nexports.LucideShieldOff = ShieldOff;\nexports.LucideShieldPlus = ShieldPlus;\nexports.LucideShieldQuestion = ShieldQuestion;\nexports.LucideShieldX = ShieldX;\nexports.LucideShip = Ship;\nexports.LucideShipWheel = ShipWheel;\nexports.LucideShirt = Shirt;\nexports.LucideShoppingBag = ShoppingBag;\nexports.LucideShoppingBasket = ShoppingBasket;\nexports.LucideShoppingCart = ShoppingCart;\nexports.LucideShovel = Shovel;\nexports.LucideShowerHead = ShowerHead;\nexports.LucideShrink = Shrink;\nexports.LucideShrub = Shrub;\nexports.LucideShuffle = Shuffle;\nexports.LucideSidebar = PanelLeft;\nexports.LucideSidebarClose = PanelLeftClose;\nexports.LucideSidebarOpen = PanelLeftOpen;\nexports.LucideSigma = Sigma;\nexports.LucideSigmaSquare = SigmaSquare;\nexports.LucideSignal = Signal;\nexports.LucideSignalHigh = SignalHigh;\nexports.LucideSignalLow = SignalLow;\nexports.LucideSignalMedium = SignalMedium;\nexports.LucideSignalZero = SignalZero;\nexports.LucideSiren = Siren;\nexports.LucideSkipBack = SkipBack;\nexports.LucideSkipForward = SkipForward;\nexports.LucideSkull = Skull;\nexports.LucideSlack = Slack;\nexports.LucideSlash = Slash;\nexports.LucideSlice = Slice;\nexports.LucideSliders = Sliders;\nexports.LucideSlidersHorizontal = SlidersHorizontal;\nexports.LucideSmartphone = Smartphone;\nexports.LucideSmartphoneCharging = SmartphoneCharging;\nexports.LucideSmartphoneNfc = SmartphoneNfc;\nexports.LucideSmile = Smile;\nexports.LucideSmilePlus = SmilePlus;\nexports.LucideSnail = Snail;\nexports.LucideSnowflake = Snowflake;\nexports.LucideSofa = Sofa;\nexports.LucideSortAsc = ArrowUpNarrowWide;\nexports.LucideSortDesc = ArrowDownWideNarrow;\nexports.LucideSoup = Soup;\nexports.LucideSpace = Space;\nexports.LucideSpade = Spade;\nexports.LucideSparkle = Sparkle;\nexports.LucideSparkles = Sparkles;\nexports.LucideSpeaker = Speaker;\nexports.LucideSpellCheck = SpellCheck;\nexports.LucideSpellCheck2 = SpellCheck2;\nexports.LucideSpline = Spline;\nexports.LucideSplit = Split;\nexports.LucideSplitSquareHorizontal = SplitSquareHorizontal;\nexports.LucideSplitSquareVertical = SplitSquareVertical;\nexports.LucideSprayCan = SprayCan;\nexports.LucideSprout = Sprout;\nexports.LucideSquare = Square;\nexports.LucideSquareAsterisk = SquareAsterisk;\nexports.LucideSquareCode = SquareCode;\nexports.LucideSquareDashedBottom = SquareDashedBottom;\nexports.LucideSquareDashedBottomCode = SquareDashedBottomCode;\nexports.LucideSquareDot = SquareDot;\nexports.LucideSquareEqual = SquareEqual;\nexports.LucideSquareGantt = GanttChartSquare;\nexports.LucideSquareKanban = KanbanSquare;\nexports.LucideSquareKanbanDashed = KanbanSquareDashed;\nexports.LucideSquareSlash = SquareSlash;\nexports.LucideSquareStack = SquareStack;\nexports.LucideSquirrel = Squirrel;\nexports.LucideStamp = Stamp;\nexports.LucideStar = Star;\nexports.LucideStarHalf = StarHalf;\nexports.LucideStarOff = StarOff;\nexports.LucideStars = Sparkles;\nexports.LucideStepBack = StepBack;\nexports.LucideStepForward = StepForward;\nexports.LucideStethoscope = Stethoscope;\nexports.LucideSticker = Sticker;\nexports.LucideStickyNote = StickyNote;\nexports.LucideStopCircle = StopCircle;\nexports.LucideStore = Store;\nexports.LucideStretchHorizontal = StretchHorizontal;\nexports.LucideStretchVertical = StretchVertical;\nexports.LucideStrikethrough = Strikethrough;\nexports.LucideSubscript = Subscript;\nexports.LucideSubtitles = Subtitles;\nexports.LucideSun = Sun;\nexports.LucideSunDim = SunDim;\nexports.LucideSunMedium = SunMedium;\nexports.LucideSunMoon = SunMoon;\nexports.LucideSunSnow = SunSnow;\nexports.LucideSunrise = Sunrise;\nexports.LucideSunset = Sunset;\nexports.LucideSuperscript = Superscript;\nexports.LucideSwissFranc = SwissFranc;\nexports.LucideSwitchCamera = SwitchCamera;\nexports.LucideSword = Sword;\nexports.LucideSwords = Swords;\nexports.LucideSyringe = Syringe;\nexports.LucideTable = Table;\nexports.LucideTable2 = Table2;\nexports.LucideTableProperties = TableProperties;\nexports.LucideTablet = Tablet;\nexports.LucideTabletSmartphone = TabletSmartphone;\nexports.LucideTablets = Tablets;\nexports.LucideTag = Tag;\nexports.LucideTags = Tags;\nexports.LucideTally1 = Tally1;\nexports.LucideTally2 = Tally2;\nexports.LucideTally3 = Tally3;\nexports.LucideTally4 = Tally4;\nexports.LucideTally5 = Tally5;\nexports.LucideTarget = Target;\nexports.LucideTent = Tent;\nexports.LucideTerminal = Terminal;\nexports.LucideTerminalSquare = TerminalSquare;\nexports.LucideTestTube = TestTube;\nexports.LucideTestTube2 = TestTube2;\nexports.LucideTestTubes = TestTubes;\nexports.LucideText = Text;\nexports.LucideTextCursor = TextCursor;\nexports.LucideTextCursorInput = TextCursorInput;\nexports.LucideTextQuote = TextQuote;\nexports.LucideTextSelect = TextSelect;\nexports.LucideTextSelection = TextSelect;\nexports.LucideThermometer = Thermometer;\nexports.LucideThermometerSnowflake = ThermometerSnowflake;\nexports.LucideThermometerSun = ThermometerSun;\nexports.LucideThumbsDown = ThumbsDown;\nexports.LucideThumbsUp = ThumbsUp;\nexports.LucideTicket = Ticket;\nexports.LucideTimer = Timer;\nexports.LucideTimerOff = TimerOff;\nexports.LucideTimerReset = TimerReset;\nexports.LucideToggleLeft = ToggleLeft;\nexports.LucideToggleRight = ToggleRight;\nexports.LucideTornado = Tornado;\nexports.LucideTouchpad = Touchpad;\nexports.LucideTouchpadOff = TouchpadOff;\nexports.LucideTowerControl = TowerControl;\nexports.LucideToyBrick = ToyBrick;\nexports.LucideTractor = Tractor;\nexports.LucideTrafficCone = TrafficCone;\nexports.LucideTrain = TramFront;\nexports.LucideTrainFront = TrainFront;\nexports.LucideTrainFrontTunnel = TrainFrontTunnel;\nexports.LucideTrainTrack = TrainTrack;\nexports.LucideTramFront = TramFront;\nexports.LucideTrash = Trash;\nexports.LucideTrash2 = Trash2;\nexports.LucideTreeDeciduous = TreeDeciduous;\nexports.LucideTreePine = TreePine;\nexports.LucideTrees = Trees;\nexports.LucideTrello = Trello;\nexports.LucideTrendingDown = TrendingDown;\nexports.LucideTrendingUp = TrendingUp;\nexports.LucideTriangle = Triangle;\nexports.LucideTriangleRight = TriangleRight;\nexports.LucideTrophy = Trophy;\nexports.LucideTruck = Truck;\nexports.LucideTurtle = Turtle;\nexports.LucideTv = Tv;\nexports.LucideTv2 = Tv2;\nexports.LucideTwitch = Twitch;\nexports.LucideTwitter = Twitter;\nexports.LucideType = Type;\nexports.LucideUmbrella = Umbrella;\nexports.LucideUnderline = Underline;\nexports.LucideUndo = Undo;\nexports.LucideUndo2 = Undo2;\nexports.LucideUndoDot = UndoDot;\nexports.LucideUnfoldHorizontal = UnfoldHorizontal;\nexports.LucideUnfoldVertical = UnfoldVertical;\nexports.LucideUngroup = Ungroup;\nexports.LucideUnlink = Unlink;\nexports.LucideUnlink2 = Unlink2;\nexports.LucideUnlock = Unlock;\nexports.LucideUnplug = Unplug;\nexports.LucideUpload = Upload;\nexports.LucideUploadCloud = UploadCloud;\nexports.LucideUsb = Usb;\nexports.LucideUser = User;\nexports.LucideUser2 = User2;\nexports.LucideUserCheck = UserCheck;\nexports.LucideUserCheck2 = UserCheck2;\nexports.LucideUserCircle = UserCircle;\nexports.LucideUserCircle2 = UserCircle2;\nexports.LucideUserCog = UserCog;\nexports.LucideUserCog2 = UserCog2;\nexports.LucideUserMinus = UserMinus;\nexports.LucideUserMinus2 = UserMinus2;\nexports.LucideUserPlus = UserPlus;\nexports.LucideUserPlus2 = UserPlus2;\nexports.LucideUserSquare = UserSquare;\nexports.LucideUserSquare2 = UserSquare2;\nexports.LucideUserX = UserX;\nexports.LucideUserX2 = UserX2;\nexports.LucideUsers = Users;\nexports.LucideUsers2 = Users2;\nexports.LucideUtensils = Utensils;\nexports.LucideUtensilsCrossed = UtensilsCrossed;\nexports.LucideUtilityPole = UtilityPole;\nexports.LucideVariable = Variable;\nexports.LucideVegan = Vegan;\nexports.LucideVenetianMask = VenetianMask;\nexports.LucideVerified = BadgeCheck;\nexports.LucideVibrate = Vibrate;\nexports.LucideVibrateOff = VibrateOff;\nexports.LucideVideo = Video;\nexports.LucideVideoOff = VideoOff;\nexports.LucideVideotape = Videotape;\nexports.LucideView = View;\nexports.LucideVoicemail = Voicemail;\nexports.LucideVolume = Volume;\nexports.LucideVolume1 = Volume1;\nexports.LucideVolume2 = Volume2;\nexports.LucideVolumeX = VolumeX;\nexports.LucideVote = Vote;\nexports.LucideWallet = Wallet;\nexports.LucideWallet2 = Wallet2;\nexports.LucideWalletCards = WalletCards;\nexports.LucideWallpaper = Wallpaper;\nexports.LucideWand = Wand;\nexports.LucideWand2 = Wand2;\nexports.LucideWarehouse = Warehouse;\nexports.LucideWatch = Watch;\nexports.LucideWaves = Waves;\nexports.LucideWebcam = Webcam;\nexports.LucideWebhook = Webhook;\nexports.LucideWheat = Wheat;\nexports.LucideWheatOff = WheatOff;\nexports.LucideWholeWord = WholeWord;\nexports.LucideWifi = Wifi;\nexports.LucideWifiOff = WifiOff;\nexports.LucideWind = Wind;\nexports.LucideWine = Wine;\nexports.LucideWineOff = WineOff;\nexports.LucideWorkflow = Workflow;\nexports.LucideWrapText = WrapText;\nexports.LucideWrench = Wrench;\nexports.LucideX = X;\nexports.LucideXCircle = XCircle;\nexports.LucideXOctagon = XOctagon;\nexports.LucideXSquare = XSquare;\nexports.LucideYoutube = Youtube;\nexports.LucideZap = Zap;\nexports.LucideZapOff = ZapOff;\nexports.LucideZoomIn = ZoomIn;\nexports.LucideZoomOut = ZoomOut;\nexports.Luggage = Luggage;\nexports.LuggageIcon = Luggage;\nexports.MSquare = MSquare;\nexports.MSquareIcon = MSquare;\nexports.Magnet = Magnet;\nexports.MagnetIcon = Magnet;\nexports.Mail = Mail;\nexports.MailCheck = MailCheck;\nexports.MailCheckIcon = MailCheck;\nexports.MailIcon = Mail;\nexports.MailMinus = MailMinus;\nexports.MailMinusIcon = MailMinus;\nexports.MailOpen = MailOpen;\nexports.MailOpenIcon = MailOpen;\nexports.MailPlus = MailPlus;\nexports.MailPlusIcon = MailPlus;\nexports.MailQuestion = MailQuestion;\nexports.MailQuestionIcon = MailQuestion;\nexports.MailSearch = MailSearch;\nexports.MailSearchIcon = MailSearch;\nexports.MailWarning = MailWarning;\nexports.MailWarningIcon = MailWarning;\nexports.MailX = MailX;\nexports.MailXIcon = MailX;\nexports.Mailbox = Mailbox;\nexports.MailboxIcon = Mailbox;\nexports.Mails = Mails;\nexports.MailsIcon = Mails;\nexports.Map = Map;\nexports.MapIcon = Map;\nexports.MapPin = MapPin;\nexports.MapPinIcon = MapPin;\nexports.MapPinOff = MapPinOff;\nexports.MapPinOffIcon = MapPinOff;\nexports.Martini = Martini;\nexports.MartiniIcon = Martini;\nexports.Maximize = Maximize;\nexports.Maximize2 = Maximize2;\nexports.Maximize2Icon = Maximize2;\nexports.MaximizeIcon = Maximize;\nexports.Medal = Medal;\nexports.MedalIcon = Medal;\nexports.Megaphone = Megaphone;\nexports.MegaphoneIcon = Megaphone;\nexports.MegaphoneOff = MegaphoneOff;\nexports.MegaphoneOffIcon = MegaphoneOff;\nexports.Meh = Meh;\nexports.MehIcon = Meh;\nexports.MemoryStick = MemoryStick;\nexports.MemoryStickIcon = MemoryStick;\nexports.Menu = Menu;\nexports.MenuIcon = Menu;\nexports.MenuSquare = MenuSquare;\nexports.MenuSquareIcon = MenuSquare;\nexports.Merge = Merge;\nexports.MergeIcon = Merge;\nexports.MessageCircle = MessageCircle;\nexports.MessageCircleIcon = MessageCircle;\nexports.MessageSquare = MessageSquare;\nexports.MessageSquareDashed = MessageSquareDashed;\nexports.MessageSquareDashedIcon = MessageSquareDashed;\nexports.MessageSquareIcon = MessageSquare;\nexports.MessageSquarePlus = MessageSquarePlus;\nexports.MessageSquarePlusIcon = MessageSquarePlus;\nexports.MessagesSquare = MessagesSquare;\nexports.MessagesSquareIcon = MessagesSquare;\nexports.Mic = Mic;\nexports.Mic2 = Mic2;\nexports.Mic2Icon = Mic2;\nexports.MicIcon = Mic;\nexports.MicOff = MicOff;\nexports.MicOffIcon = MicOff;\nexports.Microscope = Microscope;\nexports.MicroscopeIcon = Microscope;\nexports.Microwave = Microwave;\nexports.MicrowaveIcon = Microwave;\nexports.Milestone = Milestone;\nexports.MilestoneIcon = Milestone;\nexports.Milk = Milk;\nexports.MilkIcon = Milk;\nexports.MilkOff = MilkOff;\nexports.MilkOffIcon = MilkOff;\nexports.Minimize = Minimize;\nexports.Minimize2 = Minimize2;\nexports.Minimize2Icon = Minimize2;\nexports.MinimizeIcon = Minimize;\nexports.Minus = Minus;\nexports.MinusCircle = MinusCircle;\nexports.MinusCircleIcon = MinusCircle;\nexports.MinusIcon = Minus;\nexports.MinusSquare = MinusSquare;\nexports.MinusSquareIcon = MinusSquare;\nexports.Monitor = Monitor;\nexports.MonitorCheck = MonitorCheck;\nexports.MonitorCheckIcon = MonitorCheck;\nexports.MonitorDot = MonitorDot;\nexports.MonitorDotIcon = MonitorDot;\nexports.MonitorDown = MonitorDown;\nexports.MonitorDownIcon = MonitorDown;\nexports.MonitorIcon = Monitor;\nexports.MonitorOff = MonitorOff;\nexports.MonitorOffIcon = MonitorOff;\nexports.MonitorPause = MonitorPause;\nexports.MonitorPauseIcon = MonitorPause;\nexports.MonitorPlay = MonitorPlay;\nexports.MonitorPlayIcon = MonitorPlay;\nexports.MonitorSmartphone = MonitorSmartphone;\nexports.MonitorSmartphoneIcon = MonitorSmartphone;\nexports.MonitorSpeaker = MonitorSpeaker;\nexports.MonitorSpeakerIcon = MonitorSpeaker;\nexports.MonitorStop = MonitorStop;\nexports.MonitorStopIcon = MonitorStop;\nexports.MonitorUp = MonitorUp;\nexports.MonitorUpIcon = MonitorUp;\nexports.MonitorX = MonitorX;\nexports.MonitorXIcon = MonitorX;\nexports.Moon = Moon;\nexports.MoonIcon = Moon;\nexports.MoonStar = MoonStar;\nexports.MoonStarIcon = MoonStar;\nexports.MoreHorizontal = MoreHorizontal;\nexports.MoreHorizontalIcon = MoreHorizontal;\nexports.MoreVertical = MoreVertical;\nexports.MoreVerticalIcon = MoreVertical;\nexports.Mountain = Mountain;\nexports.MountainIcon = Mountain;\nexports.MountainSnow = MountainSnow;\nexports.MountainSnowIcon = MountainSnow;\nexports.Mouse = Mouse;\nexports.MouseIcon = Mouse;\nexports.MousePointer = MousePointer;\nexports.MousePointer2 = MousePointer2;\nexports.MousePointer2Icon = MousePointer2;\nexports.MousePointerClick = MousePointerClick;\nexports.MousePointerClickIcon = MousePointerClick;\nexports.MousePointerIcon = MousePointer;\nexports.MousePointerSquare = MousePointerSquare;\nexports.MousePointerSquareDashed = MousePointerSquareDashed;\nexports.MousePointerSquareDashedIcon = MousePointerSquareDashed;\nexports.MousePointerSquareIcon = MousePointerSquare;\nexports.Move = Move;\nexports.Move3D = Move3d;\nexports.Move3DIcon = Move3d;\nexports.Move3d = Move3d;\nexports.Move3dIcon = Move3d;\nexports.MoveDiagonal = MoveDiagonal;\nexports.MoveDiagonal2 = MoveDiagonal2;\nexports.MoveDiagonal2Icon = MoveDiagonal2;\nexports.MoveDiagonalIcon = MoveDiagonal;\nexports.MoveDown = MoveDown;\nexports.MoveDownIcon = MoveDown;\nexports.MoveDownLeft = MoveDownLeft;\nexports.MoveDownLeftIcon = MoveDownLeft;\nexports.MoveDownRight = MoveDownRight;\nexports.MoveDownRightIcon = MoveDownRight;\nexports.MoveHorizontal = MoveHorizontal;\nexports.MoveHorizontalIcon = MoveHorizontal;\nexports.MoveIcon = Move;\nexports.MoveLeft = MoveLeft;\nexports.MoveLeftIcon = MoveLeft;\nexports.MoveRight = MoveRight;\nexports.MoveRightIcon = MoveRight;\nexports.MoveUp = MoveUp;\nexports.MoveUpIcon = MoveUp;\nexports.MoveUpLeft = MoveUpLeft;\nexports.MoveUpLeftIcon = MoveUpLeft;\nexports.MoveUpRight = MoveUpRight;\nexports.MoveUpRightIcon = MoveUpRight;\nexports.MoveVertical = MoveVertical;\nexports.MoveVerticalIcon = MoveVertical;\nexports.Music = Music;\nexports.Music2 = Music2;\nexports.Music2Icon = Music2;\nexports.Music3 = Music3;\nexports.Music3Icon = Music3;\nexports.Music4 = Music4;\nexports.Music4Icon = Music4;\nexports.MusicIcon = Music;\nexports.Navigation = Navigation;\nexports.Navigation2 = Navigation2;\nexports.Navigation2Icon = Navigation2;\nexports.Navigation2Off = Navigation2Off;\nexports.Navigation2OffIcon = Navigation2Off;\nexports.NavigationIcon = Navigation;\nexports.NavigationOff = NavigationOff;\nexports.NavigationOffIcon = NavigationOff;\nexports.Network = Network;\nexports.NetworkIcon = Network;\nexports.Newspaper = Newspaper;\nexports.NewspaperIcon = Newspaper;\nexports.Nfc = Nfc;\nexports.NfcIcon = Nfc;\nexports.Nut = Nut;\nexports.NutIcon = Nut;\nexports.NutOff = NutOff;\nexports.NutOffIcon = NutOff;\nexports.Octagon = Octagon;\nexports.OctagonIcon = Octagon;\nexports.Option = Option;\nexports.OptionIcon = Option;\nexports.Orbit = Orbit;\nexports.OrbitIcon = Orbit;\nexports.Outdent = Outdent;\nexports.OutdentIcon = Outdent;\nexports.Package = Package;\nexports.Package2 = Package2;\nexports.Package2Icon = Package2;\nexports.PackageCheck = PackageCheck;\nexports.PackageCheckIcon = PackageCheck;\nexports.PackageIcon = Package;\nexports.PackageMinus = PackageMinus;\nexports.PackageMinusIcon = PackageMinus;\nexports.PackageOpen = PackageOpen;\nexports.PackageOpenIcon = PackageOpen;\nexports.PackagePlus = PackagePlus;\nexports.PackagePlusIcon = PackagePlus;\nexports.PackageSearch = PackageSearch;\nexports.PackageSearchIcon = PackageSearch;\nexports.PackageX = PackageX;\nexports.PackageXIcon = PackageX;\nexports.PaintBucket = PaintBucket;\nexports.PaintBucketIcon = PaintBucket;\nexports.Paintbrush = Paintbrush;\nexports.Paintbrush2 = Paintbrush2;\nexports.Paintbrush2Icon = Paintbrush2;\nexports.PaintbrushIcon = Paintbrush;\nexports.Palette = Palette;\nexports.PaletteIcon = Palette;\nexports.Palmtree = Palmtree;\nexports.PalmtreeIcon = Palmtree;\nexports.PanelBottom = PanelBottom;\nexports.PanelBottomClose = PanelBottomClose;\nexports.PanelBottomCloseIcon = PanelBottomClose;\nexports.PanelBottomIcon = PanelBottom;\nexports.PanelBottomInactive = PanelBottomInactive;\nexports.PanelBottomInactiveIcon = PanelBottomInactive;\nexports.PanelBottomOpen = PanelBottomOpen;\nexports.PanelBottomOpenIcon = PanelBottomOpen;\nexports.PanelLeft = PanelLeft;\nexports.PanelLeftClose = PanelLeftClose;\nexports.PanelLeftCloseIcon = PanelLeftClose;\nexports.PanelLeftIcon = PanelLeft;\nexports.PanelLeftInactive = PanelLeftInactive;\nexports.PanelLeftInactiveIcon = PanelLeftInactive;\nexports.PanelLeftOpen = PanelLeftOpen;\nexports.PanelLeftOpenIcon = PanelLeftOpen;\nexports.PanelRight = PanelRight;\nexports.PanelRightClose = PanelRightClose;\nexports.PanelRightCloseIcon = PanelRightClose;\nexports.PanelRightIcon = PanelRight;\nexports.PanelRightInactive = PanelRightInactive;\nexports.PanelRightInactiveIcon = PanelRightInactive;\nexports.PanelRightOpen = PanelRightOpen;\nexports.PanelRightOpenIcon = PanelRightOpen;\nexports.PanelTop = PanelTop;\nexports.PanelTopClose = PanelTopClose;\nexports.PanelTopCloseIcon = PanelTopClose;\nexports.PanelTopIcon = PanelTop;\nexports.PanelTopInactive = PanelTopInactive;\nexports.PanelTopInactiveIcon = PanelTopInactive;\nexports.PanelTopOpen = PanelTopOpen;\nexports.PanelTopOpenIcon = PanelTopOpen;\nexports.Paperclip = Paperclip;\nexports.PaperclipIcon = Paperclip;\nexports.Parentheses = Parentheses;\nexports.ParenthesesIcon = Parentheses;\nexports.ParkingCircle = ParkingCircle;\nexports.ParkingCircleIcon = ParkingCircle;\nexports.ParkingCircleOff = ParkingCircleOff;\nexports.ParkingCircleOffIcon = ParkingCircleOff;\nexports.ParkingMeter = ParkingMeter;\nexports.ParkingMeterIcon = ParkingMeter;\nexports.ParkingSquare = ParkingSquare;\nexports.ParkingSquareIcon = ParkingSquare;\nexports.ParkingSquareOff = ParkingSquareOff;\nexports.ParkingSquareOffIcon = ParkingSquareOff;\nexports.PartyPopper = PartyPopper;\nexports.PartyPopperIcon = PartyPopper;\nexports.Pause = Pause;\nexports.PauseCircle = PauseCircle;\nexports.PauseCircleIcon = PauseCircle;\nexports.PauseIcon = Pause;\nexports.PauseOctagon = PauseOctagon;\nexports.PauseOctagonIcon = PauseOctagon;\nexports.PawPrint = PawPrint;\nexports.PawPrintIcon = PawPrint;\nexports.PcCase = PcCase;\nexports.PcCaseIcon = PcCase;\nexports.Pen = Pen;\nexports.PenBox = PenSquare;\nexports.PenBoxIcon = PenSquare;\nexports.PenIcon = Pen;\nexports.PenLine = PenLine;\nexports.PenLineIcon = PenLine;\nexports.PenSquare = PenSquare;\nexports.PenSquareIcon = PenSquare;\nexports.PenTool = PenTool;\nexports.PenToolIcon = PenTool;\nexports.Pencil = Pencil;\nexports.PencilIcon = Pencil;\nexports.PencilLine = PencilLine;\nexports.PencilLineIcon = PencilLine;\nexports.PencilRuler = PencilRuler;\nexports.PencilRulerIcon = PencilRuler;\nexports.Percent = Percent;\nexports.PercentCircle = PercentCircle;\nexports.PercentCircleIcon = PercentCircle;\nexports.PercentDiamond = PercentDiamond;\nexports.PercentDiamondIcon = PercentDiamond;\nexports.PercentIcon = Percent;\nexports.PercentSquare = PercentSquare;\nexports.PercentSquareIcon = PercentSquare;\nexports.PersonStanding = PersonStanding;\nexports.PersonStandingIcon = PersonStanding;\nexports.Phone = Phone;\nexports.PhoneCall = PhoneCall;\nexports.PhoneCallIcon = PhoneCall;\nexports.PhoneForwarded = PhoneForwarded;\nexports.PhoneForwardedIcon = PhoneForwarded;\nexports.PhoneIcon = Phone;\nexports.PhoneIncoming = PhoneIncoming;\nexports.PhoneIncomingIcon = PhoneIncoming;\nexports.PhoneMissed = PhoneMissed;\nexports.PhoneMissedIcon = PhoneMissed;\nexports.PhoneOff = PhoneOff;\nexports.PhoneOffIcon = PhoneOff;\nexports.PhoneOutgoing = PhoneOutgoing;\nexports.PhoneOutgoingIcon = PhoneOutgoing;\nexports.Pi = Pi;\nexports.PiIcon = Pi;\nexports.PiSquare = PiSquare;\nexports.PiSquareIcon = PiSquare;\nexports.PictureInPicture = PictureInPicture;\nexports.PictureInPicture2 = PictureInPicture2;\nexports.PictureInPicture2Icon = PictureInPicture2;\nexports.PictureInPictureIcon = PictureInPicture;\nexports.PieChart = PieChart;\nexports.PieChartIcon = PieChart;\nexports.PiggyBank = PiggyBank;\nexports.PiggyBankIcon = PiggyBank;\nexports.Pilcrow = Pilcrow;\nexports.PilcrowIcon = Pilcrow;\nexports.PilcrowSquare = PilcrowSquare;\nexports.PilcrowSquareIcon = PilcrowSquare;\nexports.Pill = Pill;\nexports.PillIcon = Pill;\nexports.Pin = Pin;\nexports.PinIcon = Pin;\nexports.PinOff = PinOff;\nexports.PinOffIcon = PinOff;\nexports.Pipette = Pipette;\nexports.PipetteIcon = Pipette;\nexports.Pizza = Pizza;\nexports.PizzaIcon = Pizza;\nexports.Plane = Plane;\nexports.PlaneIcon = Plane;\nexports.PlaneLanding = PlaneLanding;\nexports.PlaneLandingIcon = PlaneLanding;\nexports.PlaneTakeoff = PlaneTakeoff;\nexports.PlaneTakeoffIcon = PlaneTakeoff;\nexports.Play = Play;\nexports.PlayCircle = PlayCircle;\nexports.PlayCircleIcon = PlayCircle;\nexports.PlayIcon = Play;\nexports.PlaySquare = PlaySquare;\nexports.PlaySquareIcon = PlaySquare;\nexports.Plug = Plug;\nexports.Plug2 = Plug2;\nexports.Plug2Icon = Plug2;\nexports.PlugIcon = Plug;\nexports.PlugZap = PlugZap;\nexports.PlugZap2 = PlugZap2;\nexports.PlugZap2Icon = PlugZap2;\nexports.PlugZapIcon = PlugZap;\nexports.Plus = Plus;\nexports.PlusCircle = PlusCircle;\nexports.PlusCircleIcon = PlusCircle;\nexports.PlusIcon = Plus;\nexports.PlusSquare = PlusSquare;\nexports.PlusSquareIcon = PlusSquare;\nexports.Pocket = Pocket;\nexports.PocketIcon = Pocket;\nexports.PocketKnife = PocketKnife;\nexports.PocketKnifeIcon = PocketKnife;\nexports.Podcast = Podcast;\nexports.PodcastIcon = Podcast;\nexports.Pointer = Pointer;\nexports.PointerIcon = Pointer;\nexports.Popcorn = Popcorn;\nexports.PopcornIcon = Popcorn;\nexports.Popsicle = Popsicle;\nexports.PopsicleIcon = Popsicle;\nexports.PoundSterling = PoundSterling;\nexports.PoundSterlingIcon = PoundSterling;\nexports.Power = Power;\nexports.PowerIcon = Power;\nexports.PowerOff = PowerOff;\nexports.PowerOffIcon = PowerOff;\nexports.Presentation = Presentation;\nexports.PresentationIcon = Presentation;\nexports.Printer = Printer;\nexports.PrinterIcon = Printer;\nexports.Projector = Projector;\nexports.ProjectorIcon = Projector;\nexports.Puzzle = Puzzle;\nexports.PuzzleIcon = Puzzle;\nexports.QrCode = QrCode;\nexports.QrCodeIcon = QrCode;\nexports.Quote = Quote;\nexports.QuoteIcon = Quote;\nexports.Rabbit = Rabbit;\nexports.RabbitIcon = Rabbit;\nexports.Radar = Radar;\nexports.RadarIcon = Radar;\nexports.Radiation = Radiation;\nexports.RadiationIcon = Radiation;\nexports.Radio = Radio;\nexports.RadioIcon = Radio;\nexports.RadioReceiver = RadioReceiver;\nexports.RadioReceiverIcon = RadioReceiver;\nexports.RadioTower = RadioTower;\nexports.RadioTowerIcon = RadioTower;\nexports.RailSymbol = RailSymbol;\nexports.RailSymbolIcon = RailSymbol;\nexports.Rainbow = Rainbow;\nexports.RainbowIcon = Rainbow;\nexports.Rat = Rat;\nexports.RatIcon = Rat;\nexports.Ratio = Ratio;\nexports.RatioIcon = Ratio;\nexports.Receipt = Receipt;\nexports.ReceiptIcon = Receipt;\nexports.RectangleHorizontal = RectangleHorizontal;\nexports.RectangleHorizontalIcon = RectangleHorizontal;\nexports.RectangleVertical = RectangleVertical;\nexports.RectangleVerticalIcon = RectangleVertical;\nexports.Recycle = Recycle;\nexports.RecycleIcon = Recycle;\nexports.Redo = Redo;\nexports.Redo2 = Redo2;\nexports.Redo2Icon = Redo2;\nexports.RedoDot = RedoDot;\nexports.RedoDotIcon = RedoDot;\nexports.RedoIcon = Redo;\nexports.RefreshCcw = RefreshCcw;\nexports.RefreshCcwDot = RefreshCcwDot;\nexports.RefreshCcwDotIcon = RefreshCcwDot;\nexports.RefreshCcwIcon = RefreshCcw;\nexports.RefreshCw = RefreshCw;\nexports.RefreshCwIcon = RefreshCw;\nexports.RefreshCwOff = RefreshCwOff;\nexports.RefreshCwOffIcon = RefreshCwOff;\nexports.Refrigerator = Refrigerator;\nexports.RefrigeratorIcon = Refrigerator;\nexports.Regex = Regex;\nexports.RegexIcon = Regex;\nexports.RemoveFormatting = RemoveFormatting;\nexports.RemoveFormattingIcon = RemoveFormatting;\nexports.Repeat = Repeat;\nexports.Repeat1 = Repeat1;\nexports.Repeat1Icon = Repeat1;\nexports.Repeat2 = Repeat2;\nexports.Repeat2Icon = Repeat2;\nexports.RepeatIcon = Repeat;\nexports.Replace = Replace;\nexports.ReplaceAll = ReplaceAll;\nexports.ReplaceAllIcon = ReplaceAll;\nexports.ReplaceIcon = Replace;\nexports.Reply = Reply;\nexports.ReplyAll = ReplyAll;\nexports.ReplyAllIcon = ReplyAll;\nexports.ReplyIcon = Reply;\nexports.Rewind = Rewind;\nexports.RewindIcon = Rewind;\nexports.Rocket = Rocket;\nexports.RocketIcon = Rocket;\nexports.RockingChair = RockingChair;\nexports.RockingChairIcon = RockingChair;\nexports.RollerCoaster = RollerCoaster;\nexports.RollerCoasterIcon = RollerCoaster;\nexports.Rotate3D = Rotate3d;\nexports.Rotate3DIcon = Rotate3d;\nexports.Rotate3d = Rotate3d;\nexports.Rotate3dIcon = Rotate3d;\nexports.RotateCcw = RotateCcw;\nexports.RotateCcwIcon = RotateCcw;\nexports.RotateCw = RotateCw;\nexports.RotateCwIcon = RotateCw;\nexports.Router = Router;\nexports.RouterIcon = Router;\nexports.Rows = Rows;\nexports.RowsIcon = Rows;\nexports.Rss = Rss;\nexports.RssIcon = Rss;\nexports.Ruler = Ruler;\nexports.RulerIcon = Ruler;\nexports.RussianRuble = RussianRuble;\nexports.RussianRubleIcon = RussianRuble;\nexports.Sailboat = Sailboat;\nexports.SailboatIcon = Sailboat;\nexports.Salad = Salad;\nexports.SaladIcon = Salad;\nexports.Sandwich = Sandwich;\nexports.SandwichIcon = Sandwich;\nexports.Satellite = Satellite;\nexports.SatelliteDish = SatelliteDish;\nexports.SatelliteDishIcon = SatelliteDish;\nexports.SatelliteIcon = Satellite;\nexports.Save = Save;\nexports.SaveAll = SaveAll;\nexports.SaveAllIcon = SaveAll;\nexports.SaveIcon = Save;\nexports.Scale = Scale;\nexports.Scale3D = Scale3d;\nexports.Scale3DIcon = Scale3d;\nexports.Scale3d = Scale3d;\nexports.Scale3dIcon = Scale3d;\nexports.ScaleIcon = Scale;\nexports.Scaling = Scaling;\nexports.ScalingIcon = Scaling;\nexports.Scan = Scan;\nexports.ScanFace = ScanFace;\nexports.ScanFaceIcon = ScanFace;\nexports.ScanIcon = Scan;\nexports.ScanLine = ScanLine;\nexports.ScanLineIcon = ScanLine;\nexports.ScatterChart = ScatterChart;\nexports.ScatterChartIcon = ScatterChart;\nexports.School = School;\nexports.School2 = School2;\nexports.School2Icon = School2;\nexports.SchoolIcon = School;\nexports.Scissors = Scissors;\nexports.ScissorsIcon = Scissors;\nexports.ScissorsLineDashed = ScissorsLineDashed;\nexports.ScissorsLineDashedIcon = ScissorsLineDashed;\nexports.ScissorsSquare = ScissorsSquare;\nexports.ScissorsSquareDashedBottom = ScissorsSquareDashedBottom;\nexports.ScissorsSquareDashedBottomIcon = ScissorsSquareDashedBottom;\nexports.ScissorsSquareIcon = ScissorsSquare;\nexports.ScreenShare = ScreenShare;\nexports.ScreenShareIcon = ScreenShare;\nexports.ScreenShareOff = ScreenShareOff;\nexports.ScreenShareOffIcon = ScreenShareOff;\nexports.Scroll = Scroll;\nexports.ScrollIcon = Scroll;\nexports.ScrollText = ScrollText;\nexports.ScrollTextIcon = ScrollText;\nexports.Search = Search;\nexports.SearchCheck = SearchCheck;\nexports.SearchCheckIcon = SearchCheck;\nexports.SearchCode = SearchCode;\nexports.SearchCodeIcon = SearchCode;\nexports.SearchIcon = Search;\nexports.SearchSlash = SearchSlash;\nexports.SearchSlashIcon = SearchSlash;\nexports.SearchX = SearchX;\nexports.SearchXIcon = SearchX;\nexports.Send = Send;\nexports.SendHorizonal = SendHorizontal;\nexports.SendHorizonalIcon = SendHorizontal;\nexports.SendHorizontal = SendHorizontal;\nexports.SendHorizontalIcon = SendHorizontal;\nexports.SendIcon = Send;\nexports.SendToBack = SendToBack;\nexports.SendToBackIcon = SendToBack;\nexports.SeparatorHorizontal = SeparatorHorizontal;\nexports.SeparatorHorizontalIcon = SeparatorHorizontal;\nexports.SeparatorVertical = SeparatorVertical;\nexports.SeparatorVerticalIcon = SeparatorVertical;\nexports.Server = Server;\nexports.ServerCog = ServerCog;\nexports.ServerCogIcon = ServerCog;\nexports.ServerCrash = ServerCrash;\nexports.ServerCrashIcon = ServerCrash;\nexports.ServerIcon = Server;\nexports.ServerOff = ServerOff;\nexports.ServerOffIcon = ServerOff;\nexports.Settings = Settings;\nexports.Settings2 = Settings2;\nexports.Settings2Icon = Settings2;\nexports.SettingsIcon = Settings;\nexports.Shapes = Shapes;\nexports.ShapesIcon = Shapes;\nexports.Share = Share;\nexports.Share2 = Share2;\nexports.Share2Icon = Share2;\nexports.ShareIcon = Share;\nexports.Sheet = Sheet;\nexports.SheetIcon = Sheet;\nexports.Shell = Shell;\nexports.ShellIcon = Shell;\nexports.Shield = Shield;\nexports.ShieldAlert = ShieldAlert;\nexports.ShieldAlertIcon = ShieldAlert;\nexports.ShieldBan = ShieldBan;\nexports.ShieldBanIcon = ShieldBan;\nexports.ShieldCheck = ShieldCheck;\nexports.ShieldCheckIcon = ShieldCheck;\nexports.ShieldClose = ShieldX;\nexports.ShieldCloseIcon = ShieldX;\nexports.ShieldEllipsis = ShieldEllipsis;\nexports.ShieldEllipsisIcon = ShieldEllipsis;\nexports.ShieldHalf = ShieldHalf;\nexports.ShieldHalfIcon = ShieldHalf;\nexports.ShieldIcon = Shield;\nexports.ShieldMinus = ShieldMinus;\nexports.ShieldMinusIcon = ShieldMinus;\nexports.ShieldOff = ShieldOff;\nexports.ShieldOffIcon = ShieldOff;\nexports.ShieldPlus = ShieldPlus;\nexports.ShieldPlusIcon = ShieldPlus;\nexports.ShieldQuestion = ShieldQuestion;\nexports.ShieldQuestionIcon = ShieldQuestion;\nexports.ShieldX = ShieldX;\nexports.ShieldXIcon = ShieldX;\nexports.Ship = Ship;\nexports.ShipIcon = Ship;\nexports.ShipWheel = ShipWheel;\nexports.ShipWheelIcon = ShipWheel;\nexports.Shirt = Shirt;\nexports.ShirtIcon = Shirt;\nexports.ShoppingBag = ShoppingBag;\nexports.ShoppingBagIcon = ShoppingBag;\nexports.ShoppingBasket = ShoppingBasket;\nexports.ShoppingBasketIcon = ShoppingBasket;\nexports.ShoppingCart = ShoppingCart;\nexports.ShoppingCartIcon = ShoppingCart;\nexports.Shovel = Shovel;\nexports.ShovelIcon = Shovel;\nexports.ShowerHead = ShowerHead;\nexports.ShowerHeadIcon = ShowerHead;\nexports.Shrink = Shrink;\nexports.ShrinkIcon = Shrink;\nexports.Shrub = Shrub;\nexports.ShrubIcon = Shrub;\nexports.Shuffle = Shuffle;\nexports.ShuffleIcon = Shuffle;\nexports.Sidebar = PanelLeft;\nexports.SidebarClose = PanelLeftClose;\nexports.SidebarCloseIcon = PanelLeftClose;\nexports.SidebarIcon = PanelLeft;\nexports.SidebarOpen = PanelLeftOpen;\nexports.SidebarOpenIcon = PanelLeftOpen;\nexports.Sigma = Sigma;\nexports.SigmaIcon = Sigma;\nexports.SigmaSquare = SigmaSquare;\nexports.SigmaSquareIcon = SigmaSquare;\nexports.Signal = Signal;\nexports.SignalHigh = SignalHigh;\nexports.SignalHighIcon = SignalHigh;\nexports.SignalIcon = Signal;\nexports.SignalLow = SignalLow;\nexports.SignalLowIcon = SignalLow;\nexports.SignalMedium = SignalMedium;\nexports.SignalMediumIcon = SignalMedium;\nexports.SignalZero = SignalZero;\nexports.SignalZeroIcon = SignalZero;\nexports.Siren = Siren;\nexports.SirenIcon = Siren;\nexports.SkipBack = SkipBack;\nexports.SkipBackIcon = SkipBack;\nexports.SkipForward = SkipForward;\nexports.SkipForwardIcon = SkipForward;\nexports.Skull = Skull;\nexports.SkullIcon = Skull;\nexports.Slack = Slack;\nexports.SlackIcon = Slack;\nexports.Slash = Slash;\nexports.SlashIcon = Slash;\nexports.Slice = Slice;\nexports.SliceIcon = Slice;\nexports.Sliders = Sliders;\nexports.SlidersHorizontal = SlidersHorizontal;\nexports.SlidersHorizontalIcon = SlidersHorizontal;\nexports.SlidersIcon = Sliders;\nexports.Smartphone = Smartphone;\nexports.SmartphoneCharging = SmartphoneCharging;\nexports.SmartphoneChargingIcon = SmartphoneCharging;\nexports.SmartphoneIcon = Smartphone;\nexports.SmartphoneNfc = SmartphoneNfc;\nexports.SmartphoneNfcIcon = SmartphoneNfc;\nexports.Smile = Smile;\nexports.SmileIcon = Smile;\nexports.SmilePlus = SmilePlus;\nexports.SmilePlusIcon = SmilePlus;\nexports.Snail = Snail;\nexports.SnailIcon = Snail;\nexports.Snowflake = Snowflake;\nexports.SnowflakeIcon = Snowflake;\nexports.Sofa = Sofa;\nexports.SofaIcon = Sofa;\nexports.SortAsc = ArrowUpNarrowWide;\nexports.SortAscIcon = ArrowUpNarrowWide;\nexports.SortDesc = ArrowDownWideNarrow;\nexports.SortDescIcon = ArrowDownWideNarrow;\nexports.Soup = Soup;\nexports.SoupIcon = Soup;\nexports.Space = Space;\nexports.SpaceIcon = Space;\nexports.Spade = Spade;\nexports.SpadeIcon = Spade;\nexports.Sparkle = Sparkle;\nexports.SparkleIcon = Sparkle;\nexports.Sparkles = Sparkles;\nexports.SparklesIcon = Sparkles;\nexports.Speaker = Speaker;\nexports.SpeakerIcon = Speaker;\nexports.SpellCheck = SpellCheck;\nexports.SpellCheck2 = SpellCheck2;\nexports.SpellCheck2Icon = SpellCheck2;\nexports.SpellCheckIcon = SpellCheck;\nexports.Spline = Spline;\nexports.SplineIcon = Spline;\nexports.Split = Split;\nexports.SplitIcon = Split;\nexports.SplitSquareHorizontal = SplitSquareHorizontal;\nexports.SplitSquareHorizontalIcon = SplitSquareHorizontal;\nexports.SplitSquareVertical = SplitSquareVertical;\nexports.SplitSquareVerticalIcon = SplitSquareVertical;\nexports.SprayCan = SprayCan;\nexports.SprayCanIcon = SprayCan;\nexports.Sprout = Sprout;\nexports.SproutIcon = Sprout;\nexports.Square = Square;\nexports.SquareAsterisk = SquareAsterisk;\nexports.SquareAsteriskIcon = SquareAsterisk;\nexports.SquareCode = SquareCode;\nexports.SquareCodeIcon = SquareCode;\nexports.SquareDashedBottom = SquareDashedBottom;\nexports.SquareDashedBottomCode = SquareDashedBottomCode;\nexports.SquareDashedBottomCodeIcon = SquareDashedBottomCode;\nexports.SquareDashedBottomIcon = SquareDashedBottom;\nexports.SquareDot = SquareDot;\nexports.SquareDotIcon = SquareDot;\nexports.SquareEqual = SquareEqual;\nexports.SquareEqualIcon = SquareEqual;\nexports.SquareGantt = GanttChartSquare;\nexports.SquareGanttIcon = GanttChartSquare;\nexports.SquareIcon = Square;\nexports.SquareKanban = KanbanSquare;\nexports.SquareKanbanDashed = KanbanSquareDashed;\nexports.SquareKanbanDashedIcon = KanbanSquareDashed;\nexports.SquareKanbanIcon = KanbanSquare;\nexports.SquareSlash = SquareSlash;\nexports.SquareSlashIcon = SquareSlash;\nexports.SquareStack = SquareStack;\nexports.SquareStackIcon = SquareStack;\nexports.Squirrel = Squirrel;\nexports.SquirrelIcon = Squirrel;\nexports.Stamp = Stamp;\nexports.StampIcon = Stamp;\nexports.Star = Star;\nexports.StarHalf = StarHalf;\nexports.StarHalfIcon = StarHalf;\nexports.StarIcon = Star;\nexports.StarOff = StarOff;\nexports.StarOffIcon = StarOff;\nexports.Stars = Sparkles;\nexports.StarsIcon = Sparkles;\nexports.StepBack = StepBack;\nexports.StepBackIcon = StepBack;\nexports.StepForward = StepForward;\nexports.StepForwardIcon = StepForward;\nexports.Stethoscope = Stethoscope;\nexports.StethoscopeIcon = Stethoscope;\nexports.Sticker = Sticker;\nexports.StickerIcon = Sticker;\nexports.StickyNote = StickyNote;\nexports.StickyNoteIcon = StickyNote;\nexports.StopCircle = StopCircle;\nexports.StopCircleIcon = StopCircle;\nexports.Store = Store;\nexports.StoreIcon = Store;\nexports.StretchHorizontal = StretchHorizontal;\nexports.StretchHorizontalIcon = StretchHorizontal;\nexports.StretchVertical = StretchVertical;\nexports.StretchVerticalIcon = StretchVertical;\nexports.Strikethrough = Strikethrough;\nexports.StrikethroughIcon = Strikethrough;\nexports.Subscript = Subscript;\nexports.SubscriptIcon = Subscript;\nexports.Subtitles = Subtitles;\nexports.SubtitlesIcon = Subtitles;\nexports.Sun = Sun;\nexports.SunDim = SunDim;\nexports.SunDimIcon = SunDim;\nexports.SunIcon = Sun;\nexports.SunMedium = SunMedium;\nexports.SunMediumIcon = SunMedium;\nexports.SunMoon = SunMoon;\nexports.SunMoonIcon = SunMoon;\nexports.SunSnow = SunSnow;\nexports.SunSnowIcon = SunSnow;\nexports.Sunrise = Sunrise;\nexports.SunriseIcon = Sunrise;\nexports.Sunset = Sunset;\nexports.SunsetIcon = Sunset;\nexports.Superscript = Superscript;\nexports.SuperscriptIcon = Superscript;\nexports.SwissFranc = SwissFranc;\nexports.SwissFrancIcon = SwissFranc;\nexports.SwitchCamera = SwitchCamera;\nexports.SwitchCameraIcon = SwitchCamera;\nexports.Sword = Sword;\nexports.SwordIcon = Sword;\nexports.Swords = Swords;\nexports.SwordsIcon = Swords;\nexports.Syringe = Syringe;\nexports.SyringeIcon = Syringe;\nexports.Table = Table;\nexports.Table2 = Table2;\nexports.Table2Icon = Table2;\nexports.TableIcon = Table;\nexports.TableProperties = TableProperties;\nexports.TablePropertiesIcon = TableProperties;\nexports.Tablet = Tablet;\nexports.TabletIcon = Tablet;\nexports.TabletSmartphone = TabletSmartphone;\nexports.TabletSmartphoneIcon = TabletSmartphone;\nexports.Tablets = Tablets;\nexports.TabletsIcon = Tablets;\nexports.Tag = Tag;\nexports.TagIcon = Tag;\nexports.Tags = Tags;\nexports.TagsIcon = Tags;\nexports.Tally1 = Tally1;\nexports.Tally1Icon = Tally1;\nexports.Tally2 = Tally2;\nexports.Tally2Icon = Tally2;\nexports.Tally3 = Tally3;\nexports.Tally3Icon = Tally3;\nexports.Tally4 = Tally4;\nexports.Tally4Icon = Tally4;\nexports.Tally5 = Tally5;\nexports.Tally5Icon = Tally5;\nexports.Target = Target;\nexports.TargetIcon = Target;\nexports.Tent = Tent;\nexports.TentIcon = Tent;\nexports.Terminal = Terminal;\nexports.TerminalIcon = Terminal;\nexports.TerminalSquare = TerminalSquare;\nexports.TerminalSquareIcon = TerminalSquare;\nexports.TestTube = TestTube;\nexports.TestTube2 = TestTube2;\nexports.TestTube2Icon = TestTube2;\nexports.TestTubeIcon = TestTube;\nexports.TestTubes = TestTubes;\nexports.TestTubesIcon = TestTubes;\nexports.Text = Text;\nexports.TextCursor = TextCursor;\nexports.TextCursorIcon = TextCursor;\nexports.TextCursorInput = TextCursorInput;\nexports.TextCursorInputIcon = TextCursorInput;\nexports.TextIcon = Text;\nexports.TextQuote = TextQuote;\nexports.TextQuoteIcon = TextQuote;\nexports.TextSelect = TextSelect;\nexports.TextSelectIcon = TextSelect;\nexports.TextSelection = TextSelect;\nexports.TextSelectionIcon = TextSelect;\nexports.Thermometer = Thermometer;\nexports.ThermometerIcon = Thermometer;\nexports.ThermometerSnowflake = ThermometerSnowflake;\nexports.ThermometerSnowflakeIcon = ThermometerSnowflake;\nexports.ThermometerSun = ThermometerSun;\nexports.ThermometerSunIcon = ThermometerSun;\nexports.ThumbsDown = ThumbsDown;\nexports.ThumbsDownIcon = ThumbsDown;\nexports.ThumbsUp = ThumbsUp;\nexports.ThumbsUpIcon = ThumbsUp;\nexports.Ticket = Ticket;\nexports.TicketIcon = Ticket;\nexports.Timer = Timer;\nexports.TimerIcon = Timer;\nexports.TimerOff = TimerOff;\nexports.TimerOffIcon = TimerOff;\nexports.TimerReset = TimerReset;\nexports.TimerResetIcon = TimerReset;\nexports.ToggleLeft = ToggleLeft;\nexports.ToggleLeftIcon = ToggleLeft;\nexports.ToggleRight = ToggleRight;\nexports.ToggleRightIcon = ToggleRight;\nexports.Tornado = Tornado;\nexports.TornadoIcon = Tornado;\nexports.Touchpad = Touchpad;\nexports.TouchpadIcon = Touchpad;\nexports.TouchpadOff = TouchpadOff;\nexports.TouchpadOffIcon = TouchpadOff;\nexports.TowerControl = TowerControl;\nexports.TowerControlIcon = TowerControl;\nexports.ToyBrick = ToyBrick;\nexports.ToyBrickIcon = ToyBrick;\nexports.Tractor = Tractor;\nexports.TractorIcon = Tractor;\nexports.TrafficCone = TrafficCone;\nexports.TrafficConeIcon = TrafficCone;\nexports.Train = TramFront;\nexports.TrainFront = TrainFront;\nexports.TrainFrontIcon = TrainFront;\nexports.TrainFrontTunnel = TrainFrontTunnel;\nexports.TrainFrontTunnelIcon = TrainFrontTunnel;\nexports.TrainIcon = TramFront;\nexports.TrainTrack = TrainTrack;\nexports.TrainTrackIcon = TrainTrack;\nexports.TramFront = TramFront;\nexports.TramFrontIcon = TramFront;\nexports.Trash = Trash;\nexports.Trash2 = Trash2;\nexports.Trash2Icon = Trash2;\nexports.TrashIcon = Trash;\nexports.TreeDeciduous = TreeDeciduous;\nexports.TreeDeciduousIcon = TreeDeciduous;\nexports.TreePine = TreePine;\nexports.TreePineIcon = TreePine;\nexports.Trees = Trees;\nexports.TreesIcon = Trees;\nexports.Trello = Trello;\nexports.TrelloIcon = Trello;\nexports.TrendingDown = TrendingDown;\nexports.TrendingDownIcon = TrendingDown;\nexports.TrendingUp = TrendingUp;\nexports.TrendingUpIcon = TrendingUp;\nexports.Triangle = Triangle;\nexports.TriangleIcon = Triangle;\nexports.TriangleRight = TriangleRight;\nexports.TriangleRightIcon = TriangleRight;\nexports.Trophy = Trophy;\nexports.TrophyIcon = Trophy;\nexports.Truck = Truck;\nexports.TruckIcon = Truck;\nexports.Turtle = Turtle;\nexports.TurtleIcon = Turtle;\nexports.Tv = Tv;\nexports.Tv2 = Tv2;\nexports.Tv2Icon = Tv2;\nexports.TvIcon = Tv;\nexports.Twitch = Twitch;\nexports.TwitchIcon = Twitch;\nexports.Twitter = Twitter;\nexports.TwitterIcon = Twitter;\nexports.Type = Type;\nexports.TypeIcon = Type;\nexports.Umbrella = Umbrella;\nexports.UmbrellaIcon = Umbrella;\nexports.Underline = Underline;\nexports.UnderlineIcon = Underline;\nexports.Undo = Undo;\nexports.Undo2 = Undo2;\nexports.Undo2Icon = Undo2;\nexports.UndoDot = UndoDot;\nexports.UndoDotIcon = UndoDot;\nexports.UndoIcon = Undo;\nexports.UnfoldHorizontal = UnfoldHorizontal;\nexports.UnfoldHorizontalIcon = UnfoldHorizontal;\nexports.UnfoldVertical = UnfoldVertical;\nexports.UnfoldVerticalIcon = UnfoldVertical;\nexports.Ungroup = Ungroup;\nexports.UngroupIcon = Ungroup;\nexports.Unlink = Unlink;\nexports.Unlink2 = Unlink2;\nexports.Unlink2Icon = Unlink2;\nexports.UnlinkIcon = Unlink;\nexports.Unlock = Unlock;\nexports.UnlockIcon = Unlock;\nexports.Unplug = Unplug;\nexports.UnplugIcon = Unplug;\nexports.Upload = Upload;\nexports.UploadCloud = UploadCloud;\nexports.UploadCloudIcon = UploadCloud;\nexports.UploadIcon = Upload;\nexports.Usb = Usb;\nexports.UsbIcon = Usb;\nexports.User = User;\nexports.User2 = User2;\nexports.User2Icon = User2;\nexports.UserCheck = UserCheck;\nexports.UserCheck2 = UserCheck2;\nexports.UserCheck2Icon = UserCheck2;\nexports.UserCheckIcon = UserCheck;\nexports.UserCircle = UserCircle;\nexports.UserCircle2 = UserCircle2;\nexports.UserCircle2Icon = UserCircle2;\nexports.UserCircleIcon = UserCircle;\nexports.UserCog = UserCog;\nexports.UserCog2 = UserCog2;\nexports.UserCog2Icon = UserCog2;\nexports.UserCogIcon = UserCog;\nexports.UserIcon = User;\nexports.UserMinus = UserMinus;\nexports.UserMinus2 = UserMinus2;\nexports.UserMinus2Icon = UserMinus2;\nexports.UserMinusIcon = UserMinus;\nexports.UserPlus = UserPlus;\nexports.UserPlus2 = UserPlus2;\nexports.UserPlus2Icon = UserPlus2;\nexports.UserPlusIcon = UserPlus;\nexports.UserSquare = UserSquare;\nexports.UserSquare2 = UserSquare2;\nexports.UserSquare2Icon = UserSquare2;\nexports.UserSquareIcon = UserSquare;\nexports.UserX = UserX;\nexports.UserX2 = UserX2;\nexports.UserX2Icon = UserX2;\nexports.UserXIcon = UserX;\nexports.Users = Users;\nexports.Users2 = Users2;\nexports.Users2Icon = Users2;\nexports.UsersIcon = Users;\nexports.Utensils = Utensils;\nexports.UtensilsCrossed = UtensilsCrossed;\nexports.UtensilsCrossedIcon = UtensilsCrossed;\nexports.UtensilsIcon = Utensils;\nexports.UtilityPole = UtilityPole;\nexports.UtilityPoleIcon = UtilityPole;\nexports.Variable = Variable;\nexports.VariableIcon = Variable;\nexports.Vegan = Vegan;\nexports.VeganIcon = Vegan;\nexports.VenetianMask = VenetianMask;\nexports.VenetianMaskIcon = VenetianMask;\nexports.Verified = BadgeCheck;\nexports.VerifiedIcon = BadgeCheck;\nexports.Vibrate = Vibrate;\nexports.VibrateIcon = Vibrate;\nexports.VibrateOff = VibrateOff;\nexports.VibrateOffIcon = VibrateOff;\nexports.Video = Video;\nexports.VideoIcon = Video;\nexports.VideoOff = VideoOff;\nexports.VideoOffIcon = VideoOff;\nexports.Videotape = Videotape;\nexports.VideotapeIcon = Videotape;\nexports.View = View;\nexports.ViewIcon = View;\nexports.Voicemail = Voicemail;\nexports.VoicemailIcon = Voicemail;\nexports.Volume = Volume;\nexports.Volume1 = Volume1;\nexports.Volume1Icon = Volume1;\nexports.Volume2 = Volume2;\nexports.Volume2Icon = Volume2;\nexports.VolumeIcon = Volume;\nexports.VolumeX = VolumeX;\nexports.VolumeXIcon = VolumeX;\nexports.Vote = Vote;\nexports.VoteIcon = Vote;\nexports.Wallet = Wallet;\nexports.Wallet2 = Wallet2;\nexports.Wallet2Icon = Wallet2;\nexports.WalletCards = WalletCards;\nexports.WalletCardsIcon = WalletCards;\nexports.WalletIcon = Wallet;\nexports.Wallpaper = Wallpaper;\nexports.WallpaperIcon = Wallpaper;\nexports.Wand = Wand;\nexports.Wand2 = Wand2;\nexports.Wand2Icon = Wand2;\nexports.WandIcon = Wand;\nexports.Warehouse = Warehouse;\nexports.WarehouseIcon = Warehouse;\nexports.Watch = Watch;\nexports.WatchIcon = Watch;\nexports.Waves = Waves;\nexports.WavesIcon = Waves;\nexports.Webcam = Webcam;\nexports.WebcamIcon = Webcam;\nexports.Webhook = Webhook;\nexports.WebhookIcon = Webhook;\nexports.Wheat = Wheat;\nexports.WheatIcon = Wheat;\nexports.WheatOff = WheatOff;\nexports.WheatOffIcon = WheatOff;\nexports.WholeWord = WholeWord;\nexports.WholeWordIcon = WholeWord;\nexports.Wifi = Wifi;\nexports.WifiIcon = Wifi;\nexports.WifiOff = WifiOff;\nexports.WifiOffIcon = WifiOff;\nexports.Wind = Wind;\nexports.WindIcon = Wind;\nexports.Wine = Wine;\nexports.WineIcon = Wine;\nexports.WineOff = WineOff;\nexports.WineOffIcon = WineOff;\nexports.Workflow = Workflow;\nexports.WorkflowIcon = Workflow;\nexports.WrapText = WrapText;\nexports.WrapTextIcon = WrapText;\nexports.Wrench = Wrench;\nexports.WrenchIcon = Wrench;\nexports.X = X;\nexports.XCircle = XCircle;\nexports.XCircleIcon = XCircle;\nexports.XIcon = X;\nexports.XOctagon = XOctagon;\nexports.XOctagonIcon = XOctagon;\nexports.XSquare = XSquare;\nexports.XSquareIcon = XSquare;\nexports.Youtube = Youtube;\nexports.YoutubeIcon = Youtube;\nexports.Zap = Zap;\nexports.ZapIcon = Zap;\nexports.ZapOff = ZapOff;\nexports.ZapOffIcon = ZapOff;\nexports.ZoomIn = ZoomIn;\nexports.ZoomInIcon = ZoomIn;\nexports.ZoomOut = ZoomOut;\nexports.ZoomOutIcon = ZoomOut;\nexports.createLucideIcon = createLucideIcon;\nexports.icons = index; //# sourceMappingURL=lucide-react.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./node_modules/lucide-react/dist/cjs/lucide-react.js\n");

/***/ })

};
;